
package com.belk.pep.constants;

import java.util.logging.Logger;

/**
 * The Class XqueryConstants.
 *
 * @author AFUSOS3
 */
public class XqueryConstants {

    /** The Constant LOGGER. */
    private final static Logger LOGGER = Logger.getLogger(XqueryConstants.class.getName());

    /**
     * Gets the cars brand query.
     *
     * @param orinNumber the orin number
     * @param supplierId the supplier id
     * @return the cars brand query
     */
    public String getCarsBrandQuery(String orinNumber, String supplierId) {
        
        String GET_CARS_BRAND_XQUERY = " WITH " 
                +"   Input(SUPPLIER_ID, ORIN) AS " 
                +"   ( " 
                +"     SELECT " 
                +"       '"+supplierId+"' SUPPLIER_ID, " 
                +"       '"+orinNumber+"' ORIN " 
                +"     FROM " 
                +"       dual " 
                +"   ), " 
                +"    referencefirst AS " 
                +"   ( " 
                +"     SELECT " 
                +"       LISTAGG(CODE,'|') WITHIN GROUP ( " 
                +"     ORDER BY " 
                +"       CODE) CODE, " 
                +"       S.SUPPLIERID, " 
                +"       ARD.CONTAINER, " 
                +"       IP.ORIN " 
                +"     FROM " 
                +"       VENDORPORTAL.ADSE_REFERENCE_DATA ARD, " 
                +"       INPUT IP, " 
                +"       XMLTABLE( " 
                +"       ' <category>   " 
                +"             <code>{  for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec  " 
                +"       return      " 
                +"       if (not( ($j) is ($XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec[last()])[1] ) and not(empty($j//Code)) and not($j//Code = \"\"))  " 
                +"       then    " 
                +"       concat(concat($j//Code,\"-\"),$j//Description)                   " 
                +"       else                     " 
                +"       string(concat(concat($j//Code,\"-\"),$j//Description))     }   " 
                +"               </code>     " 
                +"               <id>{    for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec    return $i//Supplier_Site_ID    }    </id>  " 
                +"               </category>' " 
                +"       passing ARD.xml_data AS \"XML_DATA\" COLUMNS  " 
                +"       CODE VARCHAR(100) path  '/category/code',  " 
                +"       SUPPLIERID  VARCHAR(100) path  '/category/id') S " 
                +"     WHERE " 
                +"       IP.SUPPLIER_ID  =S.SUPPLIERID " 
                +"     AND ARD.CONTAINER = 'Cars_Brand_Names' " 
                +"     GROUP BY " 
                +"       S.SUPPLIERID, " 
                +"       ARD.CONTAINER, " 
                +"       IP.ORIN " 
                +"   ), " 
                +"    pettable AS " 
                +"   ( " 
                +"     SELECT " 
                +"       RF.CODE, " 
                +"       RF.SUPPLIERID, " 
                +"       RF.CONTAINER, " 
                +"        " 
                +"       T.OMNICODE, " 
                +"       APC.MDMID " 
                +"     FROM " 
                +"       referencefirst RF, " 
                +"       VENDORPORTAL.ADSE_PET_CATALOG APC, " 
                +"       XMLTABLE( " 
                +"       '  for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec   " 
                +"       let      " 
                +"       $code := $j//Cars_Brand  " 
                +"       return       " 
                +"       <category>     " 
                +"       <code>{$code}</code>    " 
                +"       </category>' " 
                +"       passing APC.xml_data AS \"XML_DATA\" COLUMNS  " 
                +"       OMNICODE VARCHAR(100) path '/category/code') T " 
                +"     WHERE " 
                +"       APC.MDMID = RF.ORIN " 
                +"   ), " 
                +"  " 
                +"   referencetable AS " 
                +"   ( " 
                +"     SELECT " 
                +"       V.SUPPLIERIDS, " 
                +"       V.IDCHECK " 
                +"     FROM " 
                +"       INPUT I, " 
                +"       VENDORPORTAL.ADSE_REFERENCE_DATA ARDT, " 
                +"       XMLTABLE( " 
                +"       '  <category>     " 
                +"       <code>{  for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec  return         " 
                +"       string(concat(concat($j//Code,\"-\"),$j//Description))     }   " 
                +"       </code>     " 
                +"       <id>{    for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec    return $i//Supplier_Site_ID    }    </id>    " 
                +"       <check>{  for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec  return         string($j//Code)     }   </check>   " 
                +"       </category>' " 
                +"       passing ARDT.xml_data AS \"XML_DATA\" COLUMNS  " 
                +"         " 
                +"       SUPPLIERIDS  VARCHAR(100) path '/category/id',  " 
                +"       IDCHECK  VARCHAR(100) path '/category/check') V " 
                +"     WHERE " 
                +"       ARDT.CONTAINER = 'Cars_Brand_Names' " 
                +"     AND I.SUPPLIER_ID=V.SUPPLIERIDS " 
                +"   ) " 
                +"  " 
                +" SELECT " 
                +"   PT.CODE CAR_BRANDS, " 
                +"   PT.OMNICODE CARS_BRAND, " 
                +"   PT.SUPPLIERID SUPPLIER, " 
                +"   PT.CONTAINER CONTAINER_TYPE, " 
                +"   PT.MDMID ORIN " 
                +" FROM " 
                +"   PETTABLE PT " 
                +" LEFT OUTER JOIN referencetable rt " 
                +" ON " 
                +"   PT.OMNICODE = RT.IDCHECK " ;
        
       /* final String GET_CARS_BRAND_XQUERY =   " With "
                +" Input(SUPPLIER_ID, ORIN)  "
                +" AS  "
                +" ( SELECT  '"+supplierId+"' SUPPLIER_ID, '"+orinNumber+"' ORIN FROM dual ), "
                +"  "
                +" referencefirst AS( "
                +" SELECT "
                +" LISTAGG(CODE,'|') WITHIN GROUP (ORDER BY CODE) CODE, S.SUPPLIERID, ARD.CONTAINER, IP.ORIN "
                +" FROM  "
                +" VENDORPORTAL.ADSE_REFERENCE_DATA ARD, INPUT IP, "
                +" XMLTABLE(' "
                +" <category> "
                +"   <code>{ "
                +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +" return "
                +"     if (not( ($j) is ($XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec[last()])[1] ) and not(empty($j//Code)) and not($j//Code = \"\")) then  "
                +"                        concat(concat($j//Code,\"-\"),$j//Description) "
                +"                     else "
                +"                        string(concat(concat($j//Code,\"-\"),$j//Description)) "
                +"    }  "
                +" </code>  "
                +"   <id>{ "
                +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +"   return $i//Supplier_Site_ID "
                +"   } "
                +"   </id>  "
                +"   </category>' "
                +"    passing "
                +"       ARD.xml_data AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     CODE VARCHAR(100) path '/category/code', "
                +"     SUPPLIERID VARCHAR(100) path '/category/id') S "
                +" WHERE  "
                +" IP.SUPPLIER_ID=S.SUPPLIERID "
                +" AND "
                +" ARD.CONTAINER = 'Cars_Brand_Names' "
                +" GROUP BY "
                +" S.SUPPLIERID, ARD.CONTAINER, IP.ORIN), "
                +"  "
                +" pettable AS( "
                +" select RF.CODE, RF.SUPPLIERID, RF.CONTAINER, T.OMNICODE, APC.MDMID "
                +" FROM "
                +" referencefirst RF, VENDORPORTAL.ADSE_PET_CATALOG APC, "
                +" XMLTABLE(' "
                +" for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec "
                +" let "
                +"     $code := $j//Cars_Brand "
                +" return "
                +"  "
                +"   <category> "
                +"   <code>{$code}</code>  "
                +"   </category>' "
                +"    passing "
                +"       APC.xml_data AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     OMNICODE VARCHAR(100) path '/category/code') T "
                +" WHERE "
                +" APC.MDMID = RF.ORIN), "
                +"  "
                +"  "
                +" referencetable AS( "
                +" SELECT  "
                +" V.CODEDESCRIPTION CAR_BRAND, "
                +" V.SUPPLIERIDS, "
                +" V.IDCHECK "
                +" FROM "
                +" INPUT I,VENDORPORTAL.ADSE_REFERENCE_DATA ARDT,  "
                +" XMLTABLE(' "
                +" <category> "
                +"   <code>{ "
                +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +" return "
                +"        string(concat(concat($j//Code,\"-\"),$j//Description)) "
                +"    }  "
                +" </code>  "
                +"   <id>{ "
                +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +"   return $i//Supplier_Site_ID "
                +"   } "
                +"   </id>  "
                +"   <check>{ "
                +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +" return "
                +"        string($j//Code) "
                +"    }  "
                +" </check> "
                +"   </category>' "
                +"    passing "
                +"       ARDT.xml_data AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     CODEDESCRIPTION VARCHAR(100) path '/category/code', "
                +"     SUPPLIERIDS VARCHAR(100) path '/category/id', "
                +"     IDCHECK VARCHAR(100) path '/category/check') V "
                +"     WHERE "
                +"     ARDT.CONTAINER = 'Cars_Brand_Names' "
                +"   AND I.SUPPLIER_ID=V.SUPPLIERIDS "
                +" ) "
                +"      "
                +" SELECT PT.CODE CAR_BRANDS, "
                +" RT.CAR_BRAND, "
                +" PT.SUPPLIERID SUPPLIER,  "
                +" PT.CONTAINER CONTAINER_TYPE, "
                +" PT.MDMID ORIN "
                +" FROM "
                +" PETTABLE PT LEFT OUTER JOIN referencetable rt  "
                +" ON  "
                +" PT.OMNICODE = RT.IDCHECK " ;*/

        System.out.println("Query - >"+GET_CARS_BRAND_XQUERY);
        return GET_CARS_BRAND_XQUERY;


    }


    /**
     * Gets the child sku details.
     *
     * @param orinNumber the orin number
     * @return the child sku details
     */
    public  String getChildSKUDetails(String orinNumber) {

        final String GET_CHILD_SKU_INFORMATION_XQUERY=


                " with "
                        +  " INPUT( ORIN) as ( "
                        + " Select "

               + orinNumber
               +" ORIN FROM dual) ,"


              + " TypeIndex(indx, typ) as ((Select 1 indx, 'Style' typ  from  dual) union (Select 2 indx, 'StyleColor' typ  from  dual) union (select 3 indx, 'SKU' typ from dual))"

              +"  select aic.MDMID ORIN, ven_name VENDOR_NAME, "
              +"          Name Style_Name, nvl(aic.PARENT_MDMID, aic.MDMID) Style, "
              +"          colorCode COLOR_CODE, colorDesc COLOR_NAME, sizeDesc SIZE_NAME, aic.ENTRY_TYPE "
              +"   from VENDORPORTAL.ADSE_ITEM_CATALOG aic, XMLTABLE('for $i in $XML_DATA/pim_entry/entry "
              +"            return <out> "
              +"                      <supplier_id>{$i//Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id> "
              +"                        <brand>{$i/Item_UDA_Spec/Brand}</brand> "
              +"                        <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode>"
              +"                    <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc> "
              +"                    <sizeDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description}</sizeDesc>"
              +"                  </out>' "
              +"      passing aic.XML_DATA as \"XML_DATA\" "
              +"      columns "
              +"      supplier_id varchar(10) path '/out/supplier_id',"
              +"      Brand varchar(10) path '/out/brand',"
              +"      colorCode varchar2(10) path '/out/colorCode',"
              +"      colorDesc varchar2(20) path '/out/colorDesc',"
              +"      sizeDesc varchar2(20) path '/out/sizeDesc') i, VENDORPORTAL.ADSE_PET_CATALOG pet,"
              +" XMLTABLE('for $pet in $pets/pim_entry/entry  "
              +" return <out>   "
              +"  <name>{$pet/Pet_Ctg_Spec/Name}</name> "
              +"  <priority>{$pet/Pet_Ctg_Spec/PO_Number}</priority>"
              +"  </out>' "
              +"  passing pet.xml_data AS \"pets\" "
              +"  Columns "
              +"  Name VARCHAR2(20) path '/out/name',"
              +"  priority varchar2(10) path '/out/priority') p, VENDORPORTAL.ADSE_SUPPLIER_CATALOG supplier,"
              +"  XMLTABLE('for $supplier in $supplierCatalog/pim_entry/entry/Supplier_Ctg_Spec  let $ven_name := $supplier/Name return  <out> <ven_name>{$ven_name}</ven_name> </out>' "
              +"  PASSING supplier.XML_DATA AS \"supplierCatalog\" "
              +"  columns "
              +"  ven_name VARCHAR2(80) path '/out/ven_name') s, Input inp "
              +"  where "
              +"  aic.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' and aic.mdmid = pet.mdmid "
              +"  and pet.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' "
              +"  and supplier.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' "
              +"  and i.supplier_id = supplier.mdmid "
              +"      and (aic.mdmid = inp.ORIN or aic.parent_mdmid = inp.ORIN)  and "
              +"      aic.Entry_type = 'SKU'";

        return GET_CHILD_SKU_INFORMATION_XQUERY;
    }





    /**
     * Gets the content history.
     *
     * @param orinNumber the orin number
     * @return the content history
     */
    public  String getContentHistory(String orinNumber) {
        
        
        String GET_CONTENT_HISTORY_INFORMATION_XQUERY = " WITH Input(ORIN) AS " 
                +"   ( SELECT '"+orinNumber+"' FROM dual " 
                +"   ) " 
                +" SELECT pet.mdmid, " 
                +"   CASE " 
                +"     WHEN i.createdOn IS NOT NULL " 
                +"     THEN TO_CHAR(TO_DATE(i.createdOn, 'YYYY-MM-DD'),'MM/DD/YYYY') " 
                +"     ELSE NULL " 
                +"   END AS createdOn, " 
                +"   i.createdBy, " 
                +"   i.lastUpdateBy, " 
                +"   CASE " 
                +"     WHEN i.lastUpdateOn IS NOT NULL " 
                +"     THEN TO_CHAR(TO_DATE(i.lastUpdateOn, 'YYYY-MM-DD'),'MM/DD/YYYY') " 
                +"     ELSE NULL " 
                +"   END AS lastUpdateOn, " 
                +"   (SELECT thevalue " 
                +"   FROM VENDORPORTAL.ADSE_REFERENCE_DATA " 
                +"   WHERE mdmid   = i.currentState " 
                +"   AND Container = 'ContentState_Lookup' " 
                +"   ) Content_Status, " 
                +"   pet.entry_type " 
                +" FROM VENDORPORTAL.ADSE_PET_CATALOG pet, " 
                +"   XMLTable( 'for $i in $pet/pim_entry/entry/Pet_Ctg_Spec/Audit              " 
                +" let       " 
                +" $lastState := $i//Last_State,     " 
                +" $lastUpdate := $i//Last_Modified_On,          " 
                +" $lastUpdateBy := $i//Last_Modified_By,      " 
                +" $createdBy := $i//..//Created_By,            " 
                +" $createdOn := $i//..//Created_On,        " 
                +" $currentState := $i//..//..//Content/Last_State,         " 
                +" $container := $pet/pim_entry/entry/Pet_Ctg_Spec/ContentState       " 
                +" return                " 
                +" <petStatus>                      " 
                +" <lastState>{$lastState}</lastState>                " 
                +" <lastUpdate>{$lastUpdate}</lastUpdate>                " 
                +" <lastUpdateBy>{$lastUpdateBy}</lastUpdateBy>                 " 
                +" <createdBy>{$createdBy}</createdBy>                           " 
                +" <createdOn>{$createdOn}</createdOn>                            " 
                +" <currentState>{$currentState}</currentState>                    " 
                +" <container>{$container}</container>       " 
                +" </petStatus>' passing pet.XML_DATA AS \"pet\" columns lastState VARCHAR2(40) path '/petStatus/lastState' , lastUpdateOn VARCHAR2 " 
                +"   (10) path '/petStatus/lastUpdate' , lastUpdateBypath '/petStatus/lastUpdateBy', createdBy VARCHAR2( " 
                +"   40) path '/petStatus/createdBy', createdOnpath '/petStatus/createdOn', currentState VARCHAR2( " 
                +"   40) path '/petStatus/currentState', containerpath '/petStatus/container' ) i , " 
                +"   Input inp " 
                +" WHERE pet.mdmid LIKE concat(inp.ORIN,'%') " ;

        LOGGER.info("GET_CONTENT_HISTORY_INFORMATION_XQUERY-----"+GET_CONTENT_HISTORY_INFORMATION_XQUERY);


        return GET_CONTENT_HISTORY_INFORMATION_XQUERY;

    }

    /**
     * Gets the copy attribute details.
     *
     * @param orinNumber the orin number
     * @return the copy attribute details
     */
    public  String getCopyAttributeDetails(String orinNumber) {

        final String GET_COPY_ATTRIBUTE_INFORMATION_XQUERY=

                " with " + "  INPUT( ORIN) as (" + "  Select "
                        + orinNumber
                        + "  ORIN FROM dual),"

                    + "  TypeIndex(indx, typ) as ((Select 1 indx, 'Style' typ  from  dual) union (select 2 indx, 'StyleColor' typ from dual) union (select 3 indx, 'SKU' typ from dual)),"

                    + "  Items as (select "
                    + "          aic.MDMID ORIN, (case when aic.PARENT_MDMID is null then aic.MDMID else aic.PARENT_MDMID end) Style_Id,"
                    + "         (VENDOR_COLOR_CODE || ' ' || VENDOR_COLOR_DESC) Vendor_Color, "
                    + "           VENDOR_SIZE, aic.ENTRY_TYPE "
                    + "   from VENDORPORTAL.ADSE_ITEM_CATALOG aic, XMLTABLE('for $i in $XML_DATA/pim_entry/entry "
                    + "            let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),"
                    + "                $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and "
                    + "                    ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),"
                    + "                $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\" "
                    + "       return  <out> "
                    + "                   <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\" )[5]}</dept_id> "
                    + "                  <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id> "
                    + "                   <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id> "
                    + "                  <desc>{$i/Item_Ctg_Spec/Description/Long}</desc> "
                    + "                  <flag>{$uda80 and $non_sellable_pack and $removal}</flag> "
                    + "                   <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode> "
                    + "                   <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc> "
                    + "               <size>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description}</size> "
                    + "           </out>' "
                    + "    passing aic.XML_DATA as \"XML_DATA\" "
                    + "    columns "
                    + "    flag varchar(10) path '/out/flag',"
                    + "    VENDOR_COLOR_CODE   varchar2(10) path '/out/colorCode',"
                    + "    VENDOR_COLOR_DESC   varchar2(40) path '/out/colorDesc',"
                    + "    VENDOR_SIZE    varchar2(10) path '/out/size') i, Input inp "
                    + " where flag = 'false' and "
                    + "  aic.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' "
                    + "     and (aic.Parent_MDMID=inp.ORIN or aic.MDMID=inp.ORIN) and "
                    + "     aic.Entry_type = 'SKU') " + "    select * from items ";

        return GET_COPY_ATTRIBUTE_INFORMATION_XQUERY;

    }
    /**
     * Gets the family category from iph.
     *
     * @param categoryId the category id
     * @return the family category from iph
     */
    public  String getFamilyCategoryFromIPH (String categoryId){
        String query = " WITH Input(MDMID) AS "
                +"   (SELECT '"+categoryId+"' MDMID FROM dual "
                +"   ) , "
                +"   attribfieldvalue AS "
                +"   (SELECT iph.MDMID, "
                +"     s.SEC_SPEC_VALUE, "
                +"     s.SEC_SPEC_VALUE1 "
                +"   FROM Input inp, "
                +"     VENDORPORTAL.ADSE_ITEM_PRIMARY_HIERARCHY IPH , "
                +"     XMLTABLE('    "
                +" for $j in $XML_DATA/pim_category/iph_category_header   "
                +" let     "
                +" $fullPath := $j//full_path   , "
                +"  "
                +" $categoryname := tokenize($j//full_path, \"///\") "
                +"  "
                +" return "
                +" <category>   "
                +"  "
                +" <data>{$fullPath}</data>   "
                +" <categoryname>{$categoryname}</categoryname>   "
                +"  "
                +" </category>' passing IPH.xml_data AS \"XML_DATA\" COLUMNS SEC_SPEC_VALUE VARCHAR(100) path '/category/data', SEC_SPEC_VALUE1 VARCHAR(100) path '/category/categoryname' ) s "
                +"   WHERE iph.MDMID =inp.mdmid "
                +"   ) , "
                +"   codeDescVal AS "
                +"   (SELECT regexp_substr(atv.SEC_SPEC_VALUE,'[^///]+',1,LEVEL) AS codeDesc "
                +"   FROM dual, "
                +"     attribfieldvalue atv "
                +"     CONNECT BY regexp_substr(atv.SEC_SPEC_VALUE,'[^///]+',1,LEVEL) IS NOT NULL "
                +"   ) , "
                +"   allCategory AS "
                +"   (SELECT SUBSTR(cdv.codeDesc, 1, Instr(cdv.codeDesc, '-') - 1) CategoryId, "
                +"     SUBSTR(cdv.codeDesc, Instr(cdv.codeDesc, '-')          + 1) CategoryName "
                +"   FROM dual, "
                +"     codeDescVal cdv "
                +"   ) "
                +" SELECT CategoryId, "
                +"   CategoryName "
                +" FROM allCategory "
                +" WHERE CategoryId IS NOT NULL  " ;
        System.out.println("query--getFamilyCategoryFromIPH---"+query);
        return query;

    }


    /**
     * Gets the global attributes query.
     *
     * @param orinNumber the orin number
     * @return the global attributes query
     */
    public String getGlobalAttributesQuery(String orinNumber){

        String GET_GLOBAL_ATTRIBUTES_XQUERY = "   WITH Input(ORIN) AS " 
                +"       ( SELECT '"+orinNumber+"' ORIN FROM dual " 
                +"       ), " 
                +"     PetDetails AS ( " 
                +"     SELECT  " 
                +"       p.OmniChannelBrand, " 
                +"       p.GXS_Long_Description Long_Description, " 
                +"       p.Belk_Exclusive, " 
                +"       p.Channel_Exclusive, " 
                +"        " 
                +"       p.BOPIS, " 
                +"       p.ImportedOrDomestic, " 
                +"       pet.mdmid, " 
                +"       pet.entry_type , " 
                +"       p.Is_PYG, " 
                +"       p.is_GWP, " 
                +"       p.is_PWP " 
                +"     FROM vendorportal.ADSE_PET_CATALOG pet, " 
                +"       XMLTable( 'for $i in $item/pim_entry/entry/*        " 
                +"       let  " 
                +"       $item_type := $i/../../pet_entry_header/category_paths/category[pk = (\"Style\", \"ComplexPack\")]      " 
                +"       where name($i) eq concat(\"Ecomm_\",$item_type//pk,\"_Spec\")      " 
                +"       return $i'  " 
                +"       passing pet.XML_DATA AS \"item\" columns  " 
                +"       OmniChannelBrand VARCHAR2(50) path 'OmniChannelBrand',  " 
                +"       Product_Description VARCHAR2(60) path 'Product_Description',  " 
                +"       Launch_Date VARCHAR2(50) path 'Launch_Date',  " 
                +"       Belk_Exclusive VARCHAR2(10) path 'Belk_Exclusive',  " 
                +"       Channel_Exclusive VARCHAR2(10) path 'Channel_Exclusive',  " 
                +"       SDF VARCHAR2(50) path 'Supplier_Direct_Fulfillment',  " 
                +"       Product_Dimensions_UOM VARCHAR2(50) path 'Product_Dimensions/Product_Dimensions_UOM',  " 
                +"       Product_Length VARCHAR2(50) path 'Product_Dimensions/Length',  " 
                +"       Product_Height VARCHAR2(50) path 'Product_Dimensions/Height',  " 
                +"       Product_Width VARCHAR2(50) path 'Product_Dimensions/Width',  " 
                +"       Product_Weight VARCHAR2(40) path 'Product_Weight/Weight',  " 
                +"       Product_Weight_UOM VARCHAR2(40) path 'Product_Weight/UOM',  " 
                +"       BOPIS VARCHAR2(60) " 
                +"       path 'BOPIS',  " 
                +"       Gift_Box VARCHAR2(10) path 'Gift_Box',  " 
                +"       ImportedOrDomestic VARCHAR2(10) path 'if(SourcedDomestically eq \"false\") then \"Imported\" else \"Domestic\"' ,  " 
                +"       GXS_Long_Description VARCHAR2(40) path 'GXS_Long_Description',  " 
                +"       Product_Name VARCHAR2(40) path 'Product_Name',  " 
                +"       PO_Box_Shippable VARCHAR2(40) path 'PO_Box_Shippable',  " 
                +"       cOPY_BULLET VARCHAR2(40) path 'cOPY_BULLET',  " 
                +"       Fraud_Quantity VARCHAR2(40) path 'Fraud_Quantity',  " 
                +"       Is_PYG VARCHAR2(40) path 'Is_PYG',  " 
                +"       Is_GWP VARCHAR2(40) path 'Is_GWP',  " 
                +"       Is_PWP VARCHAR2(40) path 'Is_PWP' ) p, " 
                +"       Input inp " 
                +"     WHERE inp.ORIN = pet.mdmid  " 
                +"     ) " 
                +"     SELECT  " 
                +"       pet.OmniChannelBrand, " 
                +"       ia.Long_Description, " 
                +"       pet.Belk_Exclusive, " 
                +"       pet.Channel_Exclusive, " 
                +"       ia.Direct_Ship_Flag SDF, " 
                +"       pet.BOPIS, " 
                +"       pet.ImportedOrDomestic, " 
                +"       pet.mdmid, " 
                +"       pet.entry_type , " 
                +"       pet.Is_PYG, " 
                +"       pet.is_GWP, " 
                +"       pet.is_PWP " 
                +"     FROM PetDetails pet, vendorportal.ADSE_ITEM_CATALOG item, " 
                +"       XMLTABLE( " 
                +"       'for $i in $XML_DATA/pim_entry/entry/Item_Ctg_Spec " 
                +"       let  " 
                +"       $directShipFlag := $i/Supplier/Direct_Ship_Flag/text(), " 
                +"       $primary_flag := $i/Supplier/Primary_Flag/text(),          " 
                +"       $long_description := $i/Description/Long/text() "
                +"       return   " 
                +"       <out> " 
                +"         <Direct_Ship_Flag>{$directShipFlag}</Direct_Ship_Flag>  " 
                +"         <primary_flag>{$primary_flag}</primary_flag> " 
                +"         <Long_Description>{$long_description}</Long_Description> "
                +"       </out>'      " 
                +"       passing item.XML_DATA AS \"XML_DATA\" columns  " 
                +"       Direct_Ship_Flag VARCHAR2(100) path '/out/Direct_Ship_Flag', " 
                +"       primary_flag VARCHAR(25) path '/out/primary_flag', Long_Description Varchar2(100) Path '/out/Long_Description' ) ia        " 
                +"     WHERE " 
                +"       pet.mdmid = item.mdmid AND ia.primary_flag = 'true' " ;
        return GET_GLOBAL_ATTRIBUTES_XQUERY;
    }


    /**
     * Gets the iph categories.
     *
     * @param orinNumber the orin number
     * @return the iph categories
     */
    public  String getIphCategories( ) {

        final String GET_IPH_CATEGORY_INFORMATION_XQUERY=

                "  select distinct(category) from VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY, "
                        + " xmltable('/pim_category/entry/Merchandise_Hier_Spec/IPH_Category_Mappings'"
                        + "passing XML_DATA " + "   columns  "
                        + "   category varchar2(200) path '.') "
                        + "   where category is not null " + "   order by category ";

        return GET_IPH_CATEGORY_INFORMATION_XQUERY;

    }

    /**
     * Gets the iph categories from adse merchandise hierarchy.
     *
     * @param orinNmber the orin nmber
     * @return the iph categories from adse merchandise hierarchy
     */
    public  String getIphCategoriesFromAdseMerchandiseHierarchy(String orinNmber ) {


      /*  String GET_IPH_CATEGORY_INFORMATION_XQUERY = " WITH "
                +"  "
                +" Input(ORIN) as  "
                +" (Select '"+orinNmber+"' ORIN from dual),  "
                +"  "
                +" petcatalog AS "
                +"   ( "
                +" select pet.mdmid ORIN, ias.CATEGORY_ID,ias.CATEGORY_DESC, ias.CATEGORY_NAME from Input inp,VENDORPORTAL.ADSE_PET_CATALOG pet, "
                +" XMLTABLE( "
                +" 'for $j in $XML_DATA/pim_entry/pet_entry_header/category_paths/category[last()] "
                +" let  "
                +"         $categoryid := $j//pk, "
                +"       $categorydesc := $j//path, "
                +"       $categoryname := tokenize(tokenize($j//path, \"///\")[last()],\"-\")[last()] "
                +"       return   "
                +"      <category> "
                +"     <pk>{$categoryid}</pk> "
                +"     <path>{$categorydesc}</path> "
                +"     <name>{$categoryname}</name> "
                +"    </category>' "
                +"       PASSING pet.XML_DATA AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     CATEGORY_ID VARCHAR(100) path '/category/pk', "
                +"       CATEGORY_DESC VARCHAR(100) path '/category/path', "
                +"     CATEGORY_NAME VARCHAR(100) path '/category/name') ias "
                +"     where "
                +"     pet.mdmid = inp.ORIN) "
                +"      "
                +"     , "
                +" petitemcatalog AS "
                +" ( "
                +"   select  "
                +"   pc.ORIN, "
                +"   pc.CATEGORY_ID, "
                +"   pc.CATEGORY_NAME, "
                +"   ibs.ITEM_CATEGORY_ID "
                +"   from  "
                +"   petcatalog pc, VENDORPORTAL.ADSE_ITEM_CATALOG aic, "
                +"   XMLTABLE( "
                +" 'for $j in $XML_DATA/pim_entry/item_header/category_paths/category "
                +" let  "
                +"         $itemcategoryid := $j//pk, "
                +"       $itemcategorydesc := $j//path, "
                +"       $itemcategoryname := tokenize($j//path, \"///\")[1] "
                +"       return   "
                +"      <category> "
                +"       <pk>{$itemcategoryid}</pk> "
                +"       <path>{$itemcategorydesc}</path> "
                +"       <name>{$itemcategoryname}</name> "
                +"      </category>' "
                +"       PASSING aic.XML_DATA AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     ITEM_CATEGORY_ID VARCHAR(100) path '/category/pk', "
                +"       ITEM_CATEGORY_DESC VARCHAR(100) path '/category/path', "
                +"     ITEM_CATEGORY_NAME VARCHAR(100) path '/category/name') ibs "
                +"   where "
                +"   pc.ORIN = aic.MDMID "
                +"   AND "
                +"   (CATEGORY_ID IS NULL OR CATEGORY_ID IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '' )) "
                +"   AND "
                +"   (CATEGORY_NAME IS NULL OR CATEGORY_NAME IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '')) "
                +"   AND "
                +"   UPPER(ibs.ITEM_CATEGORY_NAME) = UPPER('Merchandise_Hierarchy')) "
                +"    "
                +"  "
                +" ,petitemmerch AS "
                +" (  "
                +"   select "
                +"   pic.ORIN, "
                +"   pic.CATEGORY_ID, "
                +"   pic.CATEGORY_NAME, "
                +"   pic.ITEM_CATEGORY_ID, "
                +"   ics.SUB_CLASS "
                +"   FROM "
                +"   petitemcatalog pic, VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY amh, "
                +"   XMLTABLE( "
                +"     'for $j in $XML_DATA/pim_category/merchandise_category_header "
                +"     let  "
                +"         $subclass := tokenize($j//full_path, \"///\")[last()]       "
                +"       return   "
                +"        <merchandise_category_header> "
                +"         <full_path>{$subclass}</full_path> "
                +"        </merchandise_category_header>' "
                +"       PASSING amh.XML_DATA AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     SUB_CLASS VARCHAR(100) path '/merchandise_category_header/full_path') ics "
                +"  "
                +"   where "
                +"   pic.ITEM_CATEGORY_ID = amh.MDMID "
                +"   AND "
                +"   (CATEGORY_ID IS NULL OR CATEGORY_ID IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '' )) "
                +"   AND "
                +"   (CATEGORY_NAME IS NULL OR CATEGORY_NAME IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '')) "
                +"   ) "
                +"    "
                +"   select  "
                +"   pim.ORIN ORIN, "
                +"   pim.CATEGORY_ID PET_CATEGORY_ID, "
                +"   pim.CATEGORY_NAME PET_CATEGORY_NAME, "
                +"   pim.SUB_CLASS SUB_CLASS, "
                +"   ids.MERCH_CATEGORY_ID MERCH_CATEGORY_ID, "
                +"   ids.MERCH_CATEGORY_NAME MERCH_CATEGORY_NAME "
                +"   FROM "
                +"   petitemmerch pim, VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY amh1, "
                +"   XMLTABLE( "
                +" 'for $j in $XML_DATA/pim_category/entry/Merchandise_Hier_Spec/IPH_Category_Mappings "
                +" let  "
                +"       $leafnode7 := $j//Level_7, "
                +"       $leafnode6 := if(string-length($leafnode7) = 0) then $j//Level_6 else $leafnode7, "
                +"       $leafnode5 := if(string-length($leafnode6) = 0) then $j//Level_5 else $leafnode6, "
                +"       $leafnode4 := if(string-length($leafnode5) = 0) then $j//Level_4 else $leafnode5, "
                +"       $leafnode3 := if(string-length($leafnode4) = 0) then $j//Level_3 else $leafnode4, "
                +"       $leafnode2 := if(string-length($leafnode3) = 0) then $j//Level_2 else $leafnode3, "
                +"       $leafnode1 := if(string-length($leafnode2) = 0) then $j//Level_1 else $leafnode2, "
                +"       $merchcategoryid := tokenize($leafnode1,\"-\")[1], "
                +"       $merchcategoryname := tokenize($leafnode1,\"-\")[last()] "
                +"       return   "
                +"      <IPH_Category_Mappings> "
                +"     <category_id>{$merchcategoryid}</category_id> "
                +"     <category_name>{$merchcategoryname}</category_name> "
                +"    </IPH_Category_Mappings>' "
                +"       PASSING amh1.XML_DATA AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     MERCH_CATEGORY_ID VARCHAR(100) path '/IPH_Category_Mappings/category_id', "
                +"     MERCH_CATEGORY_NAME VARCHAR(100) path '/IPH_Category_Mappings/category_name') ids "
                +"  "
                +"   where "
                +"   pim.ITEM_CATEGORY_ID = amh1.MDMID "
                +"   AND "
                +"   (CATEGORY_ID IS NULL OR CATEGORY_ID IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '' )) "
                +"   AND "
                +"   (CATEGORY_NAME IS NULL OR CATEGORY_NAME IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '')) " ;*/
        
        String  GET_IPH_CATEGORY_INFORMATION_XQUERY = " WITH Input(ORIN) AS " 
                +"   ( SELECT '"+orinNmber+"' ORIN " 
                +"   FROM dual " 
                +"   ) , " 
                +"   petcatalog AS " 
                +"   (SELECT pet.mdmid ORIN, " 
                +"     ias.CATEGORY_ID, " 
                +"     ias.CATEGORY_DESC, " 
                +"     ias.CATEGORY_NAME, " 
                +"     pet.ENTRY_TYPE " 
                +"   FROM Input inp, " 
                +"     VENDORPORTAL.ADSE_PET_CATALOG pet, " 
                +"     XMLTABLE( 'for $j in $XML_DATA/pim_entry/pet_entry_header/category_paths/category[last()]  let           $categoryid := $j//pk,        $categorydesc := $j//path,        $categoryname := tokenize(tokenize($j//path, \"///\")[last()],\"-\")[last()]        return         <category>      <pk>{$categoryid}</pk>      <path>{$categorydesc}</path>      <name>{$categoryname}</name>     </category>' PASSING pet.XML_DATA AS \"XML_DATA\" COLUMNS CATEGORY_ID VARCHAR(100) path '/category/pk', CATEGORY_DESC VARCHAR(100) path '/category/path', CATEGORY_NAME VARCHAR(100) path '/category/name') ias " 
                +"   WHERE pet.mdmid = inp.ORIN " 
                +"   ) , " 
                +"   petitemcatalog AS " 
                +"   (SELECT pc.ORIN, " 
                +"     pc.CATEGORY_ID, " 
                +"     pc.CATEGORY_NAME, " 
                +"     ibs.ITEM_CATEGORY_ID, " 
                +"     pc.ENTRY_TYPE " 
                +"   FROM petcatalog pc, " 
                +"     VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
                +"     XMLTABLE( 'for $j in $XML_DATA/pim_entry/item_header/category_paths/category  let           $itemcategoryid := $j//pk,        $itemcategorydesc := $j//path,        $itemcategoryname := tokenize($j//path, \"///\")[1]        return         <category>        <pk>{$itemcategoryid}</pk>        <path>{$itemcategorydesc}</path>        <name>{$itemcategoryname}</name>       </category>' PASSING aic.XML_DATA AS \"XML_DATA\" COLUMNS ITEM_CATEGORY_ID VARCHAR(100) path '/category/pk', ITEM_CATEGORY_DESC VARCHAR(100) path '/category/path', ITEM_CATEGORY_NAME VARCHAR(100) path '/category/name') ibs " 
                +"   WHERE pc.ORIN                     = aic.MDMID " 
                +"   AND ( pc.ENTRY_TYPE              IS NULL " 
                +"   OR pc.ENTRY_TYPE                 IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor' , '' ) ) " 
                +"   AND ( pc.ENTRY_TYPE              IS NULL " 
                +"   OR pc.ENTRY_TYPE                 IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '') ) " 
                +"   AND UPPER(ibs.ITEM_CATEGORY_NAME) = UPPER('Merchandise_Hierarchy') " 
                +"   ) , " 
                +"   petitemmerch AS " 
                +"   (SELECT pic.ORIN, " 
                +"     pic.CATEGORY_ID, " 
                +"     pic.CATEGORY_NAME, " 
                +"     pic.ITEM_CATEGORY_ID, " 
                +"     ics.SUB_CLASS, " 
                +"     pic.ENTRY_TYPE " 
                +"   FROM petitemcatalog pic, " 
                +"     VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY amh, " 
                +"     XMLTABLE( 'for $j in $XML_DATA/pim_category/merchandise_category_header      let           $subclass := tokenize($j//full_path, \"///\")[last()]              return           <merchandise_category_header>          <full_path>{$subclass}</full_path>         </merchandise_category_header>' PASSING amh.XML_DATA AS \"XML_DATA\" COLUMNS SUB_CLASS VARCHAR(100) path '/merchandise_category_header/full_path') ics " 
                +"   WHERE pic.ITEM_CATEGORY_ID = amh.MDMID " 
                +"   AND ( pic.ENTRY_TYPE      IS NULL " 
                +"   OR pic.ENTRY_TYPE         IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor' , '' ) ) " 
                +"   AND ( pic.ENTRY_TYPE      IS NULL " 
                +"   OR pic.ENTRY_TYPE         IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '') ) " 
                +"   ) " 
                +" SELECT pim.ORIN ORIN, " 
                +"   pim.CATEGORY_ID PET_CATEGORY_ID, " 
                +"   pim.CATEGORY_NAME PET_CATEGORY_NAME, " 
                +"   pim.SUB_CLASS SUB_CLASS, " 
                +"   ids.MERCH_CATEGORY_ID MERCH_CATEGORY_ID, " 
                +"   ids.MERCH_CATEGORY_NAME MERCH_CATEGORY_NAME " 
                +" FROM petitemmerch pim, " 
                +"   VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY amh1, " 
                +"   XMLTABLE( 'for $j in $XML_DATA/pim_category/entry/Merchandise_Hier_Spec/IPH_Category_Mappings  let         $leafnode7 := $j//Level_7,        $leafnode6 := if(string-length($leafnode7) = 0) then $j//Level_6 else $leafnode7,        $leafnode5 := if(string-length($leafnode6) = 0) then $j//Level_5 else $leafnode6,        $leafnode4 := if(string-length($leafnode5) = 0) then $j//Level_4 else $leafnode5,        $leafnode3 := if(string-length($leafnode4) = 0) then $j//Level_3 else $leafnode4,        $leafnode2 := if(string-length($leafnode3) = 0) then $j//Level_2 else $leafnode3,        $leafnode1 := if(string-length($leafnode2) = 0) then $j//Level_1 else $leafnode2,        $merchcategoryid := tokenize($leafnode1,\"-\")[1],        $merchcategoryname := tokenize($leafnode1,\"-\")[last()]        return         <IPH_Category_Mappings>      <category_id>{$merchcategoryid}</category_id>      <category_name>{$merchcategoryname}</category_name>     </IPH_Category_Mappings>' PASSING amh1.XML_DATA AS " 
                +"   \"XML_DATA\" COLUMNS MERCH_CATEGORY_ID VARCHAR(100) path '/IPH_Category_Mappings/category_id', MERCH_CATEGORY_NAME VARCHAR(100) path '/IPH_Category_Mappings/category_name') ids " 
                +" WHERE pim.ITEM_CATEGORY_ID = amh1.MDMID " 
                +" AND ( pim.ENTRY_TYPE      IS NULL " 
                +" OR pim.ENTRY_TYPE         IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '' ) ) " 
                +" AND ( pim.ENTRY_TYPE      IS NULL " 
                +" OR pim.ENTRY_TYPE         IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '') )   " ;

        System.out.println("GET_IPH_CATEGORIES FROM MERCH -" +GET_IPH_CATEGORY_INFORMATION_XQUERY);
        return GET_IPH_CATEGORY_INFORMATION_XQUERY;

    }



    public  String getIphCategoriesFromAdsePetCatalog(String orinNmber ) {
        LOGGER.info("start of getIphCategoriesFromAdsePetCatalog------------------");



        String GET_IPH_CATEGORY_INFORMATION_XQUERY = " WITH "
                +"   Input(ORIN) AS "
                +"   ( "
                +"     SELECT "
                +"       '"+orinNmber+"' ORIN "
                +"     FROM "
                +"       dual "
                +"   ) "
                +" SELECT "
                +"   pet.mdmid ORIN, "
                +"   ias.CATEGORY_ID PET_CATEGORY_ID, "
                +"   ias.CATEGORY_NAME PET_CATEGORY_NAME, "
                +"   NULL SUB_CLASS, "
                +"   NULL MERCH_CATEGORY_ID, "
                +"   NULL MERCH_CATEGORY_NAME "
                +" FROM "
                +"   Input inp, "
                +"   VENDORPORTAL.ADSE_PET_CATALOG pet, "
                +"   XMLTABLE( "
                +"   'for $j in $XML_DATA/pim_entry/pet_entry_header/category_paths/category    let          $categoryid := $j//pk,    $categorydesc := $j//path,    $categoryname := tokenize(tokenize($j//path, \"///\")[last()],\"-\")[last()]        return      <category>    <pk>{$categoryid}</pk>     <path>{$categorydesc}</path>      <name>{$categoryname}</name>     </category>' "
                +"   PASSING pet.XML_DATA AS \"XML_DATA\" COLUMNS CATEGORY_ID VARCHAR(100) path "
                +"   '/category/pk', CATEGORY_DESC                          VARCHAR(100) path "
                +"   '/category/path', CATEGORY_NAME                        VARCHAR(100) path "
                +"   '/category/name') ias "
                +" WHERE "
                +"   pet.mdmid = inp.ORIN "
                +"   AND ias.CATEGORY_NAME NOT LIKE '%Style%' "
                +"   AND ias.CATEGORY_NAME NOT LIKE '%ComplexPack%' " ;

        System.out.println(GET_IPH_CATEGORY_INFORMATION_XQUERY);
        return GET_IPH_CATEGORY_INFORMATION_XQUERY;

    }



    /**
     * Gets the iph categories from adse pet catalog.
     *
     * @param orinNmber the orin nmber
     * @return the iph categories from adse pet catalog
     */

    public  String getIphCategoriesFromAdsePetCatalog2(String orinNmber ) {
        LOGGER.info("start of getIphCategoriesFromAdsePetCatalog------------------");

        final String GET_IPH_CATEGORY_INFORMATION_XQUERY=" With "
                +"  "
                +" Input(ORIN) as (Select " + orinNmber  + " ORIN from dual) "
                +"  "
                +" select  "
                +" pet.mdmid ORIN,  "
                +" ias.CATEGORY_ID PET_CATEGORY_ID, "
                +" ias.CATEGORY_NAME PET_CATEGORY_NAME, "
                +" NULL SUB_CLASS, "
                +" NULL MERCH_CATEGORY_ID, "
                +" NULL MERCH_CATEGORY_NAME "
                +" from Input inp,VENDORPORTAL.ADSE_PET_CATALOG pet, "
                +" XMLTABLE( "
                +" 'for $j in $XML_DATA/pim_entry/pet_entry_header/category_paths/category[last()] "
                +" let  "
                +"                     $categoryid := $j//pk, "
                +"       $categorydesc := $j//path, "
                +"       $categoryname := tokenize(tokenize($j//path, \"///\")[last()],\"-\")[last()] "
                +"       return   "
                +"                  <category> "
                +"     <pk>{$categoryid}</pk> "
                +"     <path>{$categorydesc}</path> "
                +"     <name>{$categoryname}</name> "
                +"    </category>' "
                +"       PASSING pet.XML_DATA AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     CATEGORY_ID VARCHAR(100) path '/category/pk', "
                +"                   CATEGORY_DESC VARCHAR(100) path '/category/path', "
                +"     CATEGORY_NAME VARCHAR(100) path '/category/name') ias "
                +"     where "
                +"     pet.mdmid = inp.ORIN " ;
        LOGGER.info("GET_IPH_CATEGORY_INFORMATION_XQUERY-----------------"+GET_IPH_CATEGORY_INFORMATION_XQUERY);
        return GET_IPH_CATEGORY_INFORMATION_XQUERY;

    }


    /**
     * Gets the omini channle color family.
     *
     * @return the omini channle color family
     */
    public  String getOminiChannleColorFamily( ) {

        final String GET_OMINI_CHANNEL_COLORFAMILY_XQUERY=


                "  with "

                    + "   referencetable AS( "
                    + "   select "
                    + "    CODE,"
                    + "   COLOR_CODE_START,"
                    + "   COLOR_CODE_END,"
                    + "    SUPER_COLOR_CODE,"
                    + "   SUPER_COLOR_DESC  "
                    + "   from vendorportal.ADSE_REFERENCE_DATA, "
                    + "   xmltable('for $i in $pet/pim_entry/entry/Omni_Channel_Color_Family_Spec  "
                    + "   let "
                    + "    $code := $i//Code,"
                    + "   $colorcodestart := $i//COLOR_CODE_BEGIN,"
                    + "    $colorcodeend := $i//COLOR_CODE_END,"
                    + "   $supercolorcode := $i//SUPER_COLOR_CODE,"
                    + "   $supercolordesc := $i//SUPER_COLOR_NAME "
                    + "  return "
                    + " <ref> "
                    + "  <code>{$code}</code> "
                    + "  <colorcodestart>{$colorcodestart}</colorcodestart> "
                    + "   <colorcodeend>{$colorcodeend}</colorcodeend> "
                    + "  <supercolorcode>{$supercolorcode}</supercolorcode> "
                    + "  <supercolordesc>{$supercolordesc}</supercolordesc>  "
                    + "  </ref>' "
                    + "  passing XML_DATA as \"pet\" "
                    + "    columns "
                    + "    CODE         varchar2(40) path '/ref/code', "
                    + "   COLOR_CODE_START varchar2(40) path '/ref/colorcodestart',"
                    + "   COLOR_CODE_END varchar2(40) path '/ref/colorcodeend',"
                    + "  SUPER_COLOR_CODE varchar2(40) path '/ref/supercolorcode',"
                    + "   SUPER_COLOR_DESC varchar2(40) path '/ref/supercolordesc') i "
                    + "   where Entry_Type = 'Omnichannel_Color_Family' ) "

                    + "    Select * from referencetable ";

        return GET_OMINI_CHANNEL_COLORFAMILY_XQUERY;

    }



    /**
     * Ge cars brand query.
     *
     * @return the string
     */
    public String getOmniChannelBrandQuery(String orinNumber, String supplierId) {
        final String GET_OMNI_CHANNEL_BRAND_XQUERY = " With "
                +" Input(SUPPLIER_ID, ORIN)  "
                +" AS  "
                +" ( SELECT  '"+supplierId+"' SUPPLIER_ID, '"+orinNumber+"' ORIN FROM dual ), "
                +"  "
                +" referencefirst AS( "
                +" SELECT "
                +" LISTAGG(CODE,'|') WITHIN GROUP (ORDER BY CODE) CODE, S.SUPPLIERID, ARD.CONTAINER, IP.ORIN "
                +" FROM  "
                +" VENDORPORTAL.ADSE_REFERENCE_DATA ARD, INPUT IP, "
                +" XMLTABLE(' "
                +" <category> "
                +"   <code>{ "
                +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +" return "
                +"     if (not( ($j) is ($XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec[last()])[1] ) and not(empty($j//Code)) and not($j//Code = \"\")) then  "
                +"                        concat(concat($j//Code,\"-\"),$j//Description) "
                +"                     else "
                +"                        string(concat(concat($j//Code,\"-\"),$j//Description)) "
                +"    }  "
                +" </code>  "
                +"   <id>{ "
                +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +"   return $i//Supplier_Site_ID "
                +"   } "
                +"   </id>  "
                +"   </category>' "
                +"    passing "
                +"       ARD.xml_data AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     CODE VARCHAR(100) path '/category/code', "
                +"     SUPPLIERID VARCHAR(100) path '/category/id') S "
                +" WHERE  "
                +" IP.SUPPLIER_ID=S.SUPPLIERID "
                +" AND "
                +" ARD.CONTAINER IN ('OmniChannelBrand','Omni_Channel_Brand_Lookup') "
                +" GROUP BY "
                +" S.SUPPLIERID, ARD.CONTAINER, IP.ORIN), "
                +"  "
                +" pettable AS( "
                +" select RF.CODE, RF.SUPPLIERID, RF.CONTAINER, T.OMNICODE, APC.MDMID "
                +" FROM "
                +" referencefirst RF, VENDORPORTAL.ADSE_PET_CATALOG APC, "
                +" XMLTABLE(' "
                +" for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec "
                +" let "
                +"     $code := $j//OmniChannelBrand "
                +" return "
                +"  "
                +"   <category> "
                +"   <code>{$code}</code>  "
                +"   </category>' "
                +"    passing "
                +"       APC.xml_data AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     OMNICODE VARCHAR(100) path '/category/code') T "
                +" WHERE "
                +" APC.MDMID = RF.ORIN), "
                +"  "
                +"  "
                +" referencetable AS( "
                +"   SELECT  "
                +"     V.CODEDESCRIPTION OMNI_BRAND, "
                +"     V.SUPPLIERIDS, "
                +"     V.IDCHECK "
                +"   FROM "
                +"   INPUT I,VENDORPORTAL.ADSE_REFERENCE_DATA ARDT,  "
                +"   XMLTABLE(' "
                +" <category> "
                +"   <code>{ "
                +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +" return "
                +"        string(concat(concat($j//Code,\"-\"),$j//Description)) "
                +"    }  "
                +" </code>  "
                +"   <id>{ "
                +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +"   return $i//Supplier_Site_ID "
                +"   } "
                +"   </id>  "
                +"   <check>{ "
                +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec "
                +" return "
                +"        string($j//Code) "
                +"    }  "
                +" </check> "
                +"   </category>' "
                +"    passing "
                +"       ARDT.xml_data AS \"XML_DATA\" "
                +"       COLUMNS  "
                +"     CODEDESCRIPTION VARCHAR(100) path '/category/code', "
                +"     SUPPLIERIDS VARCHAR(100) path '/category/id', "
                +"     IDCHECK VARCHAR(100) path '/category/check') V "
                +" WHERE  "
                +"     ARDT.CONTAINER IN ('OmniChannelBrand','Omni_Channel_Brand_Lookup') "
                +"   AND I.SUPPLIER_ID=V.SUPPLIERIDS "
                +"    "
                +" ) "
                +"  "
                +"  "
                +" SELECT PT.CODE OMNI_BRANDS, "
                +" RT.OMNI_BRAND, "
                +" PT.SUPPLIERID SUPPLIER,  "
                +" PT.CONTAINER CONTAINER_TYPE, "
                +" PT.MDMID ORIN "
                +" FROM "
                +" PETTABLE PT LEFT OUTER JOIN referencetable rt  "
                +" ON  "
                +" PT.OMNICODE = RT.IDCHECK " ;

        System.out.println("Query - >"+GET_OMNI_CHANNEL_BRAND_XQUERY);
        return GET_OMNI_CHANNEL_BRAND_XQUERY;

    }




    /**
     * Gets the sku attributes.
     *
     * @param skuOrinNumber the sku orin number
     * @return the sku attributes

         public  String getSkuAttributes(String skuOrinNumber)
        {

            final String GET_SKU_ATTRIBUTES_INFORMATION_XQUERY=

                    "  with "
                            + "  INPUT( ORIN) as ( "
                            + "   Select "
                            + skuOrinNumber
                            + "  ORIN FROM dual) "

                    + "  select item.mdmid ORIN, "
                    + "        i.BELK_UPC,"
                    + "       '/pim_entry/entry/Item_Ctg_Spec/Supplier/UPCs[starts-with(UPC, \"04\")]/UPC' BELK_UPC_XPath,"
                    + "       i.VENDOR_UPC,"
                    + "      '/pim_entry/entry/Item_Ctg_Spec/Supplier/UPCs[not(starts-with(UPC, \"04\"))]/UPC' VENDOR_UPC_XPath,"
                    + "      i.vendor_size,"
                    + "       '/pim_entry/entry/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description' vendor_size_XPath,"
                    + "      o.OMNI_SIZE_DESC,"
                    + "     '/pim_entry/entry/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code' OMNI_SIZE_DESC_Code_XPath,"
                    + "    i.Source_Domestic,"
                    + "   omni.nrf_size_code "
                    + " from VENDORPORTAL.ADSE_ITEM_CATALOG item,"
                    + " xmltable('for $i in $pet/pim_entry/entry "
                    + "         let $belk_upc := (for $upc in $i/Item_Ctg_Spec/Supplier/UPCs/UPC where starts-with($upc, \"04\") return $upc)[1],"
                    + "        $vendor_upc := (for $upc in $i/Item_Ctg_Spec/Supplier/UPCs/UPC where not(starts-with($upc, \"04\")) return $upc)[1],"
                    + "       $vendor_size_code := $i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code, "
                    + "       $vendor_size := $i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description,"
                    + "        $SourcedDomestic :=$i/Ecomm_SKU_Spec/SourcedDomestically  "
                    + " return <out> "
                    + "         <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id> "
                    + " <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id> "
                    + "          <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id> "
                    + "         <belk_upc>{$belk_upc}</belk_upc> "
                    + "         <vendor_upc>{$vendor_upc}</vendor_upc> "
                    + "      <vendor_size_code>{$vendor_size_code}</vendor_size_code> "
                    + "      <vendor_size>{$vendor_size}</vendor_size> "
                    + "      <SourcedDomestic>{$SourcedDomestic}</SourcedDomestic> "
                    + "  </out>' "
                    + "  passing item.XML_DATA as \"pet\"  "
                    + " columns "
                    + " supplier_id VARCHAR2(20) path '/out/supplier_id',"
                    + " deptid VARCHAR2(20) path '/out/dept_id',"
                    + "  classid VARCHAR2(20) path '/out/class_id',"
                    + "     VENDOR_UPC varchar2(40) path '/out/vendor_upc',"
                    + " BELK_UPC varchar2(40) path '/out/belk_upc', "
                    + "  vendor_size_code varchar2(6) path '/out/vendor_size_code',"
                    + "  vendor_size varchar2(40) path '/out/vendor_size', "
                    + " Source_Domestic varchar2(40) path '/out/SourcedDomestic' "
                    + " ) i, VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup,"
                    + "     XMLTABLE('for $i in $XML_DATA/pim_entry/entry "
                    + "     return $i' "
                    + "       passing sup.xml_data as \"XML_DATA\" "
                    + "      COLUMNS  "
                    + "       Id  varchar2(20) path 'Supplier_Ctg_Spec/Id',"
                    + "       VenId varchar2(20) path 'Supplier_Ctg_Spec/VEN_Id' "
                    + "  ) s, VENDORPORTAL.ADSE_VENDOR_OMNISIZE_DESC omni,"
                    + " xmltable('for $i in $XML//omni_size_desc return $i' passing omni.XML_DATA as \"XML\"  "
                    + "    columns " + "    OMNI_SIZE_DESC varchar(40) path '.' "
                    + ") o, Input inp "
                    + "   where item.Entry_Type = 'SKU' and item.mdmid=inp.ORIN "
                    + " and i.SUPPLIER_ID = sup.MDMID "
                    + " and i.VENDOR_SIZE_CODE =omni.NRF_SIZE_CODE "
                    + " and i.deptid=omni.DEPT_ID "
                    + " and i.ClassId=omni.CLASS_ID "
                    + "  and s.VenId=omni.VENDOR_ID "
                    + " and item.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' "
                    + "  and sup.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' ";

            return GET_SKU_ATTRIBUTES_INFORMATION_XQUERY;

        }*/
    /**
     * Gets the pet content managment details.
     *
     * @param orinNumber the orin number
     * @return the pet content managment details
     */
    public  String getPetContentManagmentDetails(String orinNumber) {

        final String GET_PET_CONTENT_MANAGEMENT_INFORMATION_XQUERY=


                " with "
                        +"   INPUT( ORIN) as ( "
                        +"   Select "+
                        orinNumber
                        +"   ORIN FROM dual),"


              +"    TypeIndex(indx, typ) as ((Select 1 indx, 'Style' typ  from  dual) union (Select 2 indx, 'StyleColor' typ  from  dual) union (select 3 indx, 'SKU' typ from dual)) "

              +"    select  "
              +"            aic.MDMID ORIN, nvl(aic.PARENT_MDMID, aic.MDMID) Style, "
              +"            Name Style_Name, Brand, priority, aic.ENTRY_TYPE "
              +"    from VENDORPORTAL.ADSE_ITEM_CATALOG aic, XMLTABLE('for $i in $XML_DATA/pim_entry/entry "
              +"              return <out> "
              +"                          <brand>{$i/Item_UDA_Spec/Brand}</brand> "
              +"                    </out>' "
              +"        passing aic.XML_DATA as \"XML_DATA\" "
              +"        columns "
              +"        Brand varchar(10) path '/out/brand') i, VENDORPORTAL.ADSE_PET_CATALOG pet,"
              +"  XMLTABLE('for $pet in $pets/pim_entry/entry    "
              +"  return <out>   "
              +"   <name>{$pet/Pet_Ctg_Spec/Name}</name> "
              +"   <priority>{$pet/Pet_Ctg_Spec/PO_Number}</priority> "
              +"   </out>' "
              +"    passing pet.xml_data AS \"pets\"  "
              +"    Columns "
              +"    Name VARCHAR2(20) path '/out/name',"
              +"    priority varchar2(10) path '/out/priority') p, Input inp "
              +"    where  "
              +"    aic.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' and aic.mdmid = pet.mdmid "
              +"    and pet.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' "
              +"        and aic.mdmid = inp.ORIN and aic.Entry_Type='Style' ";

        LOGGER.info("GET_PET_CONTENT_MANAGEMENT_INFORMATION_XQUERY------"+GET_PET_CONTENT_MANAGEMENT_INFORMATION_XQUERY);

        return GET_PET_CONTENT_MANAGEMENT_INFORMATION_XQUERY;

    }




    /**
     * Gets the product details.
     *
     * @param orinNumber the orin number
     * @return the product details
     */
    public  String getProductDetails(String orinNumber) {
        String GET_PRODUCT_INFORMATION_XQUERY = " WITH "
                +"   INPUT(ORIN) AS "
                +"   ( "
                +"     SELECT "
                +"       '"+orinNumber+"' ORIN "
                +"     FROM "
                +"       dual "
                +"   ) "
                +"   , "
                +"   TypeIndex(indx, typ) AS ( "
                +"   ( "
                +"     SELECT "
                +"       1 indx, "
                +"       'Style' typ "
                +"     FROM "
                +"       dual "
                +"   ) "
                +" UNION "
                +"   ( "
                +"     SELECT "
                +"       2 indx, "
                +"       'StyleColor' typ "
                +"     FROM "
                +"       dual "
                +"   ) "
                +" UNION "
                +"   ( "
                +"     SELECT "
                +"       3 indx, "
                +"       'SKU' typ "
                +"     FROM "
                +"       dual "
                +"   ) "
                +"   UNION "
                +"   ( "
                +"     SELECT "
                +"       4 indx, "
                +"       'Complex Pack' typ "
                +"     FROM "
                +"       dual "
                +"   ) "
                +"   UNION "
                +"   ( "
                +"     SELECT "
                +"       5 indx, "
                +"       'PackColor' typ "
                +"     FROM "
                +"       dual "
                +"   ) "
                +"   ) "
                +" SELECT "
                +"   NVL(aic.PARENT_MDMID, aic.MDMID) Style_Id, "
                +"   aic.MDMID ORIN_NUM, "
                +"   i2.ProductName Product_Name, "
                +"   i2.ProductDescription DESCRIPTION, "
                +"   aic.Entry_Type "
                +" FROM "
                +"   VENDORPORTAL.ADSE_ITEM_CATALOG aic, "
                +"   XMLTABLE( "
                +"   'for $i in $XML_DATA/pim_entry/entry            let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),  $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and        ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),               $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"     return  <out>                <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>    <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>   <desc>{$i/Item_Ctg_Spec/Description/Long}</desc>   <flag>{$uda80 and $non_sellable_pack and $removal}</flag>   </out>' "
                +"   passing aic.XML_DATA AS \"XML_DATA\" columns flag VARCHAR(10) path '/out/flag', "
                +"   supplier_id                                     VARCHAR2(20) path "
                +"   '/out/supplier_id', deptid                      VARCHAR2(20) path "
                +"   '/out/dept_id', descr                           VARCHAR2(64) path '/out/desc' "
                +"   ) i, "
                +"   Input inp, "
                +"   VENDORPORTAL.ADSE_PET_CATALOG aic2, "
                +"   XMLTABLE( "
                +"   'for $i in $XML_DATA/pim_entry/entry        return  <out>   <prod_name>{$i//Product_Name}</prod_name>  <prod_desc>{$i//Product_Description}</prod_desc>    </out>' "
                +"   passing aic2.XML_DATA AS \"XML_DATA\" columns ProductName VARCHAR2(300) path "
                +"   '/out/prod_name', ProductDescription                    VARCHAR2(2000) path "
                +"   '/out/prod_desc') i2 "
                +" WHERE "
                +"   flag                              = 'false' "
                +" AND aic.MOD_DTM                     = '01-JAN-00 12.00.00.000000000 PM' "
                +" AND aic.MDMID                       =inp.ORIN "
                +" AND aic.Entry_type                 IN ('SKU', 'StyleColor', 'Style','Complex Pack','PackColor') "
                +" AND aic2.MOD_DTM                    = '01-JAN-00 12.00.00.000000000 PM' "
                +" AND aic2.Entry_type                 IN ('Style','ComplexPack') "
                +" AND NVL(aic.PARENT_MDMID, aic.MDMID)=aic2.mdmid " ;
        LOGGER.info("GET_PRODUCT_INFORMATION_XQUERY--------------"+GET_PRODUCT_INFORMATION_XQUERY);
        return GET_PRODUCT_INFORMATION_XQUERY;

    }




    /**
     * Gets the sku attributes.
     *
     * @param skuOrinNumber the sku orin number
     * @return the sku attributes
     */
    public  String getSkuAttributes(String skuOrinNumber)
    {

                String GET_SKU_ATTRIBUTES_INFORMATION_XQUERY ="   WITH    INPUT( ORIN) AS     " 
                        +"   (       " 
                        +"   SELECT         " 
                        +"   '"+skuOrinNumber+"' ORIN      " 
                        +"   FROM         " 
                        +"   dual     " 
                        +"   )  " 
                        +"  " 
                        +"   SELECT    " 
                        +"   item.mdmid ORIN,  " 
                        +"   item.number_04 BELK_UPC, " 
                        +"   '/pim_entry/entry/Item_Ctg_Spec/IDB_Id'    BELK_UPC_XPath,  " 
                        +"   item.Primary_UPC VENDOR_UPC,  " 
                        +"   '/pim_entry/entry/Item_Ctg_Spec/Supplier/UPCs/UPC'    VENDOR_UPC_XPath,  " 
                        +"   i.vendor_size,  " 
                        +"   '/pim_entry/entry/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description'    vendor_size_XPath,  " 
                        +"   o.OMNI_SIZE_DESC, " 
                        +"   '/pim_entry/entry/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code'    OMNI_SIZE_DESC_Code_XPath,  " 
                        +"   i.Source_Domestic,   " 
                        +"   omni.nrf_size_code, " 
                        +"   i.launchDate,  " 
                        +"   i.giftBox,  " 
                        +"   i.gwp,   " 
                        +"   i.pwp,  " 
                        +"   i.pyg,  " 
                        +"   i.productDimesionUom, " 
                        +"   i.productLength, " 
                        +"   i.productHeight, " 
                        +"   i.productWidth, " 
                        +"   i.productWeightUom, " 
                        +"   i.productWeight   " 
                        +"   FROM    VENDORPORTAL.ADSE_ITEM_CATALOG item, " 
                        +"   xmltable(    'for $i in $pet/pim_entry/entry     " 
                        +"   let  " 
                        +"   $belk_upc := (for $upc in $i/Item_Ctg_Spec/IDB_Id return $upc)[1], " 
                        +"   $vendor_upc := (for $upc in $i/Item_Ctg_Spec/Supplier/UPCs/UPC return $upc)[1], " 
                        +"   $vendor_size_code := $i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code,     " 
                        +"   $vendor_size := $i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description, " 
                        +"   $SourcedDomestic :=$i/Ecomm_SKU_Spec/SourcedDomestically,  " 
                        +"   $launchDate :=$i/Ecomm_SKU_Spec/Launch_Date,   " 
                        +"   $giftBox :=$i/Ecomm_SKU_Spec/Gift_Box,  " 
                        +"   $gwp :=$i/Ecomm_SKU_Spec/is_GWP,  " 
                        +"   $pwp :=$i/Ecomm_SKU_Spec/is_PWP,  " 
                        +"   $pyg :=$i/Ecomm_SKU_Spec/Is_PYG,   " 
                        +"   $productDimesionUom :=$i/Ecomm_SKU_Spec/Product_Dimensions/Product_Dimensions_UOM, " 
                        +"   $productLength :=$i/Ecomm_SKU_Spec/Product_Dimensions/Length, " 
                        +"   $productHeight :=$i/Ecomm_SKU_Spec/Product_Dimensions/Height,  " 
                        +"   $productWidth :=$i/Ecomm_SKU_Spec/Product_Dimensions/Width, " 
                        +"   $productWeigthUom :=$i/Ecomm_SKU_Spec/Product_Weight/UOM,  " 
                        +"   $productWeigth :=$i/Ecomm_SKU_Spec/Product_Weight/Weight  " 
                        +"   return   " 
                        +"   <out>    " 
                        +"         <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>  " 
                        +"         <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>    " 
                        +"         <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>         " 
                        +"         <belk_upc>{$belk_upc}</belk_upc>        " 
                        +"         <vendor_upc>{$vendor_upc}</vendor_upc>    " 
                        +"         <vendor_size_code>{$vendor_size_code}</vendor_size_code>   " 
                        +"         <vendor_size>{$vendor_size}</vendor_size>         " 
                        +"         <SourcedDomestic>{$SourcedDomestic}</SourcedDomestic>   " 
                        +"         <launchDate>{$launchDate}</launchDate>    " 
                        +"         <giftBox>{$giftBox}</giftBox>   " 
                        +"         <gwp>{$gwp}</gwp>    " 
                        +"         <pwp>{$pwp}</pwp>   " 
                        +"         <pyg>{$pyg}</pyg>  " 
                        +"         <productDimesionUom>{$productDimesionUom}</productDimesionUom>   " 
                        +"         <productLength>{$productLength}</productLength>  " 
                        +"         <productHeight>{$productHeight}</productHeight>   " 
                        +"         <productWidth>{$productWidth}</productWidth>  " 
                        +"         <productWeigthUom>{$productWeigthUom}</productWeigthUom>   " 
                        +"         <productWeigth>{$productWeigth}</productWeigth>     " 
                        +"   </out>'    passing item.XML_DATA AS \"pet\"     columns     " 
                        +"   supplier_id VARCHAR2(20) path  '/out/supplier_id',    " 
                        +"   deptid VARCHAR2(20) path  '/out/dept_id',    " 
                        +"   classid VARCHAR2(20) path  '/out/class_id',    " 
                        +"   VENDOR_UPC VARCHAR2(40) path  '/out/vendor_upc',    " 
                        +"   BELK_UPC VARCHAR2(40) path  '/out/belk_upc',   " 
                        +"   vendor_size_code VARCHAR2(6) path  '/out/vendor_size_code',   " 
                        +"   vendor_size VARCHAR2(40) path  '/out/vendor_size',    " 
                        +"   Source_Domestic VARCHAR2(40) path  '/out/SourcedDomestic',    " 
                        +"   launchDate VARCHAR2(40) path  '/out/launchDate',     " 
                        +"   giftBox VARCHAR2(40) path  '/out/giftBox',    " 
                        +"   gwp VARCHAR2(40) path  '/out/gwp',     " 
                        +"   pwp VARCHAR2(40) path  '/out/pwp',   " 
                        +"   pyg VARCHAR2(40) path  '/out/pyg',    " 
                        +"   productDimesionUom VARCHAR2(40) path  '/out/productDimesionUom',   " 
                        +"   productLength VARCHAR2(40) path  '/out/productLength',   " 
                        +"   productHeight VARCHAR2(40) path  '/out/productHeight',    " 
                        +"   productWidth VARCHAR2(40) path  '/out/productWidth',    " 
                        +"   productWeightUom VARCHAR2(40) path  '/out/productWeigthUom',    " 
                        +"   productWeight VARCHAR2(40) path  '/out/productWeigth') i,    " 
                        +"   VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup,  " 
                        +"   XMLTABLE('for $i in $XML_DATA/pim_entry/entry      " 
                        +"   return $i' passing    sup.xml_data AS \"XML_DATA\" COLUMNS  " 
                        +"   Id VARCHAR2(20) path    'Supplier_Ctg_Spec/Id',  " 
                        +"   VenId         VARCHAR2(20) path    'Supplier_Ctg_Spec/VEN_Id' ) s,    " 
                        +"   VENDORPORTAL.ADSE_VENDOR_OMNISIZE_DESC omni,    " 
                        +"   xmltable('for $i in $XML//omni_size_desc return $i' passing omni.XML_DATA AS    \"XML\" columns  " 
                        +"   OMNI_SIZE_DESC VARCHAR(40) path '.' ) o,    " 
                        +"   Input inp   " 
                        +"   WHERE    item.Entry_Type      = 'SKU'   " 
                        +"   AND item.mdmid         =inp.ORIN   " 
                        +"   AND i.SUPPLIER_ID      = sup.MDMID  " 
                        +"   AND i.VENDOR_SIZE_CODE =omni.NRF_SIZE_CODE  " 
                        +"   AND i.deptid           =omni.DEPT_ID  " 
                        +"   AND i.ClassId          =omni.CLASS_ID   " 
                        +"   AND s.VenId            =omni.VENDOR_ID   " 
                        +"   AND item.MOD_DTM       = '01-JAN-00 12.00.00.000000000 PM'   " 
                        +"   AND sup.MOD_DTM        = '01-JAN-00 12.00.00.000000000 PM' " ;

        LOGGER.info("SKU Attributes Query ----------------> "+GET_SKU_ATTRIBUTES_INFORMATION_XQUERY);

        return  GET_SKU_ATTRIBUTES_INFORMATION_XQUERY;

    }

    /**
     * Gets the style and its child details.
     *
     * @param orinNumber the orin number
     * @param userRole the user role
     * @return the style and its child details
     */
    public  String getStyleAndItsChildDetails(String orinNumber,String userRole)
    {


        final String GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY=
                " WITH "
                        +" INPUT( ORIN) AS "
                        + " ( "
                        +"   SELECT "

               +    orinNumber + " ORIN "
               +"   FROM "
               +"     dual "
               +" ) "
               +" , "
               +" TypeIndex(indx, typ) AS ( "
               +"  ( "
               +"   SELECT "
               +"     1 indx,"
               +"     'Style' typ "
               +  " FROM "
               +"     dual "
               +" ) "
               + " UNION "
               +"  ( "
               +"    SELECT "
               +"      2 indx, "
               +"      'StyleColor' typ "
               +"    FROM "
               +"      dual "
               +"  ) "
               +" UNION "
               +"  ( "
               +"    SELECT "
               +"      3 indx,"
               +"      'SKU' typ "
               +"    FROM "
               +"      dual "
               +"  ) "
               +"  ),"
               +"  Items AS "
               +"  ( "
               +"    SELECT "
               +"      NVL(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID,"
               +"      aic.MDMID,"
               +"      aic.ENTRY_TYPE,"
               +"      i.supplier_id PRIMARY_SUPPLIER_ID,"
               +"      deptid dept_id,"
               +"      classid Class_id,"
               +"      VENDOR_COLOR_CODE,"
               +"      VENDOR_COLOR_DESC,"
               +"      VENDOR_SIZE_CODE,"
               +"      VENDOR_SIZE_DESC,"
               +"      p.ContentState,"
               +"      p.completion_date "
               +"    FROM "
               +"      VENDORPORTAL.ADSE_ITEM_CATALOG aic,"
               +"      XMLTABLE( "
               +"      'for $i in $XML_DATA/pim_entry/entry   "
               +" let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),   "
               +" $non_sellable := (fn:count($i/Item_Simple_Pack_Spec/Sellable_Flag/text()) gt 0 and "
               +" ($i/Item_Simple_Pack_Spec/Sellable_Flag eq \"false\")),"
               +" $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and "
               +" ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),    "
               +"  $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"  "
               +"  return  <out> "
               +"  <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id> "
               +"  <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>  "
               +"  <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>   "
               +"  <flag>{$uda80 and $non_sellable_pack and $removal}</flag> "
               +"  <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode>  "
               +"  <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc> "
               +"  <sizeCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code}</sizeCode> "
               +"  <sizeDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description}</sizeDesc>  "
               +"  </out>' "
               +"        passing aic.XML_DATA AS \"XML_DATA\" columns flag VARCHAR(10) path "
               +"        '/out/flag', supplier_id                        VARCHAR2(20) path "
               +"        '/out/supplier_id', deptid                      VARCHAR2(20) path "
               +"        '/out/dept_id', classid                         VARCHAR2(20) path "
               +"        '/out/class_id', descr                          VARCHAR2(64) path "
               +"        '/out/desc', VENDOR_COLOR_CODE                  VARCHAR2(10) path "
               +"        '/out/colorCode', VENDOR_COLOR_DESC             VARCHAR2(40) path "
               +"        '/out/colorDesc', VENDOR_SIZE_CODE              VARCHAR2(10) path "
               +"        '/out/sizeCode', VENDOR_SIZE_DESC               VARCHAR2(10) path "
               +"        '/out/sizeDesc') i,"
               +"        ADSE_PET_CATALOG pet,"
               +"        XMLTABLE( "
               +"       'for $pet in $pets/pim_entry/entry  "
               +"  let $completionDate := $pet//Completion_Date, "
               +"  $contentState := $pet//ContentState  "
               +"  return <out>  "
               +"  <id>{$pet/Pet_Ctg_Spec/Id}</id>  "
               +"  <completion_date>{$completionDate}</completion_date> "
               +"  <contentState>{$contentState}</contentState>  "
               +"  <contentContainer>{fn:data($contentState/@container)}</contentContainer> "
               +"  </out>' "
               +"        passing pet.XML_DATA AS \"pets\" columns completion_date VARCHAR2(10) path "
               +"        '/out/completion_date', contentState                   VARCHAR2(20) path "
               +"        '/out/contentState', contentContainer                  VARCHAR2(40) PATH "
               +"        '/out/contentContainer') p,"
               +"        Input inp,"
               +"        VENDORPORTAL.adse_reference_data cont "
               +"      WHERE "
               +"        flag             = 'false' "
               +"      AND aic.mdmid      =pet.mdmid "
               +"      AND cont.mdmid     =p.ContentState "
               +"      AND cont.entry_type=p.contentContainer "
               +"      AND "
               +"      ( "
               +"          cont.thevalue  IS NULL "
               +"        OR cont.thevalue <> 'Completed' "
               +"       ) "
               +"      AND pet.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' "
               +"      AND aic.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' "
               +"      AND "
               +"        ( "
               +"          aic.MDMID        =inp.ORIN "
               +"        OR aic.parent_mdmid=inp.ORIN "
               +"        ) "
               +"      AND aic.Entry_type IN ('SKU', 'Style', 'StyleColor') "
               +"    ) "
               +"    , "
               +"    ItemSupplier AS "
               +"    ( "
               +"      SELECT "
               +"        i.PARENT_MDMID, "
               +"        i.MDMID,"
               +"        i.PRIMARY_SUPPLIER_ID,"
               +"        i.dept_id, "
               +"        i.Class_Id,"
               +"        i.VENDOR_COLOR_CODE,"
               +"        i.VENDOR_COLOR_DESC,"
               +"        i.VENDOR_SIZE_CODE,"
               +"        i.VENDOR_SIZE_DESC,"
               +"        i.ENTRY_TYPE,"
               +"        s.VenId,"
               +"        i.ContentState,"
               +"        i.completion_date "
               +"      FROM "
               +"        Items i,"
               +"        VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup,"
               +"        XMLTABLE('for $i in $XML_DATA/pim_entry/entry  "
               +"  return $i' "
               +"        passing sup.xml_data AS \"XML_DATA\" COLUMNS Id VARCHAR2(20) path "
               +"        'Supplier_Ctg_Spec/Id', VenId                 VARCHAR2(20) path "
               +"        'Supplier_Ctg_Spec/VEN_Id' ) s "
               +"      WHERE "
               +"        sup.MOD_DTM             = '01-JAN-00 12.00.00.000000000 PM' "
               +"      AND i.PRIMARY_SUPPLIER_ID = sup.MDMID "
               +"    ) "
               +"  SELECT "
               +"    PARENT_MDMID Style_ID,"
               +"    MDMID ORIN,"
               +"    VENDOR_COLOR_CODE "
               +"    || ' ' "
               +"    || VENDOR_COLOR_DESC COLOR,"
               +"    VENDOR_SIZE_CODE "
               +"   || ' ' "
               +"    || VENDOR_SIZE_DESC Vendor_Size,"
               +"    OMNI_SIZE_DESC,"
               +"    ContentState,"
               +"    completion_date,"
               +"    ENTRY_TYPE "
               +"  FROM "
               +"   ( "
               +"      SELECT "
               +"        PARENT_MDMID ,"
               +"        MDMID ,"
               +"        PRIMARY_SUPPLIER_ID,"
               +"        dept_id,"
               +"        VENDOR_COLOR_CODE,"
               +"        VENDOR_COLOR_DESC ,"
               +"        VENDOR_SIZE_CODE,"
               +"        VENDOR_SIZE_DESC ,"
               +"        OMNI_SIZE_DESC,"
               +"        ContentState,"
               +"        completion_date,"
               +"        ENTRY_TYPE "
               +"      FROM "
               +"        ( "
               +"          SELECT "
               +"            i.PARENT_MDMID,"
               +"            i.MDMID,"
               +"            i.PRIMARY_SUPPLIER_ID,"
               +"            i.dept_id,"
               +"            i.VENDOR_COLOR_CODE,"
               +"            i.VENDOR_COLOR_DESC,"
               +"            i.VENDOR_SIZE_CODE,"
               +"            i.VENDOR_SIZE_DESC,"
               +"            o.OMNI_SIZE_DESC,"
               +"            i.ContentState,"
               +"            i.completion_date,"
               +"            i.ENTRY_TYPE "
               +"          FROM "
               +"            ItemSupplier i,"
               +"            ADSE_VENDOR_OMNISIZE_DESC omni,"
               +"            xmltable('for $i in $XML//omni_size_desc return $i' passing "
               +"            omni.XML_DATA AS \"XML\" columns OMNI_SIZE_DESC VARCHAR(40) path '.' ) "
               +"            o "
               +"          WHERE "
               +"           i.Entry_Type         = 'SKU' "
               +"         AND i.VENDOR_SIZE_CODE =omni.NRF_SIZE_CODE "
               +"         AND i.dept_id          =omni.DEPT_ID "
               +"         AND i.Class_Id         =omni.CLASS_ID "
               +"         AND i.VenId            =omni.VENDOR_ID "
               +"       ) "
               +"     UNION "
               +"       ( "
               +"        SELECT "
               +"           i.PARENT_MDMID,"
               +"           i.MDMID,"
               +"           i.PRIMARY_SUPPLIER_ID,"
               +"           i.dept_id,"
               +"           i.VENDOR_COLOR_CODE,"
               +"           i.VENDOR_COLOR_DESC,"
               +"           i.VENDOR_SIZE_CODE,"
               +"           i.VENDOR_SIZE_DESC,"
               +"           NULL OMNI_SIZE_DESC,"
               +"           i.ContentState,"
               +"           i.completion_date,"
               +"           i.ENTRY_TYPE"
               +"         FROM "
               +"           ItemSupplier i "
               +"         WHERE "
               +"           i.Entry_Type IN ('Style', 'StyleColor') "
               +"       )"
               +"   ) "
               +"   ,"
               +"   TypeIndex typInd "
               +" WHERE "
               +"   ENTRY_TYPE = typInd.typ "
               +" ORDER BY "
               +"   NVL(PARENT_MDMID, MDMID),"
               +"   indx";




        LOGGER.info("GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY......"+GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY);
        return GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY;


    }

    /**
     * Gets the style and style color and sku.
     *
     * @param orinNumber the orin number
     * @param orinNumber2
     * @return the style and style color and sku
     */
    public  String getStyleAndStyleColorAndSKU(String roleName, String orinNumber)
    {
        
        String GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY = " WITH INPUT( ORIN) AS " 
                +"   (SELECT '"+orinNumber+"' ORIN " 
                +"   FROM dual " 
                +"   ) , " 
                +"   TypeIndex(indx, typ) AS (  " 
                +"   ( SELECT 1 indx, 'Style' typ FROM dual " 
                +"   ) " 
                +" UNION " 
                +"   ( SELECT 2 indx, 'StyleColor' typ FROM dual " 
                +"   ) " 
                +" UNION " 
                +"   ( SELECT 3 indx, 'SKU' typ FROM dual " 
                +"   ) " 
                +" UNION " 
                +"   ( SELECT 4 indx, 'Complex Pack' typ FROM dual " 
                +"   ) " 
                +" UNION " 
                +"   ( SELECT 5 indx, 'PackColor' typ FROM dual " 
                +"   ) ), Items AS " 
                +"   (SELECT NVL(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID, " 
                +"     aic.MDMID, " 
                +"     aic.ENTRY_TYPE, " 
                +"     i.supplier_id PRIMARY_SUPPLIER_ID, " 
                +"     deptid dept_id, " 
                +"     classid Class_id, " 
                +"     VENDOR_COLOR_CODE, " 
                +"     VENDOR_COLOR_DESC, " 
                +"     VENDOR_SIZE_CODE, " 
                +"     VENDOR_SIZE_DESC, " 
                +"     P.CONTENTSTATE, " 
                +"     p.contentcontainer, " 
                +"     P.PETSTATE, " 
                +"     p.petcontainer, " 
                +"     p.completion_date " 
                +"   FROM VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
                +"     XMLTABLE( " 
                +"     'for $i in $XML_DATA/pim_entry/entry    " 
                +"     let " 
                +"     $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),   " 
                +"     $non_sellable := (fn:count($i/Item_Simple_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Simple_Pack_Spec/Sellable_Flag eq \"false\")),  " 
                +"     $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),     " 
                +"     $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"   " 
                +"     return  " 
                +"     <out>   " 
                +"     <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>  " 
                +"     <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>   " 
                +"     <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>    " 
                +"     <flag>{$uda80 and $non_sellable_pack and $removal}</flag>   " 
                +"     <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode>    " 
                +"     <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc>   " 
                +"     <sizeCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code}</sizeCode>  " 
                +"     <sizeDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description}</sizeDesc>   " 
                +"     </out>' " 
                +"     passing aic.XML_DATA AS \"XML_DATA\" columns  " 
                +"     flag VARCHAR(10) path '/out/flag',  " 
                +"     supplier_id VARCHAR2(20) path '/out/supplier_id',  " 
                +"     deptid VARCHAR2(20) path '/out/dept_id',  " 
                +"     classid VARCHAR2(20) path '/out/class_id', " 
                +"     descr VARCHAR2(64) path '/out/desc',  " 
                +"     VENDOR_COLOR_CODE VARCHAR2(10) path '/out/colorCode',  " 
                +"     VENDOR_COLOR_DESC VARCHAR2(40) path '/out/colorDesc',  " 
                +"     VENDOR_SIZE_CODE VARCHAR2(10) path '/out/sizeCode', " 
                +"     VENDOR_SIZE_DESC VARCHAR2(10) path '/out/sizeDesc') i, " 
                +"     VENDORPORTAL.ADSE_PET_CATALOG pet, " 
                +"     XMLTABLE( 'for $pet in $pets/pim_entry/entry     " 
                +"     let " 
                +"     $completionDate := $pet//Completion_Date,      " 
                +"     $contentState := $pet//ContentState , " 
                +"     $petState := $pet//State    " 
                +"     return  " 
                +"     <out>    " 
                +"     <id>{$pet/Pet_Ctg_Spec/Id}</id>      " 
                +"     <completion_date>{$completionDate}</completion_date>   " 
                +"     <contentState>{$contentState}</contentState>       " 
                +"     <contentContainer>{fn:data($contentState/@container)}</contentContainer>       " 
                +"     <petState>{$petState}</petState> " 
                +"     <petContainer>{fn:data($petState/@container)}</petContainer>      " 
                +"     </out>'  " 
                +"     passing pet.XML_DATA AS \"pets\" columns " 
                +"     completion_date VARCHAR2(10) path '/out/completion_date', " 
                +"     contentState VARCHAR2(20) path '/out/contentState', CONTENTCONTAINER VARCHAR2(40) PATH '/out/contentContainer', petState VARCHAR2(20) path '/out/petState',petContainer VARCHAR2(40) PATH '/out/petContainer') p, " 
                +"     INPUT INP " 
                +"   WHERE flag          = 'false' " 
                +"   AND AIC.MDMID       =PET.MDMID " 
                +"   AND pet.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
                +"   AND aic.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
                +"   AND ( aic.MDMID     =inp.ORIN " 
                +"   OR aic.parent_mdmid =inp.ORIN ) " 
                +"   AND aic.Entry_type IN ('SKU', 'Style', 'StyleColor', 'Complex Pack', 'PackColor') " 
                +"   ) , " 
                +"   ItemSupplier AS " 
                +"   (SELECT i.PARENT_MDMID, " 
                +"     i.MDMID, " 
                +"     i.PRIMARY_SUPPLIER_ID, " 
                +"     i.dept_id, " 
                +"     i.Class_Id, " 
                +"     i.VENDOR_COLOR_CODE, " 
                +"     i.VENDOR_COLOR_DESC, " 
                +"     i.VENDOR_SIZE_CODE, " 
                +"     i.VENDOR_SIZE_DESC, " 
                +"     i.ENTRY_TYPE, " 
                +"     s.VenId, " 
                +"     I.CONTENTSTATE, " 
                +"     i.contentcontainer, " 
                +"     I.PETSTATE, " 
                +"     i.petcontainer, " 
                +"     i.completion_date " 
                +"   FROM Items i, " 
                +"     VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup, " 
                +"     XMLTABLE('for $i in $XML_DATA/pim_entry/entry    return $i' passing sup.xml_data AS \"XML_DATA\" COLUMNS Id VARCHAR2(20) path 'Supplier_Ctg_Spec/Id', VenId VARCHAR2(20) path 'Supplier_Ctg_Spec/VEN_Id' ) s " 
                +"   WHERE sup.MOD_DTM         = '01-JAN-00 12.00.00.000000000 PM' " 
                +"   AND i.PRIMARY_SUPPLIER_ID = sup.MDMID " 
                +"   ) , " 
                +"   Final AS " 
                +"   (SELECT PARENT_MDMID Style_ID, " 
                +"     MDMID ORIN, " 
                +"     VENDOR_COLOR_CODE COLOR_CODE, " 
                +"     VENDOR_COLOR_CODE " 
                +"     || ' ' " 
                +"     || VENDOR_COLOR_DESC COLOR, " 
                +"     VENDOR_SIZE_CODE " 
                +"     || ' ' " 
                +"     || VENDOR_SIZE_DESC Vendor_Size, " 
                +"     OMNI_SIZE_DESC, " 
                +"     CONTENTSTATE, " 
                +"     contentcontainer, " 
                +"     PETSTATE, " 
                +"     petcontainer, " 
                +"     completion_date, " 
                +"     ENTRY_TYPE " 
                +"   FROM " 
                +"     (SELECT PARENT_MDMID , " 
                +"       MDMID , " 
                +"       PRIMARY_SUPPLIER_ID, " 
                +"       dept_id, " 
                +"       VENDOR_COLOR_CODE, " 
                +"       VENDOR_COLOR_DESC , " 
                +"       VENDOR_SIZE_CODE, " 
                +"       VENDOR_SIZE_DESC , " 
                +"       OMNI_SIZE_DESC, " 
                +"       CONTENTSTATE, " 
                +"       CONTENTCONTAINER, " 
                +"       PETSTATE, " 
                +"       petcontainer, " 
                +"       completion_date, " 
                +"       ENTRY_TYPE " 
                +"     FROM " 
                +"       (SELECT i.PARENT_MDMID, " 
                +"         i.MDMID, " 
                +"         i.PRIMARY_SUPPLIER_ID, " 
                +"         i.dept_id, " 
                +"         i.VENDOR_COLOR_CODE, " 
                +"         i.VENDOR_COLOR_DESC, " 
                +"         i.VENDOR_SIZE_CODE, " 
                +"         i.VENDOR_SIZE_DESC, " 
                +"         o.OMNI_SIZE_DESC, " 
                +"         I.CONTENTSTATE, " 
                +"         i.contentcontainer, " 
                +"         I.PETSTATE, " 
                +"         i.petcontainer, " 
                +"         i.completion_date, " 
                +"         i.ENTRY_TYPE " 
                +"       FROM ItemSupplier i " 
                +"       LEFT OUTER JOIN VENDORPORTAL.ADSE_VENDOR_OMNISIZE_DESC omni " 
                +"       ON i.VENDOR_SIZE_CODE =omni.NRF_SIZE_CODE " 
                +"       AND i.dept_id         =omni.DEPT_ID " 
                +"       AND i.Class_Id        =omni.CLASS_ID " 
                +"       LEFT OUTER JOIN xmltable('for $i in $XML//omni_size_desc return $i' " 
                +"       passing omni.XML_DATA AS \"XML\" columns OMNI_SIZE_DESC VARCHAR(40) path '.' ) o " 
                +"       ON 1 = 1 " 
                +"       WHERE i.Entry_Type = 'SKU' " 
                +"       ) " 
                +"     UNION " 
                +"       (SELECT i.PARENT_MDMID, " 
                +"         i.MDMID, " 
                +"         i.PRIMARY_SUPPLIER_ID, " 
                +"         i.dept_id, " 
                +"         i.VENDOR_COLOR_CODE, " 
                +"         i.VENDOR_COLOR_DESC, " 
                +"         i.VENDOR_SIZE_CODE, " 
                +"         i.VENDOR_SIZE_DESC, " 
                +"         NULL OMNI_SIZE_DESC, " 
                +"         I.CONTENTSTATE, " 
                +"         i.contentcontainer, " 
                +"         I.PETSTATE, " 
                +"         i.petcontainer, " 
                +"         i.completion_date, " 
                +"         i.ENTRY_TYPE " 
                +"       FROM ItemSupplier i " 
                +"       WHERE i.Entry_Type IN ('Style', 'StyleColor', 'Complex Pack', 'PackColor') " 
                +"       ) " 
                +"     ) , " 
                +"     TypeIndex typInd " 
                +"   WHERE ENTRY_TYPE = typInd.typ " 
                +"   ORDER BY NVL(PARENT_MDMID, MDMID), " 
                +"     INDX " 
                +"   ) , " 
                +"   finaltable AS " 
                +"   (SELECT F.STYLE_ID, " 
                +"     f.ORIN, " 
                +"     f.COLOR_CODE, " 
                +"     f.COLOR, " 
                +"     F.VENDOR_SIZE, " 
                +"     F.OMNI_SIZE_DESC, " 
                +"     CONT.THEVALUE CONTENTSTATUS, " 
                +"     PET.THEVALUE PETSTATUS, " 
                +"     F.COMPLETION_DATE, " 
                +"     F.ENTRY_TYPE " 
                +"   FROM FINAL F " 
                +"   LEFT OUTER JOIN VENDORPORTAL.adse_reference_data cont " 
                +"   ON CONT.MDMID       =F.CONTENTSTATE " 
                +"   AND cont.entry_type =f.contentContainer " 
                +"   LEFT OUTER JOIN VENDORPORTAL.ADSE_REFERENCE_DATA PET " 
                +"   ON PET.MDMID        =F.PETSTATE " 
                +"   AND PET.ENTRY_TYPE  =F.PETCONTAINER " 
                +"   AND f.petstate NOT IN(05) " 
                +"   ) " 
                +" SELECT F.STYLE_ID, " 
                +"     f.ORIN, " 
                +"     f.COLOR_CODE, " 
                +"     f.COLOR, " 
                +"     F.VENDOR_SIZE, " 
                +"     max (F.OMNI_SIZE_DESC), " 
                +"     f.CONTENTSTATUS, " 
                +"     f.PETSTATUS, " 
                +"     F.COMPLETION_DATE, " 
                +"     F.ENTRY_TYPE " 
                +" FROM finaltable F " 
                +" WHERE CONTENTSTATUS IN ('Initiated','Completed','Ready_For_Review') " 
                +" OR (entry_type       = 'SKU' " 
                +" AND CONTENTSTATUS   IN ('Initiated','Completed','Ready_For_Review', 'Closed')) " 
                +" group by F.STYLE_ID, f.ORIN, f.COLOR_CODE, f.COLOR, F.VENDOR_SIZE, f.CONTENTSTATUS, f.PETSTATUS, F.COMPLETION_DATE, F.ENTRY_TYPE " ;

       /* String GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY =   " WITH INPUT( ORIN) AS " 
                +"   (SELECT '"+orinNumber+"' ORIN " 
                +"   FROM dual " 
                +"   ) , " 
                +"   TypeIndex(indx, typ) AS ( " 
                +"   ( SELECT 1 indx, 'Style' typ FROM dual " 
                +"   ) " 
                +" UNION " 
                +"   ( SELECT 2 indx, 'StyleColor' typ FROM dual " 
                +"   ) " 
                +" UNION " 
                +"   ( SELECT 3 indx, 'SKU' typ FROM dual " 
                +"   ) " 
                +" UNION " 
                +"   ( SELECT 4 indx, 'Complex Pack' typ FROM dual " 
                +"   ) " 
                +" UNION " 
                +"   ( SELECT 5 indx, 'PackColor' typ FROM dual " 
                +"   ) ), Items AS " 
                +"   (SELECT NVL(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID, " 
                +"     aic.MDMID, " 
                +"     aic.ENTRY_TYPE, " 
                +"     i.supplier_id PRIMARY_SUPPLIER_ID, " 
                +"     deptid dept_id, " 
                +"     classid Class_id, " 
                +"     VENDOR_COLOR_CODE, " 
                +"     VENDOR_COLOR_DESC, " 
                +"     VENDOR_SIZE_CODE, " 
                +"     VENDOR_SIZE_DESC, " 
                +"     P.CONTENTSTATE, " 
                +"     p.contentcontainer, " 
                +"     P.PETSTATE, " 
                +"     p.petcontainer, " 
                +"     p.completion_date " 
                +"   FROM VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
                +"     XMLTABLE( " 
                +"     'for $i in $XML_DATA/pim_entry/entry    let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),   " 
                +"     $non_sellable := (fn:count($i/Item_Simple_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Simple_Pack_Spec/Sellable_Flag eq \"false\")), " 
                +"     $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),      $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"    return  <out>   <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>   <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>    <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>     <flag>{$uda80 and $non_sellable_pack and $removal}</flag>   <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode>    <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc>   <sizeCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code}</sizeCode>   <sizeDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description}</sizeDesc>    </out>' " 
                +"     passing aic.XML_DATA AS \"XML_DATA\" columns flag VARCHAR(10) path '/out/flag', supplier_id VARCHAR2(20) path '/out/supplier_id', deptid VARCHAR2(20) path '/out/dept_id', classid VARCHAR2(20) path '/out/class_id', descr VARCHAR2(64) path '/out/desc', VENDOR_COLOR_CODE VARCHAR2(10) path '/out/colorCode', VENDOR_COLOR_DESC VARCHAR2(40) path '/out/colorDesc', VENDOR_SIZE_CODE VARCHAR2(10) path '/out/sizeCode', " 
                +"     VENDOR_SIZE_DESC VARCHAR2(10) path '/out/sizeDesc') i, " 
                +"     VENDORPORTAL.ADSE_PET_CATALOG pet, " 
                +"     XMLTABLE( 'for $pet in $pets/pim_entry/entry    let $completionDate := $pet//Completion_Date,  " 
                +"     $contentState := $pet//ContentState ,$petState := $pet//State   return <out>    <id>{$pet/Pet_Ctg_Spec/Id}</id> " 
                +"     <completion_date>{$completionDate}</completion_date>   <contentState>{$contentState}</contentState>  " 
                +"     <contentContainer>{fn:data($contentState/@container)}</contentContainer>  " 
                +"     <petState>{$petState}</petState><petContainer>{fn:data($petState/@container)}</petContainer>   " 
                +"     </out>' passing pet.XML_DATA AS \"pets\" columns completion_date VARCHAR2(10) path '/out/completion_date', " 
                +"     contentState VARCHAR2(20) path '/out/contentState', CONTENTCONTAINER VARCHAR2(40) PATH '/out/contentContainer', " 
                +"     petState VARCHAR2(20) path '/out/petState',petContainer VARCHAR2(40) PATH '/out/petContainer') p, " 
                +"     INPUT INP " 
                +"   WHERE flag          = 'false' " 
                +"   AND AIC.MDMID       =PET.MDMID " 
                +"   AND pet.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
                +"   AND aic.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
                +"   AND ( aic.MDMID     =inp.ORIN " 
                +"   OR aic.parent_mdmid =inp.ORIN ) " 
                +"   AND aic.Entry_type IN ('SKU', 'Style', 'StyleColor', 'Complex Pack', 'PackColor') " 
                +"   ) , " 
                +"   ItemSupplier AS " 
                +"   (SELECT i.PARENT_MDMID, " 
                +"     i.MDMID, " 
                +"     i.PRIMARY_SUPPLIER_ID, " 
                +"     i.dept_id, " 
                +"     i.Class_Id, " 
                +"     i.VENDOR_COLOR_CODE, " 
                +"     i.VENDOR_COLOR_DESC, " 
                +"     i.VENDOR_SIZE_CODE, " 
                +"     i.VENDOR_SIZE_DESC, " 
                +"     i.ENTRY_TYPE, " 
                +"     s.VenId, " 
                +"     I.CONTENTSTATE, " 
                +"     i.contentcontainer, " 
                +"     I.PETSTATE, " 
                +"     i.petcontainer, " 
                +"     i.completion_date " 
                +"   FROM Items i, " 
                +"     VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup, " 
                +"     XMLTABLE('for $i in $XML_DATA/pim_entry/entry    return $i' passing sup.xml_data AS \"XML_DATA\" COLUMNS Id VARCHAR2(20) path 'Supplier_Ctg_Spec/Id', VenId VARCHAR2(20) path 'Supplier_Ctg_Spec/VEN_Id' ) s " 
                +"   WHERE sup.MOD_DTM         = '01-JAN-00 12.00.00.000000000 PM' " 
                +"   AND i.PRIMARY_SUPPLIER_ID = sup.MDMID " 
                +"   ) , " 
                +"   Final AS " 
                +"   (SELECT PARENT_MDMID Style_ID, " 
                +"     MDMID ORIN, " 
                +"     VENDOR_COLOR_CODE COLOR_CODE, " 
                +"     VENDOR_COLOR_CODE " 
                +"     || ' ' " 
                +"     || VENDOR_COLOR_DESC COLOR, " 
                +"     VENDOR_SIZE_CODE " 
                +"     || ' ' " 
                +"     || VENDOR_SIZE_DESC Vendor_Size, " 
                +"     OMNI_SIZE_DESC, " 
                +"     CONTENTSTATE, " 
                +"     contentcontainer, " 
                +"     PETSTATE, " 
                +"     petcontainer, " 
                +"     completion_date, " 
                +"     ENTRY_TYPE " 
                +"   FROM " 
                +"     (SELECT PARENT_MDMID , " 
                +"       MDMID , " 
                +"       PRIMARY_SUPPLIER_ID, " 
                +"       dept_id, " 
                +"       VENDOR_COLOR_CODE, " 
                +"       VENDOR_COLOR_DESC , " 
                +"       VENDOR_SIZE_CODE, " 
                +"       VENDOR_SIZE_DESC , " 
                +"       OMNI_SIZE_DESC, " 
                +"       CONTENTSTATE, " 
                +"       CONTENTCONTAINER, " 
                +"       PETSTATE, " 
                +"       petcontainer, " 
                +"       completion_date, " 
                +"       ENTRY_TYPE " 
                +"     FROM " 
                +"       (SELECT i.PARENT_MDMID, " 
                +"         i.MDMID, " 
                +"         i.PRIMARY_SUPPLIER_ID, " 
                +"         i.dept_id, " 
                +"         i.VENDOR_COLOR_CODE, " 
                +"         i.VENDOR_COLOR_DESC, " 
                +"         i.VENDOR_SIZE_CODE, " 
                +"         i.VENDOR_SIZE_DESC, " 
                +"         o.OMNI_SIZE_DESC, " 
                +"         I.CONTENTSTATE, " 
                +"         i.contentcontainer, " 
                +"         I.PETSTATE, " 
                +"         i.petcontainer, " 
                +"         i.completion_date, " 
                +"         i.ENTRY_TYPE " 
                +"       FROM ItemSupplier i LEFT OUTER JOIN " 
                +"         VENDORPORTAL.ADSE_VENDOR_OMNISIZE_DESC omni " 
                +"         ON i.VENDOR_SIZE_CODE =omni.NRF_SIZE_CODE " 
                +"         AND i.dept_id          =omni.DEPT_ID " 
                +"         AND i.Class_Id         =omni.CLASS_ID " 
          //      +"         AND i.VenId            =omni.VENDOR_ID " 
                +"         LEFT OUTER JOIN " 
                +"         xmltable('for $i in $XML//omni_size_desc return $i' passing omni.XML_DATA AS \"XML\" columns OMNI_SIZE_DESC VARCHAR(40) path '.' ) o " 
                +"         ON 1 = 1 " 
                +"       WHERE i.Entry_Type     = 'SKU' " 
                +"       ) " 
                +"     UNION " 
                +"       (SELECT i.PARENT_MDMID, " 
                +"         i.MDMID, " 
                +"         i.PRIMARY_SUPPLIER_ID, " 
                +"         i.dept_id, " 
                +"         i.VENDOR_COLOR_CODE, " 
                +"         i.VENDOR_COLOR_DESC, " 
                +"         i.VENDOR_SIZE_CODE, " 
                +"         i.VENDOR_SIZE_DESC, " 
                +"         NULL OMNI_SIZE_DESC, " 
                +"         I.CONTENTSTATE, " 
                +"         i.contentcontainer, " 
                +"         I.PETSTATE, " 
                +"         i.petcontainer, " 
                +"         i.completion_date, " 
                +"         i.ENTRY_TYPE " 
                +"       FROM ItemSupplier i " 
                +"       WHERE i.Entry_Type IN ('Style', 'StyleColor', 'Complex Pack', 'PackColor') " 
                +"       ) " 
                +"     ) , " 
                +"     TypeIndex typInd " 
                +"   WHERE ENTRY_TYPE = typInd.typ " 
                +"   ORDER BY NVL(PARENT_MDMID, MDMID), " 
                +"     INDX " 
                +"   ) , " 
                +"   finaltable AS " 
                +"   (SELECT F.STYLE_ID, " 
                +"     f.ORIN, " 
                +"     f.COLOR_CODE, " 
                +"     f.COLOR, " 
                +"     F.VENDOR_SIZE, " 
                +"     F.OMNI_SIZE_DESC, " 
                +"     CONT.THEVALUE CONTENTSTATUS, " 
                +"     PET.THEVALUE PETSTATUS, " 
                +"     F.COMPLETION_DATE, " 
                +"     F.ENTRY_TYPE " 
                +"   FROM FINAL F " 
                +"   LEFT OUTER JOIN VENDORPORTAL.adse_reference_data cont " 
                +"   ON CONT.MDMID       =F.CONTENTSTATE " 
                +"   AND cont.entry_type =f.contentContainer " 
                +"   LEFT OUTER JOIN VENDORPORTAL.ADSE_REFERENCE_DATA PET " 
                +"   ON PET.MDMID        =F.PETSTATE " 
                +"   AND PET.ENTRY_TYPE  =F.PETCONTAINER " 
                +"   AND f.petstate NOT IN(05) " 
                +"   ) " 
                +" SELECT * " 
                +" FROM finaltable " 
                +" WHERE CONTENTSTATUS IN ('Initiated','Completed','Ready_For_Review') " 
                +" OR (entry_type       = 'SKU' " 
                +" AND CONTENTSTATUS   IN ('Initiated','Completed','Ready_For_Review', 'Closed')) " ;*/

      

        LOGGER.info("GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY---------"+GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY);
        return GET_STYLE_STYLECOLOR_SKU_INFORMATION_XQUERY;
    }


    /**
     * Gets the style color attributes.
     *
     * @param orinNmber the orin nmber
     * @return the style color attributes
     */
    public  String getStyleColorAttributes(String orinNmber ) {




        String GET_STYLE_COLOR_ATTRIBUTES_XQUERY = " WITH "
                +" INPUT(ORIN) AS "
                +"   ( "
                +"     SELECT "
                +"       '"+orinNmber+"' ORIN "
                +"     FROM "
                +"       dual "
                +"   ), "
                +"   pettable AS "
                +"   ( "
                +"   (select NRF_Color_Code, "
                +"   NRF_Color_Description, "
                +"   Secondary_Color_1, "
                +"   Secondary_Color_2, "
                +"   Secondary_Color_3, "
                +"   Secondary_Color_4, "
                +"   Omni_Channel_Color, "
                +"   Color_Family_Code   "
                +"   FROM "
                +"   vendorportal.ADSE_PET_CATALOG, "
                +"   xmltable('for $i in $pet/pim_entry/entry/Ecomm_StyleColor_Spec return $i' "
                +"   passing XML_DATA AS \"pet\" columns  "
                +"   NRF_Color_Code          VARCHAR2(40) path  'NRF_Color_Code',  "
                +"   NRF_Color_Description   VARCHAR2(40) path  'NRF_Color_Description',  "
                +"   Secondary_Color_1       VARCHAR2(40) path  'Secondary_Color_1',  "
                +"   Secondary_Color_2       VARCHAR2(40) path  'Secondary_Color_2',  "
                +"   Secondary_Color_3       VARCHAR2(40) path  'Secondary_Color_3',  "
                +"   Secondary_Color_4       VARCHAR2(40) path  'Secondary_Color_4',  "
                +"   Omni_Channel_Color      VARCHAR2(40) path  'Omni_Channel_Color_Description',  "
                +"   Color_Family_Code       VARCHAR2(40) path  'Omnichannel_Color_Family' "
                +"    ) i, "
                +"   Input inp "
                +" WHERE "
                +"   Entry_Type = 'StyleColor' "
                +" AND mdmid    =inp.ORIN) "
                +" UNION ALL "
                +"   (select NRF_Color_Code, "
                +"   NRF_Color_Description, "
                +"   Secondary_Color_1, "
                +"   Secondary_Color_2, "
                +"   Secondary_Color_3, "
                +"   Secondary_Color_4, "
                +"   Omni_Channel_Color, "
                +"   Color_Family_Code   "
                +"   FROM "
                +"   vendorportal.ADSE_PET_CATALOG, "
                +"   xmltable('for $i in $pet/pim_entry/entry/Ecomm_PackColor_Spec return $i' "
                +"   passing XML_DATA AS \"pet\" columns  "
                +"   NRF_Color_Code          VARCHAR2(40) path  'NRF_Color_Code',  "
                +"   NRF_Color_Description   VARCHAR2(40) path  'NRF_Color_Description',  "
                +"   Secondary_Color_1       VARCHAR2(40) path  'Secondary_Color_1',  "
                +"   Secondary_Color_2       VARCHAR2(40) path  'Secondary_Color_2',  "
                +"   Secondary_Color_3       VARCHAR2(40) path  'Secondary_Color_3',  "
                +"   Secondary_Color_4       VARCHAR2(40) path  'Secondary_Color_4',  "
                +"   Omni_Channel_Color      VARCHAR2(40) path  'Omni_Channel_Color_Description',  "
                +"   Color_Family_Code       VARCHAR2(40) path  'Omnichannel_Color_Family' "
                +"    ) i, "
                +"   Input inp "
                +" WHERE "
                +"   Entry_Type = 'PackColor' "
                +" AND mdmid    =inp.ORIN) "
                +" ) "
                +" select pt.*, s.code,s.super_Color_name from pettable pt, VENDORPORTAL.ADSE_REFERENCE_DATA ard, "
                +" xmltable('for $i in $ref/pim_entry/entry/Omni_Channel_Color_Family_Spec return $i' "
                +"   passing ard.XML_DATA AS \"ref\" columns "
                +"   Code   VARCHAR2(40) path  'Code', "
                +"   SUPER_COLOR_NAME  VARCHAR2(40) path  'SUPER_COLOR_NAME') s "
                +"   where  "
                +"   ard.Container = 'Omnichannel_Color_Family' "
                +"   and  "
                +"   pt.Color_Family_Code = s.code " ;

        System.out.println("GET_STYLE_COLOR_ATTRIBUTES_XQUERY-----"+GET_STYLE_COLOR_ATTRIBUTES_XQUERY);
        return GET_STYLE_COLOR_ATTRIBUTES_XQUERY;

    }


    /**
     * Gets the style information.
     *
     * @param orinNumber the orin number
     * @return the style information
     */
    public  String getStyleInformation(String orinNumber) {

                String GET_STYLE_INFORMATION_XQUERY = " WITH INPUT( ORIN) AS " 
                        +"   (SELECT '"+orinNumber+"' ORIN " 
                        +"   FROM dual " 
                        +"   ) , " 
                        +"   TypeIndex(indx, typ) AS ( " 
                        +"   ( SELECT 1 indx, 'Style' typ FROM dual " 
                        +"   ) " 
                        +" UNION " 
                        +"   ( SELECT 2 indx, 'StyleColor' typ FROM dual " 
                        +"   ) " 
                        +" UNION " 
                        +"   ( SELECT 3 indx, 'SKU' typ FROM dual " 
                        +"   ) " 
                        +" UNION " 
                        +"   ( SELECT 4 indx, 'Complex Pack' typ FROM dual " 
                        +"   ) " 
                        +" UNION " 
                        +"   ( SELECT 5 indx, 'PackColor' typ FROM dual " 
                        +"   ) ) , Items AS " 
                        +"   (SELECT NVL(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID, " 
                        +"     aic.MDMID, " 
                        +"     aic.ENTRY_TYPE, " 
                        +"     descr DESCRIPTION, " 
                        +"     i.supplier_id PRIMARY_SUPPLIER_ID, " 
                        +"     deptid dept_id, " 
                        +"     classid Class_Id, " 
                        +"     Vendor_Image, " 
                        +"     Vendor_Sample, " 
                        +"      " 
                        +"     completion_date, " 
                        +"     aic.XML_DATA " 
                        +"   FROM VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
                        +"     XMLTABLE( 'for $i in $XML_DATA/pim_entry/entry           let              " 
                        +"     $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),    " 
                        +"     $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),   " 
                        +"     $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\" ,   " 
                        +"     $ven_style := $i//Vendor_Style/text() " 
                        +"     return    " 
                        +"     <out>                   " 
                        +"     <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path, \"\\||///\")[5]}</dept_id>    " 
                        +"     <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>     " 
                        +"     <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>                  " 
                        +"     <desc>{$i/Item_Ctg_Spec/Description/Long}</desc>    " 
                        +"     <flag>{$uda80 and $non_sellable_pack and $removal}</flag>  " 
                        +"     </out>' passing " 
                        +"     aic.XML_DATA AS \"XML_DATA\" columns  " 
                        +"     flag VARCHAR(10) path '/out/flag',  " 
                        +"     supplier_id VARCHAR2(20) path '/out/supplier_id',  " 
                        +"     deptid VARCHAR2(20) path '/out/dept_id',  " 
                        +"     classid VARCHAR2(20) path '/out/class_id',  " 
                        +"     descr VARCHAR2(64) path '/out/desc') i, " 
                        +"     Input inp, " 
                        +"     VENDORPORTAL.ADSE_PET_CATALOG pet, " 
                        +"     XMLTABLE( 'for $i in $pet/pim_entry/entry    let $completionDate := $i//Completion_Date  return   <out>   <img>{if(count($i/Image_Sec_Spec/Images//*) gt 0) then \"Y\" else \"N\"}</img>   <sample>{if(count($i/Image_Sec_Spec/Sample//*) gt 0) then \"Y\" else \"N\"}</sample>   <completion_date>{$completionDate}</completion_date>  </out>' passing pet.xml_data AS \"pet\" columns Vendor_Image VARCHAR2(1) path '/out/img', Vendor_Sample VARCHAR2(1) path '/out/sample', completion_date VARCHAR2(10) path '/out/completion_date') s " 
                        +"   WHERE flag          = 'false' " 
                        +"   AND pet.mdmid       = aic.mdmid " 
                        +"   AND pet.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
                        +"   AND aic.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
                        +"   AND aic.MDMID       =inp.ORIN " 
                        +"   AND aic.Entry_type IN ('SKU', 'Style', 'StyleColor','Complex Pack','PackColor') " 
                        +"   ) , " 
                        +"   VendorStyle AS ( " 
                        +"     SELECT i.PARENT_MDMID, " 
                        +"         i.MDMID, " 
                        +"         i.DESCRIPTION, " 
                        +"         i.PRIMARY_SUPPLIER_ID, " 
                        +"         i.dept_id, " 
                        +"         i.ENTRY_TYPE, " 
                        +"         i.Class_Id, " 
                        +"         i.Vendor_Image, " 
                        +"         i.Vendor_Sample, " 
                        +"         ia.Vendor_Sytle, " 
                        +"         i.completion_date " 
                        +"       FROM Items i, " 
                        +"           XMLTABLE( " 
                        +"           'for $i in $XML_DATA/pim_entry/entry/Item_Ctg_Spec/Supplier " 
                        +"           let  " 
                        +"           $ven_style := $i/VPN/text(), " 
                        +"           $primary_flag := $i/Primary_Flag/text()          " 
                        +"           return   " 
                        +"           <out> " 
                        +"             <Vendor_Sytle>{$ven_style}</Vendor_Sytle>  " 
                        +"             <primary_flag>{$primary_flag}</primary_flag> " 
                        +"           </out>'      " 
                        +"           passing i.XML_DATA AS \"XML_DATA\" columns  " 
                        +"           Vendor_Sytle VARCHAR2(100) path '/out/Vendor_Sytle', " 
                        +"           primary_flag VARCHAR(25) path '/out/primary_flag') ia        " 
                        +"         WHERE " 
                        +"           primary_flag = 'true' " 
                        +"   ), " 
                        +"    " 
                        +"   ItemSupplier AS " 
                        +"   (SELECT i.PARENT_MDMID, " 
                        +"     i.MDMID, " 
                        +"     i.DESCRIPTION, " 
                        +"     i.PRIMARY_SUPPLIER_ID, " 
                        +"     i.dept_id, " 
                        +"     s.SITE_NAME, " 
                        +"     i.ENTRY_TYPE, " 
                        +"     s.VenId, " 
                        +"     i.Class_Id, " 
                        +"     s.OmnichannelIndicator, " 
                        +"     s.VenName, " 
                        +"     sup.XML_DATA, " 
                        +"     Vendor_Image, " 
                        +"     Vendor_Sample, " 
                        +"     i.Vendor_Sytle, " 
                        +"     completion_date " 
                        +"   FROM VendorStyle i, " 
                        +"     VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup, " 
                        +"     XMLTABLE('for $i in $XML_DATA/pim_entry/entry       return $i' passing sup.xml_data AS \"XML_DATA\" COLUMNS Id VARCHAR2(20) path 'Supplier_Ctg_Spec/Id', VenName VARCHAR2(20) path 'Supplier_Ctg_Spec/Name', VenId VARCHAR2(20) path 'Supplier_Ctg_Spec/VEN_Id', SITE_NAME VARCHAR2(50) path 'Supplier_Ctg_Spec/Name', OmnichannelIndicator VARCHAR(2) path 'if (Supplier_Site_Spec/Omni_Channel/Omni_Channel_Indicator eq \"true\") then \"Y\" else \"N\"' ) s " 
                        +"   WHERE sup.MOD_DTM         = '01-JAN-00 12.00.00.000000000 PM' " 
                        +"   AND i.PRIMARY_SUPPLIER_ID = sup.MDMID " 
                        +"   ) " 
                        +" SELECT i.MDMID ORIN, " 
                        +"   i.dept_id, " 
                        +"   VenName Vendor_Name, " 
                        +"   i.Vendor_Sytle Style_Id, " 
                        +"   i.Class_Id, " 
                        +"   i.VenId Vendor_Id, " 
                        +"   i.DESCRIPTION, " 
                        +"   i.OmnichannelIndicator OMNIChannel_Vendor, " 
                        +"   Vendor_Image, " 
                        +"   Vendor_Sample, " 
                        +"   i.ENTRY_TYPE, " 
                        +"   completion_date " 
                        +" FROM ItemSupplier i, " 
                        +"   TypeIndex t " 
                        +" WHERE i.ENTRY_TYPE = t.typ " 
                        +" ORDER BY i.Parent_MDMID, " 
                        +"   t.indx " ;


        LOGGER.info("---------------------GET_STYLE_INFORMATION_XQUERY---------------------"+GET_STYLE_INFORMATION_XQUERY );

        return GET_STYLE_INFORMATION_XQUERY;
    }



}
