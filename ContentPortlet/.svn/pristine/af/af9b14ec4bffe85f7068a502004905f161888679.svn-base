
package com.belk.pep.dao.impl;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

import com.belk.pep.constants.XqueryConstants;
import com.belk.pep.dao.ContentDAO;
import com.belk.pep.exception.checked.PEPFetchException;
import com.belk.pep.model.PetsFound;
import com.belk.pep.vo.ChildSkuVO;
import com.belk.pep.vo.ColorAttributesVO;
import com.belk.pep.vo.ContentHistoryVO;
import com.belk.pep.vo.ContentManagementVO;
import com.belk.pep.vo.CopyAttributesVO;
import com.belk.pep.vo.GlobalAttributesVO;
import com.belk.pep.vo.ItemPrimaryHierarchyVO;
import com.belk.pep.vo.ProductDetailsVO;
import com.belk.pep.vo.StyleInformationVO;

/**
 * The Class ContentDAOImpl.
 */
public class ContentDAOImpl implements ContentDAO{
    /** The Constant LOGGER. */
    private final static Logger LOGGER = Logger.getLogger(ContentDAOImpl.class
        .getName());

    /** The session factory. */
    private SessionFactory sessionFactory;

  
    /**
     * Sets the session factory.
     *
     * @param sessionFactory the new session factory
     */
    public void setSessionFactory(SessionFactory sessionFactory) {
        this.sessionFactory = sessionFactory;
    }

    /**
     * Gets the session factory.
     *
     * @return the sessionFactory
     */
    public SessionFactory getSessionFactory() {
        return sessionFactory;
    }

    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getStyleInfoFromADSE(java.lang.String)
     */
    @Override
    public StyleInformationVO getStyleInfoFromADSE(String orinNumber)
        throws PEPFetchException {
        Session session = null;
        Transaction transaction = null;
        StyleInformationVO style = null;
        List<Object[]> rows=null;
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction = session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getStyleInformation(orinNumber));
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null)
            {
                for (Object[] row : rows) {
                    style = new StyleInformationVO();
                    style.setOrin(checkNull(row[0]));
                    style.setDepartmentId(checkNull(row[1]));
                    style.setVendorName(checkNull(row[2]));
                    LOGGER.info("-----getStyleId--checkNull(row[3])----"+ checkNull(row[3]));                   
                    style.setStyleId(checkNull(row[3]));
                    style.setClassId(checkNull(row[4]));
                    style.setVendorId(checkNull(row[5]));
                    style.setDescription(checkNull(row[6]));
                    style.setOmniChannelVendorIndicator(checkNull(row[7]));
                    style.setVendorProvidedImageIndicator(checkNull(row[8]));
                    style.setVendorSampleIndicator(checkNull(row[9]));
                    style.setEntryType(checkNull(row[10]));

                } 
            }
            

        }catch(Exception e) {
            e.printStackTrace();
            throw new PEPFetchException(e);
        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return style;
        
    }

    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getProductInfoFromADSE(java.lang.String)
     */
    @Override
    public ProductDetailsVO getProductInfoFromADSE(String orinNumber)
        throws PEPFetchException {
    
        Session session = null;
        Transaction transaction = null;
        ProductDetailsVO  productDetails = null;
        List<Object[]> rows=null;
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getProductDetails(orinNumber));
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null)
            {
                for (Object[] row : rows) {
                    productDetails = new ProductDetailsVO();
                    productDetails.setProductName(checkNull(row[2]));
                    productDetails.setProductDescription(checkNull(row[3]));                   

                } 
            }
            

        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return productDetails;
    }

    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getStyleAndItsChildFromADSE(java.lang.String)
     */
    @Override
    public List<PetsFound> getStyleAndItsChildFromADSE(String orinNumber)
        throws PEPFetchException {
      
        List<PetsFound> petList = new ArrayList<PetsFound>();
        PetsFound pet=null;
        XqueryConstants xqueryConstants= new XqueryConstants();
        Session session = null;
        Transaction transaction =  null;
            
          try{
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();      
           //Hibernate provides a createSQLQuery method to let you call your native SQL statement directly.   
            Query query = session.createSQLQuery(xqueryConstants.getStyleAndItsChildDetails(orinNumber));  
            LOGGER.info("Query.." + query);
            // execute delete SQL statement
            List<Object[]> rows = query.list();
            if (rows != null) {
                LOGGER.info("recordsFetched..." + rows);
                for(Object[] row : rows){   
                    LOGGER.info(" getStyleAndItsChildFromADSE  Query Executing.....");
                    String parentStyleORIN = row[0]!=null?row[0].toString():null;                    
                    String orinNumberFromDB=row[1]!=null?row[1].toString():null;                  
                    String color=row[2]!=null?row[2].toString():null;
                    String vendorSize=row[3]!=null?row[3].toString():null;
                    String omniSizeDescription=row[4]!=null?row[4].toString():null;
                    String contentState=row[5]!=null?row[5].toString():null;
                    String completionDate=row[6]!=null?row[6].toString():null;
                    String entryType=row[7]!=null?row[7].toString():null;
                    
                    pet = new PetsFound();                    
                    pet.setParentStyleOrin(checkNull(row[0]));
                    pet.setOrinNumber(checkNull(row[1]));
                    pet.setColor(checkNull(row[2]));
                    pet.setVendorSize(checkNull(row[3]));
                    pet.setOmniSizeDescription(checkNull(row[4]));
                    pet.setContentState(checkNull(row[5]));
                    pet.setCompletionDate(checkNull(row[6]));                   
                    pet.setEntryType(checkNull(row[7]));                  
                                                                         
                    petList.add(pet);
                }
                LOGGER.info("petList size..."+petList.size());
          } 
            
        
      }catch(Exception e){
          LOGGER.info("Exception..." + e.getMessage());
        
     }
      finally
      {
          LOGGER.info("recordsFetched. getStyleAndItsChildFromADSE finally block.." );
          session.flush();
          transaction.commit();
          session.close();
         
      }

            LOGGER.info("This is from getStyleAndItsChildFromADSE..End" );
            return petList;

    }
    
    

  

    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getStyleAttributesFromADSE(java.lang.String)
     */
    @Override
    public GlobalAttributesVO getStyleAttributesFromADSE(String orinNumber)
        throws PEPFetchException {
    
        Session session = null;
        Transaction transaction = null;
        GlobalAttributesVO  styleAttributes = null;
        List<Object[]> rows=null;
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getStyleAttributeDetails(orinNumber));
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null)
            {
                for (Object[] row : rows) {
                    styleAttributes = new GlobalAttributesVO ();
                    
                    
                    styleAttributes.setMdmid(checkNull(row[0]));
                    styleAttributes.setOmniChannelBrand(checkNull(row[1]));
                    styleAttributes.setOmniChannelBrandXpath(checkNull(row[2]));
                    styleAttributes.setProductDescription(checkNull(row[3]));
                    styleAttributes.setProductDescriptionXpath(checkNull(row[4]));
                    styleAttributes.setLaunchDate(checkNull(row[5]));
                    styleAttributes.setLaunchDateXpath(checkNull(row[6]));
                    styleAttributes.setBelkExclusive(checkNull(row[7]));
                    styleAttributes.setBelkExclusiveXpath(checkNull(row[8]));
                    styleAttributes.setChannelExclusive(checkNull(row[9]));
                    styleAttributes.setBelkExclusiveXpath(checkNull(row[10]));
                    styleAttributes.setSdf(checkNull(row[11]));
                    styleAttributes.setSdfXpath(checkNull(row[12]));
                    styleAttributes.setProductDimensionUom(checkNull(row[13]));
                    styleAttributes.setProductDimensionUomXpath(checkNull(row[14]));
                    styleAttributes.setProductLength(checkNull(row[15]));
                    styleAttributes.setProductLengthXpath(checkNull(row[16]));
                    styleAttributes.setProductHeight(checkNull(row[17]));                    
                    styleAttributes.setProductHeightXpath(checkNull(row[18]));
                    styleAttributes.setBopis(checkNull(row[19]));
                    styleAttributes.setBopisXpath(checkNull(row[20]));
                    styleAttributes.setGiftBox(checkNull(row[21]));
                    styleAttributes.setGiftBoxXpath(checkNull(row[22]));
                    styleAttributes.setImportDomestic(checkNull(row[23]));
                    styleAttributes.setImportDomesticXpath(checkNull(row[24]));
                    styleAttributes.setProductWeightUom(checkNull(row[25]));
                    styleAttributes.setProductWeightUomXpath(checkNull(row[26]));
                    styleAttributes.setProductWeight(checkNull(row[27]));
                    styleAttributes.setProductWeightXpath(checkNull(row[28]));
                    
               
             
                  

                } 
            }
            

        }
        catch(Exception exception)
        {
            throw  new PEPFetchException(exception);
        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return styleAttributes;
    }

   
    
    /**
     * Gets the IPH categories from adse.
     *
     * @param orinNumber the orin number
     * @return the IPH categories from adse
     * @throws PEPFetchException the PEP fetch exception
     */
    public GlobalAttributesVO getIPHCategoriesFromADSE(String orinNumber)
            throws PEPFetchException {
        
            Session session = null;
            Transaction transaction = null;
            GlobalAttributesVO  styleAttributes = null;
            List<Object[]> rows=null;
            XqueryConstants xqueryConstants = new XqueryConstants();
            try {
                session = sessionFactory.openSession();
                transaction= session.beginTransaction();
                // Hibernate provides a createSQLQuery method to let you call your
                // native SQL statement directly.
                Query query =session.createSQLQuery(xqueryConstants.getStyleAttributeDetails(orinNumber));
                if(query!=null)
                {
                     rows = query.list();
                }
                
                if(rows!=null)
                {
                    for (Object[] row : rows) {
                        styleAttributes = new GlobalAttributesVO ();
                        
                        
                        styleAttributes.setMdmid(checkNull(row[0]));
                        styleAttributes.setOmniChannelBrand(checkNull(row[1]));
                        styleAttributes.setOmniChannelBrandXpath(checkNull(row[2]));
                        styleAttributes.setProductDescription(checkNull(row[3]));
                        styleAttributes.setProductDescriptionXpath(checkNull(row[4]));
                        styleAttributes.setLaunchDate(checkNull(row[5]));
                        styleAttributes.setLaunchDateXpath(checkNull(row[6]));
                        styleAttributes.setBelkExclusive(checkNull(row[7]));
                        styleAttributes.setBelkExclusiveXpath(checkNull(row[8]));
                        styleAttributes.setChannelExclusive(checkNull(row[9]));
                        styleAttributes.setBelkExclusiveXpath(checkNull(row[10]));
                        styleAttributes.setSdf(checkNull(row[11]));
                        styleAttributes.setSdfXpath(checkNull(row[12]));
                        styleAttributes.setProductDimensionUom(checkNull(row[13]));
                        styleAttributes.setProductDimensionUomXpath(checkNull(row[14]));
                        styleAttributes.setProductLength(checkNull(row[15]));
                        styleAttributes.setProductLengthXpath(checkNull(row[16]));
                        styleAttributes.setProductHeight(checkNull(row[17]));                    
                        styleAttributes.setProductHeightXpath(checkNull(row[18]));
                        styleAttributes.setBopis(checkNull(row[19]));
                        styleAttributes.setBopisXpath(checkNull(row[20]));
                        styleAttributes.setGiftBox(checkNull(row[21]));
                        styleAttributes.setGiftBoxXpath(checkNull(row[22]));
                        styleAttributes.setImportDomestic(checkNull(row[23]));
                        styleAttributes.setImportDomesticXpath(checkNull(row[24]));
                        styleAttributes.setProductWeightUom(checkNull(row[25]));
                        styleAttributes.setProductWeightUomXpath(checkNull(row[26]));
                        styleAttributes.setProductWeight(checkNull(row[27]));
                        styleAttributes.setProductWeightXpath(checkNull(row[28]));
                        
                   
                 
                      

                    } 
                }
                

            }
            finally {
                session.flush();
                transaction.commit();
                session.close();
            }
            return styleAttributes;
        }

       
    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getContentManagmentInfoFromADSE(java.lang.String)
     */
    @Override
    public ContentManagementVO getContentManagmentInfoFromADSE(String orinNumber)
        throws PEPFetchException {
    
        Session session = null;
        Transaction transaction = null;
        ContentManagementVO  contentManagement = null;
        List<Object[]> rows=null;
      
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getPetContentManagmentDetails(orinNumber));
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null && rows.size()>0)
            {
                for (Object[] row : rows) {
                    contentManagement = new ContentManagementVO();
                    contentManagement.setOrinNumber(checkNull(row[0]));
                    contentManagement.setStyleNumber(checkNull(row[1]));
                    contentManagement.setStyleName(checkNull(row[2]));
                    contentManagement.setBrand(checkNull(row[3]));
                    contentManagement.setPriority(checkNull(row[4]));
                    contentManagement.setEntryType(checkNull(row[5]));                                    

                } 
            }
            

        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return contentManagement;
    }

    
    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getSkusFromADSE(java.lang.String)
     */
    @Override
    public List<ChildSkuVO> getSkusFromADSE(String orinNumber)
        throws PEPFetchException {
      
        Session session = null;
        Transaction transaction = null;
        ChildSkuVO  sku = null;
        List<Object[]> rows=null;
        List<ChildSkuVO> skuList=null; 
      
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getChildSKUDetails(orinNumber));
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null && rows.size()>0)
            {
                skuList= new ArrayList<ChildSkuVO>(); 
                for (Object[] row : rows)
                {
                    sku = new ChildSkuVO();
                    sku.setOrinNumber(checkNull(row[0]));
                    sku.setVendorName(checkNull(row[1]));
                    sku.setStyleName(checkNull(row[2]));
                    sku.setStyleNumber(checkNull(row[3]));
                    sku.setColorCode(checkNull(row[4]));
                    sku.setColorName(checkNull(row[5]));
                    sku.setSizeName(checkNull(row[6]));
                    sku.setEntryType(checkNull(row[7]));  
                    skuList.add(sku);

                } 
            }
            

        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return skuList;
    }
   
    
    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getContentHistoryFromADSE(java.lang.String)
     */
    @Override
    public ContentHistoryVO getContentHistoryFromADSE(String orinNumber)
        throws PEPFetchException {
     
        Session session = null;
        Transaction transaction = null;
        ContentHistoryVO  contentHistory = null;
        List<Object[]> rows=null;
      
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getContentHistory(orinNumber));
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null && rows.size()>0)
            {
                for (Object[] row : rows) {
                    contentHistory = new ContentHistoryVO();
                    contentHistory.setOrinNumber(checkNull(row[0]));
                    contentHistory.setContentCreatedDate(checkNull(row[1]));
                    contentHistory.setContentCreatedBy(checkNull(row[2]));
                    contentHistory.setContentLastUpdatedBy(checkNull(row[3]));
                    contentHistory.setContentStatus(checkNull(row[4]));
                    contentHistory.setEntryType(checkNull(row[5]));                                                       

                } 
            }
            

        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return contentHistory;
    }

    
    /**
     * Check null.
     *
     * @param objectValue the object value
     * @return String
     */
    public String checkNull(Object objectValue){
        String valueStr = "";
        
        if(objectValue == null ){
            System.out.println("row object is null, setting to default value");
            
            valueStr = "No Data";
            
        }
        else
        {
            valueStr = objectValue.toString();
        }
        
        return valueStr;
    }

    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getCopyAttributesFromADSE(java.lang.String)
     */
    @Override
    public List<CopyAttributesVO> getCopyAttributesFromADSE(String orinNumber)
        throws PEPFetchException {
       
        Session session = null;
        Transaction transaction = null;
        List<CopyAttributesVO>  copyAttributeList = null;
        List<Object[]> rows=null;
        CopyAttributesVO copyAttributes = new CopyAttributesVO();
      
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getCopyAttributeDetails(orinNumber));
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null && rows.size()>0)
            {
                copyAttributeList= new ArrayList<CopyAttributesVO>();
                for (Object[] row : rows) {
                    copyAttributes= new CopyAttributesVO();
                    copyAttributes.setOrin(checkNull(row[0]));
                    copyAttributes.setStyleId(checkNull(row[1]));
                    copyAttributes.setColor(checkNull(row[2]));
                    copyAttributes.setSize(checkNull(row[3]));
                    copyAttributes.setEntryType(checkNull(row[4]));                     
                    copyAttributeList.add(copyAttributes);

                } 
            }
            

        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return copyAttributeList;
    }

    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getIPHCategories()
     */
    @Override
    public List<ItemPrimaryHierarchyVO> getIPHCategories()
        throws PEPFetchException {
      

        Session session = null;
        Transaction transaction = null;
        List<Object[]> rows=null;
        ItemPrimaryHierarchyVO itemPrimaryHierarchy = null;
        List<ItemPrimaryHierarchyVO> iphCategoryList = null;
      
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getIphCategories());
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null && rows.size()>0)
            {
                iphCategoryList = new ArrayList<ItemPrimaryHierarchyVO>();
                String[] arr = rows.toArray(new String[] {});                
                for (String row : arr) {
                   //instantiate a new itemPrimaryHierarchy object for  storing the category from each row of the xquery result set
                    itemPrimaryHierarchy =new ItemPrimaryHierarchyVO();
                    itemPrimaryHierarchy.setCategoryName(checkNull(row));   
                   //Add each itemPrimaryHierarchy object to the list
                    iphCategoryList.add(itemPrimaryHierarchy);

                } 
            }
            

        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return iphCategoryList;
    }

    /* (non-Javadoc)
     * @see com.belk.pep.dao.ContentDAO#getStyleColorAttributesFromADSE(java.lang.String)
     */
    @Override
    public ColorAttributesVO getStyleColorAttributesFromADSE(String styleColorOrinNumber) throws PEPFetchException {
        
        Session session = null;
        Transaction transaction = null;
        ColorAttributesVO  styleColorAttributes = null;
        List<Object[]> rows=null;
        XqueryConstants xqueryConstants = new XqueryConstants();
        try {
            session = sessionFactory.openSession();
            transaction= session.beginTransaction();
            // Hibernate provides a createSQLQuery method to let you call your
            // native SQL statement directly.
            Query query =session.createSQLQuery(xqueryConstants.getStyleColorAttributeDetails(styleColorOrinNumber));
            if(query!=null)
            {
                 rows = query.list();
            }
            
            if(rows!=null)
            {
                for (Object[] row : rows) {
                    styleColorAttributes = new ColorAttributesVO ();
                    styleColorAttributes.setOrinNumber(checkNull(row[0]));
                    styleColorAttributes.setVendorColor(checkNull(row[1]));
                    styleColorAttributes.setVendorColorXpath(checkNull(row[2]));
                    styleColorAttributes.setOmnichannelColorDescription(checkNull(row[3]));
                    styleColorAttributes.setOmniChannelColorXpath(checkNull(row[4]));
                    styleColorAttributes.setColorFamily(checkNull(row[5]));
                    styleColorAttributes.setOmniChannelColorFamilyXpath(checkNull(row[6]));
                    styleColorAttributes.setSuperColorOne(checkNull(row[7]));
                    styleColorAttributes.setSecondaryColorOneXpath(checkNull(row[8]));
                    styleColorAttributes.setSuperColorTwo(checkNull(row[9]));
                    styleColorAttributes.setSecondaryColorTwoXpath(checkNull(row[10]));
                    styleColorAttributes.setSuperColorThree(checkNull(row[11]));
                    styleColorAttributes.setSecondaryColorThreeXpath(checkNull(row[12]));
                    styleColorAttributes.setSuperColorFour(checkNull(row[13]));
                    styleColorAttributes.setSecondaryColorFourXpath(checkNull(row[14]));                  

                } 
            }
            

        }
        catch(Exception exception)
        {
              throw new PEPFetchException(exception);
        }
        finally {
            session.flush();
            transaction.commit();
            session.close();
        }
        return styleColorAttributes;
    }

   

   

}
