create or replace TRIGGER "VENDORPORTAL"."T_ADSE_GRPCHLD_COMP_ABIDR" FOR INSERT OR DELETE ON VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING
    COMPOUND TRIGGER 
    /*
    This Trigger will 
    1. Update ADSE_PET_CATALOG and ADSE_GROUP_CATALOG EXIST_IN_GROUP AFTER EACH ROW
    2. SET COMPONENET_MDMID default Comp in ADSE_GROUP_CHILD_MAPPING Before each INSERT
    3. UPDATE ADSE_GROUP_CATALOG PET_DISPLAY_FLAG (P,O,C) ON AFTER EACH STATEMENT
    */
Updatesqlquery          VARCHAR2(600);
L_ID             	VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.ID%type;
L_COMPONENT_TYPE   	VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.PEP_COMPONENT_TYPE%type;
L_COMPONENT_STYLE_ID VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_STYLE_ID%type;
L_COMPONENT_STYLECOLOR_ID VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_STYLECOLOR_ID%type;
L_COMPONENT_SKU_ID VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_SKU_ID%type;
L_COMPONENT_GROUPING_ID VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_GROUPING_ID%type;
L_COMPMDMID             VARCHAR2(100);
L_sql_code              INT :=0;
L_ALREADY_EXISTS  INT :=0;
L_sql_err               VARCHAR2(2000) := NULL;
L_OLD_COMPONENT_TYPE   	VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.PEP_COMPONENT_TYPE%type;
L_OLD_COMPONENT_STYLE_ID VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_STYLE_ID%type;
L_OLD_COMPONENT_STYLECOLOR_ID VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_STYLECOLOR_ID%type;
L_OLD_COMPONENT_SKU_ID VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_SKU_ID%type;
L_OLD_COMPONENT_GROUPING_ID VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_GROUPING_ID%type;
L_COMPONENT_DEFAULT VENDORPORTAL.ADSE_GROUP_CHILD_MAPPING.COMPONENT_DEFAULT%type;
L_MDMID VENDORPORTAL.ADSE_GROUP_CATALOG.MDMID%type;
STATUS          			VARCHAR2(1) :='P';
CHILD_GROUP_OPEN          	VARCHAR2(1):='';
CHILD_EXIST          		VARCHAR2(1):='';
CHILD_STYLE_OPEN          	VARCHAR2(1):='';

TYPE GROUP_CHILD_DELETE IS RECORD (
  PEP_COMPONENT_TYPE ADSE_GROUP_CHILD_MAPPING.PEP_COMPONENT_TYPE%type,
  PEP_COMPONENT_MDMID VARCHAR2(100)
);

TYPE DELETE_TABLE IS TABLE OF GROUP_CHILD_DELETE;
DELETE_LIST DELETE_TABLE :=DELETE_TABLE();
COUNTER NUMBER:=0;

BEFORE EACH ROW
IS BEGIN
  L_ID         	     := :New.ID;
  L_MDMID :=:New.MDMID;
  L_COMPONENT_TYPE   := :New.PEP_COMPONENT_TYPE;
  L_COMPONENT_STYLE_ID :=:NEW.COMPONENT_STYLE_ID;
  L_COMPONENT_STYLECOLOR_ID:=:NEW.COMPONENT_STYLECOLOR_ID;
  L_COMPONENT_SKU_ID:=:NEW.COMPONENT_SKU_ID;
  L_COMPONENT_GROUPING_ID:=:NEW.COMPONENT_GROUPING_ID;
  L_COMPONENT_DEFAULT := :NEW.COMPONENT_DEFAULT;

IF DELETING THEN
  DELETE_LIST.EXTEND;
  DELETE_LIST(DELETE_LIST.LAST).PEP_COMPONENT_TYPE:=:OLD.PEP_COMPONENT_TYPE;
  IF (:OLD.PEP_COMPONENT_TYPE = 'Style') THEN
    DELETE_LIST(DELETE_LIST.LAST).PEP_COMPONENT_MDMID:=:OLD.COMPONENT_STYLE_ID;
  ELSIF(:OLD.PEP_COMPONENT_TYPE = 'StyleColor') THEN
    DELETE_LIST(DELETE_LIST.LAST).PEP_COMPONENT_MDMID:=:OLD.COMPONENT_STYLECOLOR_ID;
  ELSIF(:OLD.PEP_COMPONENT_TYPE = 'SKU') THEN
    DELETE_LIST(DELETE_LIST.LAST).PEP_COMPONENT_MDMID:=:OLD.COMPONENT_SKU_ID;
  ELSE
    DELETE_LIST(DELETE_LIST.LAST).PEP_COMPONENT_MDMID:=:OLD.COMPONENT_GROUPING_ID;
  END IF;
END IF;
  
IF INSERTING THEN
  IF(L_COMPONENT_TYPE ='Style') THEN
    L_COMPMDMID :=L_COMPONENT_STYLE_ID;
  ELSIF(L_COMPONENT_TYPE ='StyleColor') THEN
    L_COMPMDMID :=L_COMPONENT_STYLECOLOR_ID;
  ELSIF(L_COMPONENT_TYPE ='SKU') THEN
    L_COMPMDMID :=L_COMPONENT_SKU_ID;
  ELSE /* Group */ 
   L_COMPMDMID :=L_COMPONENT_GROUPING_ID;
  END IF;
  :NEW.COMPONENT_MDMID:=L_COMPMDMID;

END IF;
EXCEPTION
  WHEN OTHERS THEN
    L_sql_code := SQLCODE;
    L_sql_err  := SUBSTR(SQLERRM,1,200);
    DBMS_OUTPUT.PUT_LINE ('Trigger T_ADSE_GRPCHLD_COMP_AIUR BEFOREEACH ROW Error = '||L_sql_code || L_sql_err);
	raise_application_error(-20000, 'Fatal error from trigger T_ADSE_GRPCHLD_COMP_AIUR BEFOREEACH ROW '||L_sql_code || L_sql_err);
END BEFORE EACH ROW;

AFTER EACH ROW
IS
BEGIN
  L_ID         	     := :New.ID;
 IF INSERTING THEN
L_MDMID         := :New.MDMID;
ELSE
  L_MDMID         := :Old.MDMID;
  END IF;
  L_COMPONENT_TYPE   := :New.PEP_COMPONENT_TYPE;
  L_COMPONENT_STYLE_ID :=:NEW.COMPONENT_STYLE_ID;
  L_COMPONENT_STYLECOLOR_ID:=:NEW.COMPONENT_STYLECOLOR_ID;
  L_COMPONENT_SKU_ID:=:NEW.COMPONENT_SKU_ID;
  L_COMPONENT_GROUPING_ID:=:NEW.COMPONENT_GROUPING_ID;
  L_OLD_COMPONENT_TYPE   := :Old.PEP_COMPONENT_TYPE;
  L_OLD_COMPONENT_STYLE_ID :=:Old.COMPONENT_STYLE_ID;
  L_OLD_COMPONENT_STYLECOLOR_ID:=:Old.COMPONENT_STYLECOLOR_ID;
  L_OLD_COMPONENT_SKU_ID:=:Old.COMPONENT_SKU_ID;
  L_OLD_COMPONENT_GROUPING_ID:=:Old.COMPONENT_GROUPING_ID;
  L_COMPONENT_DEFAULT := :NEW.COMPONENT_DEFAULT;
 
IF INSERTING THEN
  IF(L_COMPONENT_TYPE ='Style') THEN
    L_COMPMDMID :=L_COMPONENT_STYLE_ID;
  ELSIF(L_COMPONENT_TYPE ='StyleColor') THEN
    L_COMPMDMID :=L_COMPONENT_STYLECOLOR_ID;
  ELSIF(L_COMPONENT_TYPE ='SKU') THEN
    L_COMPMDMID :=L_COMPONENT_SKU_ID;
  ELSE /* Group */ 
   L_COMPMDMID :=L_COMPONENT_GROUPING_ID;
  END IF;
  
  
   IF(L_COMPONENT_TYPE in ('Style','StyleColor', 'SKU')) THEN
   
    EXECUTE IMMEDIATE 'UPDATE VENDORPORTAL.ADSE_PET_CATALOG SET EXIST_IN_GROUP='||'''Y'''||' WHERE EXIST_IN_GROUP ='||'''N'''||' AND MDMID = '''||L_COMPMDMID||'''';
	
   ELSE 
    EXECUTE IMMEDIATE 'UPDATE VENDORPORTAL.ADSE_GROUP_CATALOG SET EXIST_IN_GROUP='||'''Y'''||' WHERE EXIST_IN_GROUP ='||'''N'''||' AND MDMID = '''||L_COMPMDMID||'''';
	
    
   END IF;
  
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    L_sql_code := SQLCODE;
    L_sql_err  := SUBSTR(SQLERRM,1,200);
    DBMS_OUTPUT.PUT_LINE ('Trigger T_ADSE_GRPCHLD_COMP_AIUR AFTEREACH ROW Error = '||L_sql_code || L_sql_err);
	raise_application_error(-20000, 'Fatal error from trigger T_ADSE_GRPCHLD_COMP_AIUR AFTEREACH ROW '||L_sql_code || L_sql_err);
END AFTER EACH ROW;

AFTER STATEMENT
IS
BEGIN
IF DELETING THEN
COUNTER :=DELETE_LIST.COUNT;
FOR i in 1..COUNTER LOOP
  L_COMPMDMID :=DELETE_LIST(i).PEP_COMPONENT_MDMID;
 IF(DELETE_LIST(i).PEP_COMPONENT_TYPE ='Style') THEN
    
    SELECT COUNT(*) INTO L_ALREADY_EXISTS FROM ADSE_GROUP_CHILD_MAPPING WHERE  COMPONENT_STYLE_ID =L_COMPMDMID AND ROWNUM=1;
    
    IF (L_ALREADY_EXISTS=0 ) THEN
    EXECUTE IMMEDIATE 'UPDATE VENDORPORTAL.ADSE_PET_CATALOG SET EXIST_IN_GROUP='||'''N'''||' WHERE EXIST_IN_GROUP ='||'''Y'''||' AND MDMID = '''||L_COMPMDMID||'''';
    END IF;
  ELSIF(DELETE_LIST(i).PEP_COMPONENT_TYPE ='StyleColor') THEN
    
    SELECT COUNT(*) INTO L_ALREADY_EXISTS FROM ADSE_GROUP_CHILD_MAPPING WHERE  COMPONENT_STYLECOLOR_ID =L_COMPMDMID AND ROWNUM=1;
   IF (L_ALREADY_EXISTS=0 ) THEN
    EXECUTE IMMEDIATE 'UPDATE VENDORPORTAL.ADSE_PET_CATALOG SET EXIST_IN_GROUP='||'''N'''||' WHERE EXIST_IN_GROUP ='||'''Y'''||' AND MDMID = '''||L_COMPMDMID||'''';
  END IF;
    
  ELSIF(DELETE_LIST(i).PEP_COMPONENT_TYPE ='SKU') THEN
     
    SELECT COUNT(*) INTO L_ALREADY_EXISTS FROM ADSE_GROUP_CHILD_MAPPING WHERE  COMPONENT_SKU_ID =L_COMPMDMID AND ROWNUM=1;
    IF L_ALREADY_EXISTS=0 THEN 
    EXECUTE IMMEDIATE 'UPDATE VENDORPORTAL.ADSE_PET_CATALOG SET EXIST_IN_GROUP='||'''N'''||' WHERE EXIST_IN_GROUP ='||'''Y'''||' AND MDMID = '''||L_COMPMDMID||'''';
    END IF;
  ELSE /* Group */ 
    
     
    SELECT COUNT(*) INTO L_ALREADY_EXISTS FROM ADSE_GROUP_CHILD_MAPPING WHERE  COMPONENT_GROUPING_ID =L_COMPMDMID AND ROWNUM=1;
    IF L_ALREADY_EXISTS=0 THEN 
   
    EXECUTE IMMEDIATE 'UPDATE VENDORPORTAL.ADSE_GROUP_CATALOG SET EXIST_IN_GROUP='||'''N'''||' WHERE EXIST_IN_GROUP ='||'''Y'''||' AND MDMID = '''||L_COMPMDMID||'''';
    END IF;
  END IF;
  END LOOP;
END IF ;

	BEGIN
		SELECT 'Y' INTO CHILD_EXIST
		FROM ADSE_GROUP_CHILD_MAPPING
		WHERE MDMID = L_MDMID AND ROWNUM=1;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
		CHILD_EXIST :='N';
	END; 
  -- INSERT INTO TEST_QUERY(TEXT) VALUES('CHILD_EXIST'||CHILD_EXIST);
    BEGIN
    SELECT 'Y' INTO CHILD_GROUP_OPEN 
	FROM ADSE_GROUP_CATALOG 
	WHERE MDMID IN ( 
		SELECT COMPONENT_GROUPING_ID
		FROM ADSE_GROUP_CHILD_MAPPING
		WHERE MDMID = L_MDMID
					) 
		AND (GROUP_OVERALL_STATUS_CODE ='01' OR PET_DISPLAY_FLAG ='O') AND ROWNUM=1; -- 'O' -Open Child exists
    EXCEPTION
		WHEN NO_DATA_FOUND THEN
		CHILD_GROUP_OPEN :='N';
	END;
	--INSERT INTO TEST_QUERY(TEXT) VALUES('CHILD_GROUP_OPEN'||CHILD_GROUP_OPEN);
	BEGIN
	SELECT 'Y' INTO CHILD_STYLE_OPEN 
	FROM ADSE_PET_CATALOG 
	WHERE MDMID IN ( 
		SELECT COMPONENT_STYLE_ID
		FROM ADSE_GROUP_CHILD_MAPPING
		WHERE MDMID = L_MDMID
					) 
		AND (PET_STATE ='01' OR PET_STYLE_STATE='Y') AND ROWNUM=1;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
		CHILD_STYLE_OPEN :='N';
	END;
  --INSERT INTO TEST_QUERY(TEXT) VALUES('CHILD_STYLE_OPEN'||CHILD_STYLE_OPEN);
	STATUS := 'P';
	IF (CHILD_EXIST='Y') THEN
		IF (CHILD_GROUP_OPEN='Y' OR CHILD_STYLE_OPEN = 'Y') THEN
			STATUS := 'O';
		ELSE
			STATUS := 'C';
		END IF;
	END IF;
 -- INSERT INTO TEST_QUERY(TEXT) VALUES('STATUS'||STATUS);
    Updatesqlquery:= 'UPDATE Adse_GROUP_Catalog  Set PET_DISPLAY_FLAG = '''|| STATUS || ''' WHERE MDMID = '''||L_MDMID||'''';
    --INSERT INTO TEST_QUERY(TEXT) VALUES('Updatesqlquery'||Updatesqlquery);
    EXECUTE Immediate Updatesqlquery;
EXCEPTION
  WHEN OTHERS THEN
    L_sql_code := SQLCODE;
    L_sql_err  := SUBSTR(SQLERRM,1,200);
    DBMS_OUTPUT.PUT_LINE ('Trigger T_ADSE_GRPCHLD_COMP_AIUR AFTER STATEMENT Error = '||L_sql_code || L_sql_err);
	raise_application_error(-20000, 'Fatal error from trigger T_ADSE_GRPCHLD_COMP_AIUR '||L_sql_code || L_sql_err);
END AFTER STATEMENT;
  
END;