import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;


public class QueryConverter {

	public static void main (String ars[]){
		
	      converQuery();
	//  getStyleColorQuery("201469930301");
	//getCarsBrandQuery("100354468", "2900127");
	// getOmniChannelBrandsQuery("456", "9999");
	//getDefectQuery("100354629");
	//getIPHQuery("100417040060");
		//getWorkListQuery("4073", "100354468");
		//getAdvSearchQuery("NULL" ,"NULL", "NULL", "NULL", "NULL", "'05'", "NULL", "NULL", "NULL", "NULL", "NULL", "NULL");
		
	 // getComplexPackProductInfo("100278117");
	//	 getComplexPackProductAttributes("4071","219486543");
//  getComplexPackPetHistory("100132090");
	//	getComplexPackInfoSection("219486543");
	 // getComplexPackGlobalAttribute("219486543");
	//  getComplexPackColorAttribute("219486543901");
	//  getComplexPackBlueMartiniAttributes("4664", "100354629");
	  // getComplexPackMappedIPHPetCatalog("201469930");
	//  getComplexPackMappedIPHMerchandiseHierarchy("100278117300");
	//  createManualQuery("217123343");
//	IPHStructureSecond("4001,4073","100354468");
//	 IPHStructureFirst("4073");
	// getCarsBrandQueryNew("2900127", "100354468");
	// getOmniBrandsQueryNew("2900127", "100354468");
	 
		// imageManagementInfo("226640756");
	 //  imageHistoryDetailsQuery("223801294");
	  // imageProductInfoQuery("223021474");
	  // imageStyleInfoQuery("252882142");
	  // imageVendorInfoQuery("226640756");
	  // imageVPIAndSampleLinkQuery("100416973041");
	   
	//	complexPackGlobalAttribute("239324672");
	     
	    // contentComplexPackQuery("232360371");
	    //  styleStyleColorSKU("100016722");
	    // getSKULevelAttributes("259038121");
	  //   getComplexPackGlobalAttributes("259029638");
	   //    getContentStatusHistory("100416882");
	     // getPepContentHistoryDetails("100016729");
	     // getLatestContentStatusHistory("100416882");
	      getIPHCategoriesFromMerch("231236029");
	      
}
	public static void getIPHCategoriesFromMerch(String orinNumber){
		String  query = " WITH Input(ORIN) AS " 
				 +"   ( SELECT "+orinNumber+" ORIN " 
				 +"   FROM dual " 
				 +"   ) , " 
				 +"   petcatalog AS " 
				 +"   (SELECT pet.mdmid ORIN, " 
				 +"     ias.CATEGORY_ID, " 
				 +"     ias.CATEGORY_DESC, " 
				 +"     ias.CATEGORY_NAME, " 
				 +"     pet.ENTRY_TYPE " 
				 +"   FROM Input inp, " 
				 +"     VENDORPORTAL.ADSE_PET_CATALOG pet, " 
				 +"     XMLTABLE( 'for $j in $XML_DATA/pim_entry/pet_entry_header/category_paths/category[last()]  let           $categoryid := $j//pk,        $categorydesc := $j//path,        $categoryname := tokenize(tokenize($j//path, \"///\")[last()],\"-\")[last()]        return         <category>      <pk>{$categoryid}</pk>      <path>{$categorydesc}</path>      <name>{$categoryname}</name>     </category>' PASSING pet.XML_DATA AS \"XML_DATA\" COLUMNS CATEGORY_ID VARCHAR(100) path '/category/pk', CATEGORY_DESC VARCHAR(100) path '/category/path', CATEGORY_NAME VARCHAR(100) path '/category/name') ias " 
				 +"   WHERE pet.mdmid = inp.ORIN " 
				 +"   ) , " 
				 +"   petitemcatalog AS " 
				 +"   (SELECT pc.ORIN, " 
				 +"     pc.CATEGORY_ID, " 
				 +"     pc.CATEGORY_NAME, " 
				 +"     ibs.ITEM_CATEGORY_ID, " 
				 +"     pc.ENTRY_TYPE " 
				 +"   FROM petcatalog pc, " 
				 +"     VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
				 +"     XMLTABLE( 'for $j in $XML_DATA/pim_entry/item_header/category_paths/category  let           $itemcategoryid := $j//pk,        $itemcategorydesc := $j//path,        $itemcategoryname := tokenize($j//path, \"///\")[1]        return         <category>        <pk>{$itemcategoryid}</pk>        <path>{$itemcategorydesc}</path>        <name>{$itemcategoryname}</name>       </category>' PASSING aic.XML_DATA AS \"XML_DATA\" COLUMNS ITEM_CATEGORY_ID VARCHAR(100) path '/category/pk', ITEM_CATEGORY_DESC VARCHAR(100) path '/category/path', ITEM_CATEGORY_NAME VARCHAR(100) path '/category/name') ibs " 
				 +"   WHERE pc.ORIN                     = aic.MDMID " 
				 +"   AND ( pc.ENTRY_TYPE              IS NULL " 
				 +"   OR pc.ENTRY_TYPE                 IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor' , '' ) ) " 
				 +"   AND ( pc.ENTRY_TYPE              IS NULL " 
				 +"   OR pc.ENTRY_TYPE                 IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '') ) " 
				 +"   AND UPPER(ibs.ITEM_CATEGORY_NAME) = UPPER('Merchandise_Hierarchy') " 
				 +"   ) , " 
				 +"   petitemmerch AS " 
				 +"   (SELECT pic.ORIN, " 
				 +"     pic.CATEGORY_ID, " 
				 +"     pic.CATEGORY_NAME, " 
				 +"     pic.ITEM_CATEGORY_ID, " 
				 +"     ics.SUB_CLASS, " 
				 +"     pic.ENTRY_TYPE " 
				 +"   FROM petitemcatalog pic, " 
				 +"     VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY amh, " 
				 +"     XMLTABLE( 'for $j in $XML_DATA/pim_category/merchandise_category_header      let           $subclass := tokenize($j//full_path, \"///\")[last()]              return           <merchandise_category_header>          <full_path>{$subclass}</full_path>         </merchandise_category_header>' PASSING amh.XML_DATA AS \"XML_DATA\" COLUMNS SUB_CLASS VARCHAR(100) path '/merchandise_category_header/full_path') ics " 
				 +"   WHERE pic.ITEM_CATEGORY_ID = amh.MDMID " 
				 +"   AND ( pic.ENTRY_TYPE      IS NULL " 
				 +"   OR pic.ENTRY_TYPE         IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor' , '' ) ) " 
				 +"   AND ( pic.ENTRY_TYPE      IS NULL " 
				 +"   OR pic.ENTRY_TYPE         IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '') ) " 
				 +"   ) " 
				 +" SELECT pim.ORIN ORIN, " 
				 +"   pim.CATEGORY_ID PET_CATEGORY_ID, " 
				 +"   pim.CATEGORY_NAME PET_CATEGORY_NAME, " 
				 +"   pim.SUB_CLASS SUB_CLASS, " 
				 +"   ids.MERCH_CATEGORY_ID MERCH_CATEGORY_ID, " 
				 +"   ids.MERCH_CATEGORY_NAME MERCH_CATEGORY_NAME " 
				 +" FROM petitemmerch pim, " 
				 +"   VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY amh1, " 
				 +"   XMLTABLE( 'for $j in $XML_DATA/pim_category/entry/Merchandise_Hier_Spec/IPH_Category_Mappings  let         $leafnode7 := $j//Level_7,        $leafnode6 := if(string-length($leafnode7) = 0) then $j//Level_6 else $leafnode7,        $leafnode5 := if(string-length($leafnode6) = 0) then $j//Level_5 else $leafnode6,        $leafnode4 := if(string-length($leafnode5) = 0) then $j//Level_4 else $leafnode5,        $leafnode3 := if(string-length($leafnode4) = 0) then $j//Level_3 else $leafnode4,        $leafnode2 := if(string-length($leafnode3) = 0) then $j//Level_2 else $leafnode3,        $leafnode1 := if(string-length($leafnode2) = 0) then $j//Level_1 else $leafnode2,        $merchcategoryid := tokenize($leafnode1,\"-\")[1],        $merchcategoryname := tokenize($leafnode1,\"-\")[last()]        return         <IPH_Category_Mappings>      <category_id>{$merchcategoryid}</category_id>      <category_name>{$merchcategoryname}</category_name>     </IPH_Category_Mappings>' PASSING amh1.XML_DATA AS " 
				 +"   \"XML_DATA\" COLUMNS MERCH_CATEGORY_ID VARCHAR(100) path '/IPH_Category_Mappings/category_id', MERCH_CATEGORY_NAME VARCHAR(100) path '/IPH_Category_Mappings/category_name') ids " 
				 +" WHERE pim.ITEM_CATEGORY_ID = amh1.MDMID " 
				 +" AND ( pim.ENTRY_TYPE      IS NULL " 
				 +" OR pim.ENTRY_TYPE         IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '' ) ) " 
				 +" AND ( pim.ENTRY_TYPE      IS NULL " 
				 +" OR pim.ENTRY_TYPE         IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '') )   " ;
System.out.println(query);
	}
	public static void getLatestContentStatusHistory(String orin){
		
		String query = " WITH Input(ORIN) AS " 
				 +"   (SELECT '100016729' FROM dual " 
				 +"   ) " 
				 +" SELECT pet.mdmid, " 
				 +"   CASE " 
				 +"     WHEN i.createdOn IS NOT NULL " 
				 +"     THEN TO_CHAR(TO_DATE(i.createdOn, 'YYYY-MM-DD'),'MM/DD/YYYY') " 
				 +"     ELSE NULL " 
				 +"   END AS createdOn, " 
				 +"   i.createdBy, " 
				 +"   i.lastUpdateBy, " 
				 +"   CASE " 
				 +"     WHEN i.lastUpdateOn IS NOT NULL " 
				 +"     THEN TO_CHAR(TO_DATE(i.lastUpdateOn, 'YYYY-MM-DD'),'MM/DD/YYYY') " 
				 +"     ELSE NULL " 
				 +"   END AS lastUpdateOn, " 
				 +"    " 
				 +"   ( " 
				 +"   SELECT thevalue " 
				 +"   FROM VENDORPORTAL.ADSE_REFERENCE_DATA " 
				 +"   WHERE mdmid   =i.container " 
				 +"   AND Container = 'ContentState_Lookup' " 
				 +"   ) Content_Status, " 
				 +"   pet.entry_type " 
				 +" FROM VENDORPORTAL.ADSE_PET_CATALOG pet, " 
				 +"   XMLTable( 'for $i in $pet/pim_entry/entry/Pet_Ctg_Spec/Audit/Pet_Status            " 
				 +" let     $lastState := $i//Last_State,    $lastUpdate := $i//Last_State_On,      " 
				 +" $lastUpdateBy := $i//Last_State_By,      $createdBy := $i//..//Created_By,                                 " 
				 +" $createdOn := $i//..//Created_On,       $currentState := $i//..//..//State,         " 
				 +" $container := $pet/pim_entry/entry/Pet_Ctg_Spec/ContentState      return             " 
				 +" <petStatus>                                               <lastState>{$lastState}</lastState>            " 
				 +" <lastUpdate>{$lastUpdate}</lastUpdate>                  <lastUpdateBy>{$lastUpdateBy}</lastUpdateBy>          " 
				 +" <createdBy>{$createdBy}</createdBy>                          <createdOn>{$createdOn}</createdOn>               " 
				 +" <currentState>{$currentState}</currentState>        <container>{$container}</container>      " 
				 +" </petStatus>' passing pet.XML_DATA AS \"pet\" columns lastState VARCHAR2(40) path '/petStatus/lastState' , lastUpdateOn VARCHAR2(10) path " 
				 +"   '/petStatus/lastUpdate' , lastUpdateBypath '/petStatus/lastUpdateBy', createdBy VARCHAR2(40) path " 
				 +"   '/petStatus/createdBy', createdOn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       VARCHAR2(10) path '/petStatus/createdOn', currentState VARCHAR2(40) path " 
				 +"   '/petStatus/currentState', containerpath '/petStatus/container' ) i , " 
				 +"   Input inp " 
				 +" WHERE pet.mdmid LIKE concat(inp.ORIN,'%')  " ;
				 System.out.println(query);
	}
	
	
		public static void getContentStatusHistory(String orin){
			String query = " WITH Input(ORIN) AS " 
					 +"   (SELECT '100416882' FROM dual " 
					 +"   ) " 
					 +" SELECT pet.mdmid, " 
					 +"   i.createdBy, " 
					 +"   i.createdOn, " 
					 +"   i.lastState, " 
					 +"   i.lastUpdateOn, " 
					 +"   i.lastUpdateBy, " 
					 +"   i.currentState, " 
					 +"   i.container, " 
					 +"   (select thevalue from VENDORPORTAL.ADSE_REFERENCE_DATA where mdmid=i.container and Container = 'ContentState_Lookup') Content_Status " 
					 +" FROM VENDORPORTAL.ADSE_PET_CATALOG pet, " 
					 +"   XMLTable( " 
					 +"   'for $i in $pet/pim_entry/entry/Pet_Ctg_Spec/Audit/Pet_Status       " 
					 +"   let     $lastState := $i//Last_State,    $lastUpdate := $i//Last_State_On,    $lastUpdateBy := $i//Last_State_By,   " 
					 +"   $createdBy := $i//..//Created_By,                                    " 
					 +"   $createdOn := $i//..//Created_On,    " 
					 +"   $currentState := $i//..//..//State,     " 
					 +"   $container := $pet/pim_entry/entry/Pet_Ctg_Spec/ContentState   " 
					 +"   return                                                   " 
					 +"   <petStatus>                                            " 
					 +"   <lastState>{$lastState}</lastState>            " 
					 +"   <lastUpdate>{$lastUpdate}</lastUpdate>               " 
					 +"   <lastUpdateBy>{$lastUpdateBy}</lastUpdateBy>            " 
					 +"   <createdBy>{$createdBy}</createdBy>                       " 
					 +"   <createdOn>{$createdOn}</createdOn>                    " 
					 +"   <currentState>{$currentState}</currentState>     " 
					 +"   <container>{$container}</container> " 
					 +"   </petStatus>' " 
					 +"   passing pet.XML_DATA AS \"pet\" " 
					 +"    " 
					 +"   columns lastState VARCHAR2(40) path '/petStatus/lastState' , " 
					 +"   lastUpdateOn VARCHAR2(40) path '/petStatus/lastUpdate' ,  " 
					 +"   lastUpdateBy VARCHAR2(40) path '/petStatus/lastUpdateBy',  " 
					 +"   createdBy VARCHAR2(40) path '/petStatus/createdBy',  " 
					 +"   createdOn VARCHAR2(40) path '/petStatus/createdOn',  " 
					 +"   currentState VARCHAR2(40) path '/petStatus/currentState', " 
					 +"   container VARCHAR2(40) path '/petStatus/container' " 
					 +"   ) i , " 
					 +"   Input inp " 
					 +" WHERE pet.mdmid LIKE concat(inp.ORIN,'%')  " ;
		System.out.println(query);
	}
		
		public static void getPepContentHistoryDetails(String orinNo) {
			 String query = " WITH Input(ORIN) AS " 
					 +"   (SELECT '"+orinNo+"' FROM dual " 
					 +"   ) " 
					 +" SELECT pet.mdmid, " 
					 +"   i.createdOn, " 
					 +"   i.createdBy, " 
					 +"   i.lastUpdateBy, " 
					 +"   i.lastUpdateOn, " 
					 +"   (SELECT thevalue " 
					 +"   FROM VENDORPORTAL.ADSE_REFERENCE_DATA " 
					 +"   WHERE mdmid   =i.container " 
					 +"   AND Container = 'ContentState_Lookup' " 
					 +"   ) Content_Status, " 
					 +"   pet.entry_type " 
					 +" FROM VENDORPORTAL.ADSE_PET_CATALOG pet, " 
					 +"   XMLTable( 'for $i in $pet/pim_entry/entry/Pet_Ctg_Spec/Audit/Pet_Status          let     $lastState := $i//Last_State,    $lastUpdate := $i//Last_State_On,    $lastUpdateBy := $i//Last_State_By,      $createdBy := $i//..//Created_By,                                       $createdOn := $i//..//Created_On,       $currentState := $i//..//..//State,        $container := $pet/pim_entry/entry/Pet_Ctg_Spec/ContentState      return                                                      <petStatus>                                               <lastState>{$lastState}</lastState>               <lastUpdate>{$lastUpdate}</lastUpdate>                  <lastUpdateBy>{$lastUpdateBy}</lastUpdateBy>               <createdBy>{$createdBy}</createdBy>                          <createdOn>{$createdOn}</createdOn>                       <currentState>{$currentState}</currentState>        <container>{$container}</container>    </petStatus>' passing pet.XML_DATA AS \"pet\" columns lastState VARCHAR2(40) path " 
					 +"   '/petStatus/lastState' , lastUpdateOnpath " 
					 +"   '/petStatus/lastUpdate' , lastUpdateBypath " 
					 +"   '/petStatus/lastUpdateBy', createdBypath " 
					 +"   '/petStatus/createdBy', createdOnpath " 
					 +"   '/petStatus/createdOn', currentStatepath " 
					 +"   '/petStatus/currentState', containerpath " 
					 +"   '/petStatus/container' ) i , " 
					 +"   Input inp " 
					 +" WHERE pet.mdmid LIKE concat(inp.ORIN,'%')  " ;
	          System.out.println(query);
	  }

		
	public static void getComplexPackGlobalAttributes(String orin){
		String query =" WITH Input(ORIN) AS " 
				 +"   ( SELECT '259029638' ORIN FROM dual " 
				 +"   ) " 
				 +" SELECT p.OmniChannelBrand OmniChannelBrand, " 
				 +"   p.GXS_Long_Description Long_Description, " 
				 +"   p.Belk_Exclusive Belk_Exclusive, " 
				 +"   p.Channel_Exclusive Channel_Exclusive, " 
				 +"   p.SDF SDF, " 
				 +"   p.BOPIS BOPIS, " 
				 +"   p.ImportedOrDomestic ImportedOrDomestic, " 
				 +"   pet.entry_type " 
				 +" FROM vendorportal.ADSE_PET_CATALOG pet, " 
				 +"   XMLTable( 'for $i in $item/pim_entry/entry/*       let $item_type := $i/../../pet_entry_header/category_paths/category[pk = (\"Style\", \"ComplexPack\")]     where name($i) eq concat(\"Ecomm_\",$item_type//pk,\"_Spec\")     return $i' passing pet.XML_DATA AS \"item\" columns OmniChannelBrand VARCHAR2(50) path 'OmniChannelBrand', Product_Description VARCHAR2(60) path 'Product_Description', Launch_Date VARCHAR2(50) path 'Launch_Date', Belk_Exclusive VARCHAR2(10) path 'Belk_Exclusive', Channel_Exclusive VARCHAR2(10) path 'Channel_Exclusive', SDF VARCHAR2(50) path 'Supplier_Direct_Fulfillment', Product_Dimensions_UOM VARCHAR2(50) path 'Product_Dimensions/Product_Dimensions_UOM', Product_Length VARCHAR2(50) path 'Product_Dimensions/Length', Product_Height VARCHAR2(50) path 'Product_Dimensions/Height', Product_Width VARCHAR2(50) path 'Product_Dimensions/Width', Product_Weight VARCHAR2(40) path 'Product_Weight/Weight', Product_Weight_UOM VARCHAR2(40) path 'Product_Weight/UOM', BOPIS VARCHAR2(60) " 
				 +"   path 'BOPIS', Gift_Box                                                                                                                                                                                                                                                                     VARCHAR2(10) path 'Gift_Box', ImportedOrDomestic VARCHAR2(10) path 'if(SourcedDomestically eq \"false\") then \"Imported\" else \"Domestic\"' , GXS_Long_Description VARCHAR2(40) path 'GXS_Long_Description', Product_Name VARCHAR2(40) path 'Product_Name', PO_Box_Shippable VARCHAR2(40) path 'PO_Box_Shippable', cOPY_BULLET VARCHAR2(40) path 'cOPY_BULLET', Fraud_Quantity VARCHAR2(40) path 'Fraud_Quantity' ) p, " 
				 +"   Input inp " 
				 +" WHERE inp.ORIN = pet.mdmid  " ;
System.out.println(query);
	}
	
	
	public static void getSKULevelAttributes(String orin){
		 String query = " WITH " 
				 +"   INPUT( ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       '"+orin+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" SELECT " 
				 +"   item.mdmid ORIN, " 
				 +"   i.BELK_UPC, " 
				 +"   '/pim_entry/entry/Item_Ctg_Spec/Supplier/UPCs[starts-with(UPC, \"04\")]/UPC' " 
				 +"   BELK_UPC_XPath, " 
				 +"   i.VENDOR_UPC, " 
				 +"   '/pim_entry/entry/Item_Ctg_Spec/Supplier/UPCs[not(starts-with(UPC, \"04\"))]/UPC' " 
				 +"   VENDOR_UPC_XPath, " 
				 +"   i.vendor_size, " 
				 +"   '/pim_entry/entry/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description' " 
				 +"   vendor_size_XPath, " 
				 +"   o.OMNI_SIZE_DESC, " 
				 +"   '/pim_entry/entry/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code' " 
				 +"   OMNI_SIZE_DESC_Code_XPath, " 
				 +"   i.Source_Domestic, " 
				 +"   omni.nrf_size_code, " 
				 +"   i.launchDate, " 
				 +"   i.giftBox, " 
				 +"   i.gwp, " 
				 +"   i.pwp, " 
				 +"   i.pyg, " 
				 +"   i.productDimesionUom, " 
				 +"   i.productLength, " 
				 +"   i.productHeight, " 
				 +"   i.productWidth, " 
				 +"   i.productWeightUom, " 
				 +"   i.productWeight " 
				 +"  " 
				 +" FROM " 
				 +"   VENDORPORTAL.ADSE_ITEM_CATALOG item, " 
				 +"   xmltable( " 
				 +"   'for $i in $pet/pim_entry/entry           " 
				 +"   let $belk_upc := (for $upc in $i/Item_Ctg_Spec/Supplier/UPCs/UPC where starts-with($upc, \"04\") return $upc)[1],         " 
				 +"   $vendor_upc := (for $upc in $i/Item_Ctg_Spec/Supplier/UPCs/UPC where not(starts-with($upc, \"04\")) return $upc)[1],        " 
				 +"   $vendor_size_code := $i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code,         " 
				 +"   $vendor_size := $i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description,         " 
				 +"   $SourcedDomestic :=$i/Ecomm_SKU_Spec/SourcedDomestically, " 
				 +"    " 
				 +"   $launchDate :=$i/Ecomm_SKU_Spec/Launch_Date, " 
				 +"   $giftBox :=$i/Ecomm_SKU_Spec/Gift_Box, " 
				 +"   $gwp :=$i/Ecomm_SKU_Spec/is_GWP, " 
				 +"   $pwp :=$i/Ecomm_SKU_Spec/is_PWP, " 
				 +"   $pyg :=$i/Ecomm_SKU_Spec/Is_PYG, " 
				 +"   $productDimesionUom :=$i/Ecomm_SKU_Spec/Product_Dimensions/Product_Dimensions_UOM, " 
				 +"   $productLength :=$i/Ecomm_SKU_Spec/Product_Dimensions/Length, " 
				 +"   $productHeight :=$i/Ecomm_SKU_Spec/Product_Dimensions/Height, " 
				 +"   $productWidth :=$i/Ecomm_SKU_Spec/Product_Dimensions/Width, " 
				 +"   $productWeigthUom :=$i/Ecomm_SKU_Spec/Product_Weight/UOM, " 
				 +"   $productWeigth :=$i/Ecomm_SKU_Spec/Product_Weight/Weight " 
				 +"    " 
				 +"    " 
				 +"   return  " 
				 +"   <out>           " 
				 +"   <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>   " 
				 +"   <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>  " 
				 +"   <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>           " 
				 +"   <belk_upc>{$belk_upc}</belk_upc>           " 
				 +"   <vendor_upc>{$vendor_upc}</vendor_upc>        " 
				 +"   <vendor_size_code>{$vendor_size_code}</vendor_size_code>        " 
				 +"   <vendor_size>{$vendor_size}</vendor_size>        " 
				 +"   <SourcedDomestic>{$SourcedDomestic}</SourcedDomestic>    " 
				 +"    " 
				 +"   <launchDate>{$launchDate}</launchDate> " 
				 +"   <giftBox>{$giftBox}</giftBox> " 
				 +"   <gwp>{$gwp}</gwp> " 
				 +"   <pwp>{$pwp}</pwp> " 
				 +"   <pyg>{$pyg}</pyg> " 
				 +"   <productDimesionUom>{$productDimesionUom}</productDimesionUom> " 
				 +"   <productLength>{$productLength}</productLength> " 
				 +"   <productHeight>{$productHeight}</productHeight> " 
				 +"   <productWidth>{$productWidth}</productWidth> " 
				 +"   <productWeigthUom>{$productWeigthUom}</productWeigthUom> " 
				 +"   <productWeigth>{$productWeigth}</productWeigth> " 
				 +"    " 
				 +"   </out>' " 
				 +"   passing item.XML_DATA AS \"pet\"  " 
				 +"   columns  " 
				 +"   supplier_id VARCHAR2(20) path  '/out/supplier_id',  " 
				 +"   deptid VARCHAR2(20) path  '/out/dept_id',  " 
				 +"   classid VARCHAR2(20) path  '/out/class_id',  " 
				 +"   VENDOR_UPC VARCHAR2(40) path  '/out/vendor_upc',  " 
				 +"   BELK_UPC VARCHAR2(40) path  '/out/belk_upc',  " 
				 +"   vendor_size_code VARCHAR2(6) path  '/out/vendor_size_code',  " 
				 +"   vendor_size VARCHAR2(40) path  '/out/vendor_size',  " 
				 +"   Source_Domestic VARCHAR2(40) path  '/out/SourcedDomestic', " 
				 +"      " 
				 +"   launchDate VARCHAR2(40) path  '/out/launchDate',  " 
				 +"   giftBox VARCHAR2(40) path  '/out/giftBox',  " 
				 +"   gwp VARCHAR2(40) path  '/out/gwp',  " 
				 +"   pwp VARCHAR2(40) path  '/out/pwp',  " 
				 +"   pyg VARCHAR2(40) path  '/out/pyg',  " 
				 +"   productDimesionUom VARCHAR2(40) path  '/out/productDimesionUom',  " 
				 +"   productLength VARCHAR2(40) path  '/out/productLength',  " 
				 +"   productHeight VARCHAR2(40) path  '/out/productHeight',  " 
				 +"   productWidth VARCHAR2(40) path  '/out/productWidth',  " 
				 +"   productWeightUom VARCHAR2(40) path  '/out/productWeigthUom',  " 
				 +"   productWeight VARCHAR2(40) path  '/out/productWeigth') i, " 
				 +"   VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup, " 
				 +"   XMLTABLE('for $i in $XML_DATA/pim_entry/entry      return $i' passing " 
				 +"   sup.xml_data AS \"XML_DATA\" COLUMNS Id VARCHAR2(20) path " 
				 +"   'Supplier_Ctg_Spec/Id', VenId         VARCHAR2(20) path " 
				 +"   'Supplier_Ctg_Spec/VEN_Id' ) s, " 
				 +"   VENDORPORTAL.ADSE_VENDOR_OMNISIZE_DESC omni, " 
				 +"   xmltable('for $i in $XML//omni_size_desc return $i' passing omni.XML_DATA AS " 
				 +"   \"XML\" columns OMNI_SIZE_DESC VARCHAR(40) path '.' ) o, " 
				 +"   Input inp " 
				 +" WHERE " 
				 +"   item.Entry_Type      = 'SKU' " 
				 +" AND item.mdmid         =inp.ORIN " 
				 +" AND i.SUPPLIER_ID      = sup.MDMID " 
				 +" AND i.VENDOR_SIZE_CODE =omni.NRF_SIZE_CODE " 
				 +" AND i.deptid           =omni.DEPT_ID " 
				 +" AND i.ClassId          =omni.CLASS_ID " 
				 +" AND s.VenId            =omni.VENDOR_ID " 
				 +" AND item.MOD_DTM       = '01-JAN-00 12.00.00.000000000 PM' " 
				 +" AND sup.MOD_DTM        = '01-JAN-00 12.00.00.000000000 PM' " ;
System.out.println(query);
	}
	
	public static void styleStyleColorSKU(String orin){
		
		 String query = " WITH INPUT( ORIN) AS " 
				 +"   (SELECT '"+orin+"' ORIN " 
				 +"   FROM dual " 
				 +"   ) , " 
				 +"   TypeIndex(indx, typ) AS ( " 
				 +"   ( SELECT 1 indx, 'Style' typ FROM dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( SELECT 2 indx, 'StyleColor' typ FROM dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( SELECT 3 indx, 'SKU' typ FROM dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( SELECT 4 indx, 'Complex Pack' typ FROM dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( SELECT 5 indx, 'PackColor' typ FROM dual " 
				 +"   ) ), Items AS " 
				 +"   (SELECT NVL(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID, " 
				 +"     aic.MDMID, " 
				 +"     aic.ENTRY_TYPE, " 
				 +"     i.supplier_id PRIMARY_SUPPLIER_ID, " 
				 +"     deptid dept_id, " 
				 +"     classid Class_id, " 
				 +"     VENDOR_COLOR_CODE, " 
				 +"     VENDOR_COLOR_DESC, " 
				 +"     VENDOR_SIZE_CODE, " 
				 +"     VENDOR_SIZE_DESC, " 
				 +"     P.CONTENTSTATE, " 
				 +"     p.contentcontainer, " 
				 +"     P.PETSTATE, " 
				 +"     p.petcontainer, " 
				 +"     p.completion_date " 
				 +"   FROM VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
				 +"     XMLTABLE( " 
				 +"     'for $i in $XML_DATA/pim_entry/entry    let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),    $non_sellable := (fn:count($i/Item_Simple_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Simple_Pack_Spec/Sellable_Flag eq \"false\")), $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),      $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"    return  <out>   <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>   <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>    <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>     <flag>{$uda80 and $non_sellable_pack and $removal}</flag>   <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode>    <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc>   <sizeCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code}</sizeCode>   <sizeDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description}</sizeDesc>    </out>' " 
				 +"     passing aic.XML_DATA AS \"XML_DATA\" columns flag VARCHAR(10) path '/out/flag', supplier_id VARCHAR2(20) path '/out/supplier_id', deptid VARCHAR2(20) path '/out/dept_id', classid VARCHAR2(20) path '/out/class_id', descr VARCHAR2(64) path '/out/desc', VENDOR_COLOR_CODE VARCHAR2(10) path '/out/colorCode', VENDOR_COLOR_DESC VARCHAR2(40) path '/out/colorDesc', VENDOR_SIZE_CODE VARCHAR2(10) path '/out/sizeCode', VENDOR_SIZE_DESC VARCHAR2(10) path '/out/sizeDesc') i, " 
				 +"     VENDORPORTAL.ADSE_PET_CATALOG pet, " 
				 +"     XMLTABLE( 'for $pet in $pets/pim_entry/entry    let $completionDate := $pet//Completion_Date,   $contentState := $pet//ContentState ,$petState := $pet//State   return <out>    <id>{$pet/Pet_Ctg_Spec/Id}</id>    <completion_date>{$completionDate}</completion_date>   <contentState>{$contentState}</contentState>    <contentContainer>{fn:data($contentState/@container)}</contentContainer>  <petState>{$petState}</petState><petContainer>{fn:data($petState/@container)}</petContainer>   </out>' passing pet.XML_DATA AS \"pets\" columns completion_date VARCHAR2(10) path '/out/completion_date', contentState VARCHAR2(20) path '/out/contentState', CONTENTCONTAINER VARCHAR2(40) PATH '/out/contentContainer',petState VARCHAR2(20) path '/out/petState',petContainer VARCHAR2(40) PATH '/out/petContainer') p, " 
				 +"     INPUT INP " 
				 +"   WHERE flag          = 'false' " 
				 +"   AND AIC.MDMID       =PET.MDMID " 
				 +"   AND pet.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"   AND aic.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"   AND ( aic.MDMID     =inp.ORIN " 
				 +"   OR aic.parent_mdmid =inp.ORIN ) " 
				 +"   AND aic.Entry_type IN ('SKU', 'Style', 'StyleColor', 'Complex Pack', 'PackColor') " 
				 +"   ) , " 
				 +"   ItemSupplier AS " 
				 +"   (SELECT i.PARENT_MDMID, " 
				 +"     i.MDMID, " 
				 +"     i.PRIMARY_SUPPLIER_ID, " 
				 +"     i.dept_id, " 
				 +"     i.Class_Id, " 
				 +"     i.VENDOR_COLOR_CODE, " 
				 +"     i.VENDOR_COLOR_DESC, " 
				 +"     i.VENDOR_SIZE_CODE, " 
				 +"     i.VENDOR_SIZE_DESC, " 
				 +"     i.ENTRY_TYPE, " 
				 +"     s.VenId, " 
				 +"     I.CONTENTSTATE, " 
				 +"     i.contentcontainer, " 
				 +"     I.PETSTATE, " 
				 +"     i.petcontainer, " 
				 +"     i.completion_date " 
				 +"   FROM Items i, " 
				 +"     VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup, " 
				 +"     XMLTABLE('for $i in $XML_DATA/pim_entry/entry    return $i' passing sup.xml_data AS \"XML_DATA\" COLUMNS Id VARCHAR2(20) path 'Supplier_Ctg_Spec/Id', VenId VARCHAR2(20) path 'Supplier_Ctg_Spec/VEN_Id' ) s " 
				 +"   WHERE sup.MOD_DTM         = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"   AND i.PRIMARY_SUPPLIER_ID = sup.MDMID " 
				 +"   ) , " 
				 +"   Final AS " 
				 +"   (SELECT PARENT_MDMID Style_ID, " 
				 +"     MDMID ORIN, " 
				 +"     VENDOR_COLOR_CODE COLOR_CODE, " 
				 +"     VENDOR_COLOR_CODE " 
				 +"     || ' ' " 
				 +"     || VENDOR_COLOR_DESC COLOR, " 
				 +"     VENDOR_SIZE_CODE " 
				 +"     || ' ' " 
				 +"     || VENDOR_SIZE_DESC Vendor_Size, " 
				 +"     OMNI_SIZE_DESC, " 
				 +"     CONTENTSTATE, " 
				 +"     contentcontainer, " 
				 +"     PETSTATE, " 
				 +"     petcontainer, " 
				 +"     completion_date, " 
				 +"     ENTRY_TYPE " 
				 +"   FROM " 
				 +"     (SELECT PARENT_MDMID , " 
				 +"       MDMID , " 
				 +"       PRIMARY_SUPPLIER_ID, " 
				 +"       dept_id, " 
				 +"       VENDOR_COLOR_CODE, " 
				 +"       VENDOR_COLOR_DESC , " 
				 +"       VENDOR_SIZE_CODE, " 
				 +"       VENDOR_SIZE_DESC , " 
				 +"       OMNI_SIZE_DESC, " 
				 +"       CONTENTSTATE, " 
				 +"       CONTENTCONTAINER, " 
				 +"       PETSTATE, " 
				 +"       petcontainer, " 
				 +"       completion_date, " 
				 +"       ENTRY_TYPE " 
				 +"     FROM " 
				 +"       (SELECT i.PARENT_MDMID, " 
				 +"         i.MDMID, " 
				 +"         i.PRIMARY_SUPPLIER_ID, " 
				 +"         i.dept_id, " 
				 +"         i.VENDOR_COLOR_CODE, " 
				 +"         i.VENDOR_COLOR_DESC, " 
				 +"         i.VENDOR_SIZE_CODE, " 
				 +"         i.VENDOR_SIZE_DESC, " 
				 +"         o.OMNI_SIZE_DESC, " 
				 +"         I.CONTENTSTATE, " 
				 +"         i.contentcontainer, " 
				 +"         I.PETSTATE, " 
				 +"         i.petcontainer, " 
				 +"         i.completion_date, " 
				 +"         i.ENTRY_TYPE " 
				 +"       FROM ItemSupplier i, " 
				 +"         VENDORPORTAL.ADSE_VENDOR_OMNISIZE_DESC omni, " 
				 +"         xmltable('for $i in $XML//omni_size_desc return $i' passing omni.XML_DATA AS \"XML\" columns OMNI_SIZE_DESC VARCHAR(40) path '.' ) o " 
				 +"       WHERE i.Entry_Type     = 'SKU' " 
				 +"       AND i.VENDOR_SIZE_CODE =omni.NRF_SIZE_CODE " 
				 +"       AND i.dept_id          =omni.DEPT_ID " 
				 +"       AND i.Class_Id         =omni.CLASS_ID " 
				 +"       AND i.VenId            =omni.VENDOR_ID " 
				 +"       ) " 
				 +"     UNION " 
				 +"       (SELECT i.PARENT_MDMID, " 
				 +"         i.MDMID, " 
				 +"         i.PRIMARY_SUPPLIER_ID, " 
				 +"         i.dept_id, " 
				 +"         i.VENDOR_COLOR_CODE, " 
				 +"         i.VENDOR_COLOR_DESC, " 
				 +"         i.VENDOR_SIZE_CODE, " 
				 +"         i.VENDOR_SIZE_DESC, " 
				 +"         NULL OMNI_SIZE_DESC, " 
				 +"         I.CONTENTSTATE, " 
				 +"         i.contentcontainer, " 
				 +"         I.PETSTATE, " 
				 +"         i.petcontainer, " 
				 +"         i.completion_date, " 
				 +"         i.ENTRY_TYPE " 
				 +"       FROM ItemSupplier i " 
				 +"       WHERE i.Entry_Type IN ('Style', 'StyleColor', 'Complex Pack', 'PackColor', 'SKU') " 
				 +"       ) " 
				 +"     ) , " 
				 +"     TypeIndex typInd " 
				 +"   WHERE ENTRY_TYPE = typInd.typ " 
				 +"   ORDER BY NVL(PARENT_MDMID, MDMID), " 
				 +"     INDX " 
				 +"   ) , " 
				 +"   finaltable AS " 
				 +"   (SELECT F.STYLE_ID, " 
				 +"     f.ORIN, " 
				 +"     f.COLOR_CODE, " 
				 +"     f.COLOR, " 
				 +"     F.VENDOR_SIZE, " 
				 +"     F.OMNI_SIZE_DESC, " 
				 +"     CONT.THEVALUE CONTENTSTATUS, " 
				 +"     PET.THEVALUE PETSTATUS, " 
				 +"     F.COMPLETION_DATE, " 
				 +"     F.ENTRY_TYPE " 
				 +"   FROM FINAL F " 
				 +"   LEFT OUTER JOIN VENDORPORTAL.adse_reference_data cont " 
				 +"   ON CONT.MDMID       =F.CONTENTSTATE " 
				 +"   AND cont.entry_type =f.contentContainer " 
				 +"   LEFT OUTER JOIN VENDORPORTAL.ADSE_REFERENCE_DATA PET " 
				 +"   ON PET.MDMID        =F.PETSTATE " 
				 +"   AND PET.ENTRY_TYPE  =F.PETCONTAINER " 
				 +"   AND f.petstate NOT IN(05) " 
				 +"   ) " 
				 +" SELECT * " 
				 +" FROM finaltable " 
				 +" WHERE CONTENTSTATUS IN ('Initiated','Completed','Ready_For_Review') " 
				 +" OR (entry_type       = 'SKU' " 
				 +" AND CONTENTSTATUS   IN ('Initiated','Completed','Ready_For_Review', 'Closed')) " ;

System.out.println(query);
	}
	public static void contentComplexPackQuery(String input){
		 String query = " WITH " 
				 +"   INPUT( ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       '"+input+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   , " 
				 +"   TypeIndex(indx, typ) AS ( " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       1 indx, " 
				 +"       'Style' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       2 indx, " 
				 +"       'StyleColor' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       3 indx, " 
				 +"       'SKU' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   UNION( " 
				 +"     SELECT " 
				 +"       4 indx, " 
				 +"       'Complex Pack' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       5 indx, " 
				 +"       'PackColor' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   ), " 
				 +"   Items AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       NVL(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID, " 
				 +"       aic.MDMID, " 
				 +"       aic.ENTRY_TYPE, " 
				 +"       i.supplier_id PRIMARY_SUPPLIER_ID, " 
				 +"       deptid dept_id, " 
				 +"       classid Class_id, " 
				 +"       VENDOR_COLOR_CODE, " 
				 +"       VENDOR_COLOR_DESC, " 
				 +"       VENDOR_SIZE_CODE, " 
				 +"       VENDOR_SIZE_DESC, " 
				 +"       P.CONTENTSTATE, " 
				 +"       p.contentcontainer, " 
				 +"       P.PETSTATE, " 
				 +"       p.petcontainer, " 
				 +"       p.completion_date " 
				 +"     FROM " 
				 +"       VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
				 +"       XMLTABLE( " 
				 +"       'for $i in $XML_DATA/pim_entry/entry    let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),    $non_sellable := (fn:count($i/Item_Simple_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Simple_Pack_Spec/Sellable_Flag eq \"false\")), $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),      $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"    return  <out>   <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>   <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>    <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>     <flag>{$uda80 and $non_sellable_pack and $removal}</flag>   <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode>    <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc>   <sizeCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code}</sizeCode>   <sizeDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Vendor_Description}</sizeDesc>    </out>' " 
				 +"       passing aic.XML_DATA AS \"XML_DATA\" columns flag VARCHAR(10) path " 
				 +"       '/out/flag', supplier_id                        VARCHAR2(20) path " 
				 +"       '/out/supplier_id', deptid                      VARCHAR2(20) path " 
				 +"       '/out/dept_id', classid                         VARCHAR2(20) path " 
				 +"       '/out/class_id', descr                          VARCHAR2(64) path " 
				 +"       '/out/desc', VENDOR_COLOR_CODE                  VARCHAR2(10) path " 
				 +"       '/out/colorCode', VENDOR_COLOR_DESC             VARCHAR2(40) path " 
				 +"       '/out/colorDesc', VENDOR_SIZE_CODE              VARCHAR2(10) path " 
				 +"       '/out/sizeCode', VENDOR_SIZE_DESC               VARCHAR2(10) path " 
				 +"       '/out/sizeDesc') i, " 
				 +"       VENDORPORTAL.ADSE_PET_CATALOG pet, " 
				 +"       XMLTABLE( " 
				 +"       'for $pet in $pets/pim_entry/entry    let $completionDate := $pet//Completion_Date,   $contentState := $pet//ContentState ,$petState := $pet//State   return <out>    <id>{$pet/Pet_Ctg_Spec/Id}</id>    <completion_date>{$completionDate}</completion_date>   <contentState>{$contentState}</contentState>    <contentContainer>{fn:data($contentState/@container)}</contentContainer>  <petState>{$petState}</petState><petContainer>{fn:data($petState/@container)}</petContainer>   </out>' " 
				 +"       passing pet.XML_DATA AS \"pets\" columns completion_date VARCHAR2(10) path " 
				 +"       '/out/completion_date', contentState                   VARCHAR2(20) path " 
				 +"       '/out/contentState', CONTENTCONTAINER                  VARCHAR2(40) PATH " 
				 +"       '/out/contentContainer',petState                       VARCHAR2(20) path " 
				 +"       '/out/petState',petContainer                           VARCHAR2(40) PATH " 
				 +"       '/out/petContainer') p, " 
				 +"       INPUT INP " 
				 +"     WHERE " 
				 +"       flag          = 'false' " 
				 +"     AND AIC.MDMID   =PET.MDMID " 
				 +"     AND pet.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"     AND aic.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"     AND " 
				 +"       ( " 
				 +"         aic.MDMID        =inp.ORIN " 
				 +"       OR aic.parent_mdmid=inp.ORIN " 
				 +"       ) " 
				 +"     AND aic.Entry_type IN ('SKU', 'Style', 'StyleColor', 'Complex Pack', 'PackColor') " 
				 +"   ) " 
				 +"   , " 
				 +"   ItemSupplier AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       i.PARENT_MDMID, " 
				 +"       i.MDMID, " 
				 +"       i.PRIMARY_SUPPLIER_ID, " 
				 +"       i.dept_id, " 
				 +"       i.Class_Id, " 
				 +"       i.VENDOR_COLOR_CODE, " 
				 +"       i.VENDOR_COLOR_DESC, " 
				 +"       i.VENDOR_SIZE_CODE, " 
				 +"       i.VENDOR_SIZE_DESC, " 
				 +"       i.ENTRY_TYPE, " 
				 +"       s.VenId, " 
				 +"       I.CONTENTSTATE, " 
				 +"       i.contentcontainer, " 
				 +"       I.PETSTATE, " 
				 +"       i.petcontainer, " 
				 +"       i.completion_date " 
				 +"     FROM " 
				 +"       Items i, " 
				 +"       VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup, " 
				 +"       XMLTABLE('for $i in $XML_DATA/pim_entry/entry    return $i' passing " 
				 +"       sup.xml_data AS \"XML_DATA\" COLUMNS Id VARCHAR2(20) path " 
				 +"       'Supplier_Ctg_Spec/Id', VenId         VARCHAR2(20) path " 
				 +"       'Supplier_Ctg_Spec/VEN_Id' ) s " 
				 +"     WHERE " 
				 +"       sup.MOD_DTM             = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"     AND i.PRIMARY_SUPPLIER_ID = sup.MDMID " 
				 +"   ) " 
				 +"   , " 
				 +"   Final AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       PARENT_MDMID Style_ID, " 
				 +"       MDMID ORIN, " 
				 +"       VENDOR_COLOR_CODE COLOR_CODE, " 
				 +"       VENDOR_COLOR_CODE " 
				 +"       || ' ' " 
				 +"       || VENDOR_COLOR_DESC COLOR, " 
				 +"       VENDOR_SIZE_CODE " 
				 +"       || ' ' " 
				 +"       || VENDOR_SIZE_DESC Vendor_Size, " 
				 +"       OMNI_SIZE_DESC, " 
				 +"       CONTENTSTATE, " 
				 +"       contentcontainer, " 
				 +"       PETSTATE, " 
				 +"       petcontainer, " 
				 +"       completion_date, " 
				 +"       ENTRY_TYPE " 
				 +"     FROM " 
				 +"       ( " 
				 +"         SELECT " 
				 +"           PARENT_MDMID , " 
				 +"           MDMID , " 
				 +"           PRIMARY_SUPPLIER_ID, " 
				 +"           dept_id, " 
				 +"           VENDOR_COLOR_CODE, " 
				 +"           VENDOR_COLOR_DESC , " 
				 +"           VENDOR_SIZE_CODE, " 
				 +"           VENDOR_SIZE_DESC , " 
				 +"           OMNI_SIZE_DESC, " 
				 +"           CONTENTSTATE, " 
				 +"           CONTENTCONTAINER, " 
				 +"           PETSTATE, " 
				 +"           petcontainer, " 
				 +"           completion_date, " 
				 +"           ENTRY_TYPE " 
				 +"         FROM " 
				 +"           ( " 
				 +"             SELECT " 
				 +"               i.PARENT_MDMID, " 
				 +"               i.MDMID, " 
				 +"               i.PRIMARY_SUPPLIER_ID, " 
				 +"               i.dept_id, " 
				 +"               i.VENDOR_COLOR_CODE, " 
				 +"               i.VENDOR_COLOR_DESC, " 
				 +"               i.VENDOR_SIZE_CODE, " 
				 +"               i.VENDOR_SIZE_DESC, " 
				 +"               o.OMNI_SIZE_DESC, " 
				 +"               I.CONTENTSTATE, " 
				 +"               i.contentcontainer, " 
				 +"               I.PETSTATE, " 
				 +"               i.petcontainer, " 
				 +"               i.completion_date, " 
				 +"               i.ENTRY_TYPE " 
				 +"             FROM " 
				 +"               ItemSupplier i, " 
				 +"               VENDORPORTAL.ADSE_VENDOR_OMNISIZE_DESC omni, " 
				 +"               xmltable('for $i in $XML//omni_size_desc return $i' passing " 
				 +"               omni.XML_DATA AS \"XML\" columns OMNI_SIZE_DESC VARCHAR(40) path " 
				 +"               '.' ) o " 
				 +"             WHERE " 
				 +"               i.Entry_Type         = 'SKU' " 
				 +"             AND i.VENDOR_SIZE_CODE =omni.NRF_SIZE_CODE " 
				 +"             AND i.dept_id          =omni.DEPT_ID " 
				 +"             AND i.Class_Id         =omni.CLASS_ID " 
				 +"             AND i.VenId            =omni.VENDOR_ID " 
				 +"           ) " 
				 +"         UNION " 
				 +"           ( " 
				 +"             SELECT " 
				 +"               i.PARENT_MDMID, " 
				 +"               i.MDMID, " 
				 +"               i.PRIMARY_SUPPLIER_ID, " 
				 +"               i.dept_id, " 
				 +"               i.VENDOR_COLOR_CODE, " 
				 +"               i.VENDOR_COLOR_DESC, " 
				 +"               i.VENDOR_SIZE_CODE, " 
				 +"               i.VENDOR_SIZE_DESC, " 
				 +"               NULL OMNI_SIZE_DESC, " 
				 +"               I.CONTENTSTATE, " 
				 +"               i.contentcontainer, " 
				 +"               I.PETSTATE, " 
				 +"               i.petcontainer, " 
				 +"               i.completion_date, " 
				 +"               i.ENTRY_TYPE " 
				 +"             FROM " 
				 +"               ItemSupplier i " 
				 +"             WHERE " 
				 +"               i.Entry_Type IN ('Style', 'StyleColor', 'Complex Pack', 'PackColor') " 
				 +"           ) " 
				 +"       ) " 
				 +"       , " 
				 +"       TypeIndex typInd " 
				 +"     WHERE " 
				 +"       ENTRY_TYPE = typInd.typ " 
				 +"     ORDER BY " 
				 +"       NVL(PARENT_MDMID, MDMID), " 
				 +"       INDX " 
				 +"   ) " 
				 +"   , " 
				 +"   finaltable AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       F.STYLE_ID, " 
				 +"       f.ORIN, " 
				 +"       f.COLOR_CODE, " 
				 +"       f.COLOR, " 
				 +"       F.VENDOR_SIZE, " 
				 +"       F.OMNI_SIZE_DESC, " 
				 +"       CONT.THEVALUE CONTENTSTATUS, " 
				 +"       PET.THEVALUE PETSTATUS, " 
				 +"       F.COMPLETION_DATE, " 
				 +"       F.ENTRY_TYPE " 
				 +"     FROM " 
				 +"       FINAL F " 
				 +"     LEFT OUTER JOIN VENDORPORTAL.adse_reference_data cont " 
				 +"     ON " 
				 +"       CONT.MDMID        =F.CONTENTSTATE " 
				 +"     AND cont.entry_type =f.contentContainer " 
				 +"     LEFT OUTER JOIN VENDORPORTAL.ADSE_REFERENCE_DATA PET " 
				 +"     ON " 
				 +"       PET.MDMID         =F.PETSTATE " 
				 +"     AND PET.ENTRY_TYPE  =F.PETCONTAINER " 
				 +"     AND f.petstate NOT IN(05) " 
				 +"   ) " 
				 +" SELECT " 
				 +"   * " 
				 +" FROM " 
				 +"   finaltable " 
				 +" WHERE " 
				 +"   CONTENTSTATUS IN ('Initiated','Completed','Ready_For_Review') " 
				 +"   OR (entry_type = 'SKU' AND CONTENTSTATUS IN ('Initiated','Completed','Ready_For_Review', 'Closed')) " ;
System.out.println(query);
	}
	
	
	
	public static void complexPackGlobalAttribute(String input){
		
		 String query = " WITH   " 
				 +"   Input(ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       '"+input+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"     SELECT " 
				 +"       p.OmniChannelBrand OmniChannelBrand, " 
				 +"       p.Product_Description Product_Description, " 
				 +"       p.Launch_Date Launch_Date, " 
				 +"       p.Belk_Exclusive Belk_Exclusive, " 
				 +"       p.Channel_Exclusive Channel_Exclusive, " 
				 +"       p.SDF SDF, " 
				 +"       p.Product_Dimensions_UOM Product_Dimensions_UOM, " 
				 +"       p.Product_Length Product_Length, " 
				 +"       p.Product_Height Product_Height, " 
				 +"       p.Product_Width Product_Width, " 
				 +"       p.BOPIS BOPIS, " 
				 +"       p.Gift_Box Gift_Box, " 
				 +"       p.ImportedOrDomestic ImportedOrDomestic, " 
				 +"       p.Product_Weight_UOM Product_Weight_UOM, " 
				 +"       p.Product_Weight Product_Weight, " 
				 +"       p.GXS_Long_Description Long_Description, " 
				 +"       p.Product_Name Product_Name, " 
				 +"       p.PO_Box_Shippable, " 
				 +"       p.COPY_BULLET, " 
				 +"       P.Fraud_Quantity, " 
				 +"       inp.ORIN inpOrin, " 
				 +"       pet.XML_DATA, " 
				 +"       pet.entry_type " 
				 +"     FROM " 
				 +"       vendorportal.ADSE_PET_CATALOG pet, " 
				 +"       XMLTable( " 
				 +"       'for $i in $item/pim_entry/entry/*       let $item_type := $i/../../pet_entry_header/category_paths/category[pk = (\"Style\", \"ComplexPack\")]     where name($i) eq concat(\"Ecomm_\",$item_type//pk,\"_Spec\")     return $i' " 
				 +"       passing pet.XML_DATA AS \"item\" columns OmniChannelBrand     VARCHAR2(50) path " 
				 +"       'OmniChannelBrand', Product_Description                     VARCHAR2(60) path " 
				 +"       'Product_Description', Launch_Date                          VARCHAR2(50) path " 
				 +"       'Launch_Date', Belk_Exclusive                               VARCHAR2(10) path " 
				 +"       'Belk_Exclusive', Channel_Exclusive                         VARCHAR2(10) path " 
				 +"       'Channel_Exclusive', SDF                                    VARCHAR2(50) path " 
				 +"       'Supplier_Direct_Fulfillment', Product_Dimensions_UOM       VARCHAR2(50) path " 
				 +"       'Product_Dimensions/Product_Dimensions_UOM', Product_Length VARCHAR2(50) " 
				 +"       path 'Product_Dimensions/Length', Product_Height            VARCHAR2(50) " 
				 +"       path 'Product_Dimensions/Height', Product_Width             VARCHAR2(50) " 
				 +"       path 'Product_Dimensions/Width', Product_Weight             VARCHAR2(40) " 
				 +"       path 'Product_Weight/Weight', Product_Weight_UOM            VARCHAR2(40) " 
				 +"       path 'Product_Weight/UOM', BOPIS                            VARCHAR2(60) " 
				 +"       path 'BOPIS', Gift_Box                                      VARCHAR2(10) " 
				 +"       path 'Gift_Box', ImportedOrDomestic                         VARCHAR2(10) " 
				 +"       path 'if(SourcedDomestically eq \"false\") then \"Imported\" else \"Domestic\"' " 
				 +"       , GXS_Long_Description VARCHAR2(40) path 'GXS_Long_Description', " 
				 +"       Product_Name           VARCHAR2(40) path 'Product_Name', PO_Box_Shippable " 
				 +"                              VARCHAR2(40) path 'PO_Box_Shippable', cOPY_BULLET " 
				 +"                              VARCHAR2(40) path 'cOPY_BULLET', Fraud_Quantity " 
				 +"                              VARCHAR2(40) path 'Fraud_Quantity' ) p, " 
				 +"       Input inp " 
				 +"     WHERE " 
				 +"       inp.ORIN = pet.mdmid " ;

		 System.out.println(query);
	}
	
	public static void imageVPIAndSampleLinkQuery(String input){
		String query = " with    " 
				 +" Input(ORIN) as    " 
				 +" (Select  '"+input+"' from dual)    " 
				 +" select  " 
				 +" pet.mdmid ORIN_NUM,  " 
				 +" Image_ID,  " 
				 +" Image_Name,  " 
				 +" nvl(Image_Location, Image_URL) Image_Location,    " 
				 +" Image_Shot_Type,  " 
				 +" Link_Status,  " 
				 +" p.Image_Status,  " 
				 +" Sample_Id,  " 
				 +" Sample_Recieved,  " 
				 +" Silhouette,    " 
				 +" Turn_In_Date,  " 
				 +" Sample_Coordinator_Note,  " 
				 +" pet.entry_type  " 
				 +" from VENDORPORTAL.ADSE_PET_CATALOG pet,   " 
				 +" XMLTABLE('for $i in $pet/pim_entry/entry/Image_Sec_Spec/Images  return  $i'  " 
				 +" passing pet.xml_data as \"pet\"   " 
				 +" columns   " 
				 +" Image_ID varchar2(10) path 'Id',   " 
				 +" Image_Name varchar2(50) path 'FileName',    " 
				 +" Image_URL varchar2(256) path 'Image_URL',   " 
				 +" Image_Location varchar2(50) path 'Image_Location',   " 
				 +" Image_Shot_Type varchar2(10) path 'Shot_Type',   " 
				 +" Link_Status varchar2(10) path 'status_cd',   " 
				 +" Image_Status varchar2(16) path 'Status',   " 
				 +" Sample_Id varchar2(20) path './../Sample/Id',   " 
				 +" Sample_Recieved varchar2(20) path 'if(./../Sample/SampleReceived eq \"true\") then \"Y\" else \"N\"',   " 
				 +" Silhouette varchar2(30) path 'if (Silhouette eq \"true\") then \"Y\" else \"N\"',   " 
				 +" Turn_In_Date varchar2(80) path './../Sample/TurnInDate',   " 
				 +" Sample_Coordinator_Note varchar2(200) path './../Sample/SampleSwatchNotes') p,  " 
				 +" Input i   " 
				 +" where mdmid=i.ORIN    " 
				 +" and (Image_URL is not null or Image_Location is not null)  " 
				 +" and Image_Name is not null  " 
				 +" and image_id is not null  " ;
System.out.println(query);
	}
	public static void imageVendorInfoQuery(String input){
		 String query = " with    " 
				 +" Input(ORIN) as  " 
				 +" (Select '"+input+"' from dual)   " 
				 +" select  " 
				 +" pet.mdmid ORIN_NUM,  " 
				 +" p.*,  " 
				 +" pet.entry_type  " 
				 +" from VENDORPORTAL.ADSE_PET_CATALOG pet,   " 
				 +" XMLTABLE('for $i in $pet/pim_entry/entry return  $i'  " 
				 +" passing pet.xml_data as \"pet\"   " 
				 +" columns   " 
				 +" Return_Sample_Indicator varchar(10) path  'if(Image_Sec_Spec/Sample/Is_Returnable eq \"true\") then \"Y\" else \"N\"' ,  " 
				 +" Carrier_Acct varchar2(10) path 'Image_Sec_Spec/Sample/Ship_Account_Number'  ,  " 
				 +" Return_Sample_Addr varchar2(60) path 'Image_Sec_Spec/Sample/ReturnSample' ) p,  " 
				 +" Input i   " 
				 +" where mdmid=i.ORIN  " 
				 +" and pet.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM'  " ;
System.out.println(query);
	}
	
	public static void imageStyleInfoQuery(String input){
		 String query = "  with    " 
				 +"  INPUT( ORIN) as  " 
				 +"  (Select '"+input+"' FROM dual),   " 
				 +"  TypeIndex(indx, typ) as  " 
				 +"  ((Select 1 indx, 'Style' typ  from  dual)  " 
				 +"  union (select 2 indx, 'StyleColor' typ from dual)  " 
				 +"  union (select 3 indx, 'SKU' typ from dual) " 
				 +"  union (select 4 indx, 'Complex Pack' typ from dual) " 
				 +"  union (select 5 indx, 'PackColor' typ from dual) " 
				 +"  ),   " 
				 +"  Items as  " 
				 +"  ( " 
				 +"  select  " 
				 +"  x.vendor_st VEN_STYLE,   " 
				 +"  aic.MDMID,  " 
				 +"  aic.XML_DATA,  " 
				 +"  aic.ENTRY_TYPE,  " 
				 +"  descr DESCRIPTION,   " 
				 +"  i.supplier_id PRIMARY_SUPPLIER_ID,  " 
				 +"  deptid dept_id,  " 
				 +"  classid Class_Id,   " 
				 +"  Vendor_Image,  " 
				 +"  Vendor_Sample   " 
				 +"  from VENDORPORTAL.ADSE_ITEM_CATALOG aic,   " 
				 +"  XMLTABLE ('$h/pim_entry' PASSING aic.xml_data as \"h\" COLUMNS vendor_st VARCHAR2(30) PATH '//entry/Item_UDA_Spec/Vendor_Style/text()')x,   " 
				 +"  XMLTABLE('for $i in $XML_DATA/pim_entry/entry  let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),  $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),  $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"  return  <out>  <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>  <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path,  \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>  <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>  <desc>{$i/Item_Ctg_Spec/Description/Long}</desc>  <flag>{$uda80 and $non_sellable_pack and $removal}</flag>  </out>'   " 
				 +"  passing aic.XML_DATA as \"XML_DATA\"   " 
				 +"  columns   " 
				 +"  flag varchar(10) path '/out/flag',   " 
				 +"  supplier_id VARCHAR2(20) path '/out/supplier_id',   " 
				 +"  deptid VARCHAR2(20) path '/out/dept_id',   " 
				 +"  classid varchar2(20) path '/out/class_id',   " 
				 +"  descr VARCHAR2(64) path '/out/desc') i,  " 
				 +"  Input inp,  " 
				 +"  VENDORPORTAL.ADSE_PET_CATALOG pet,   " 
				 +"  XMLTABLE('for $i in $pet/pim_entry/entry  return  <out>  <img>{if(count($i/Image_Sec_Spec/Images//*) gt 0) then \"Y\" else \"N\"}</img>  <sample>{if(count($i/Image_Sec_Spec/Sample//*) gt 0) then \"Y\" else \"N\"}</sample>  </out>'  " 
				 +"  passing pet.xml_data as \"pet\"   " 
				 +"  columns   " 
				 +"  Vendor_Image varchar2(1) path '/out/img',   " 
				 +"  Vendor_Sample varchar2(1) path '/out/sample') s   " 
				 +"  where flag = 'false'  " 
				 +"  and pet.mdmid = aic.mdmid  " 
				 +"  and  aic.MDMID=inp.ORIN  " 
				 +"  and  aic.Entry_type in ('SKU', 'Style', 'StyleColor', 'Complex Pack', 'PackColor') " 
				 +"  ),   " 
				 +"  ItemSupplier as  " 
				 +"  (select  " 
				 +"  i.VEN_STYLE,   " 
				 +"  i.MDMID,  " 
				 +"  i.DESCRIPTION,   " 
				 +"  i.PRIMARY_SUPPLIER_ID,  " 
				 +"  i.dept_id,   " 
				 +"  i.ENTRY_TYPE,  " 
				 +"  s.VenId, " 
				 +"  s.VPN,  " 
				 +"  i.Class_Id,  " 
				 +"  s.OmnichannelIndicator,   " 
				 +"  s.VenName,  " 
				 +"  sup.XML_DATA,  " 
				 +"  Vendor_Image,  " 
				 +"  Vendor_Sample   " 
				 +"  from Items i, VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup,   " 
				 +"  XMLTABLE('for $i in $XML_DATA/pim_entry/entry  return $i'   " 
				 +"  passing sup.xml_data as \"XML_DATA\"   " 
				 +"  COLUMNS   " 
				 +"  Id  varchar2(20) path 'Supplier_Ctg_Spec/Id',   " 
				 +"  VenName varchar2(20) path 'Supplier_Ctg_Spec/Name',   " 
				 +"  VenId varchar2(20) path 'Supplier_Ctg_Spec/VEN_Id',    " 
				 +"  VPN varchar2(50) path 'Supplier_Ctg_Spec/VPN',  " 
				 +"  OmnichannelIndicator varchar(2) path 'if (Supplier_Site_Spec/Omni_Channel/Omni_Channel_Indicator eq \"true\") then \"Y\" else \"N\"'  ) s   " 
				 +"  where   i.PRIMARY_SUPPLIER_ID = sup.MDMID  )   " 
				 +"  select  " 
				 +"  i.MDMID ORIN,  " 
				 +"  i.dept_id,  " 
				 +"  VenName Vendor_Name,  " 
				 +"  nvl(i.Ven_Style,i.VPN) as Style_Id,       " 
				 +"  i.Class_Id,  " 
				 +"  i.VenId Vendor_Id,   " 
				 +"  i.DESCRIPTION,  " 
				 +"  i.OmnichannelIndicator OMNIChennel_Vendor,   " 
				 +"  Vendor_Image,  " 
				 +"  Vendor_Sample,   " 
				 +"  i.ENTRY_TYPE   " 
				 +"  from ItemSupplier i,   " 
				 +"  TypeIndex t   " 
				 +"  where i.ENTRY_TYPE = t.typ   " 
				 +"  order by i.VEN_STYLE, t.indx  " ;
System.out.println(query);
		
	}
	public static void imageProductInfoQuery(String input){
		 String query = " with    " 
				 +" Input(ORIN) as (Select '"+input+"' from dual),   " 
				 +" TypeIndex(indx, typ) as  " 
				 +" ((Select 1 indx, 'Style' typ  from  dual)  " 
				 +" union (select 2 indx, 'StyleColor' typ from dual)  " 
				 +" union (select 3 indx, 'SKU' typ from dual) " 
				 +" union (select 4 indx, 'Complex Pack' typ from dual) " 
				 +" union (select 5 indx, 'PackColor' typ from dual) " 
				 +" )   " 
				 +" select nvl(aic.PARENT_MDMID, aic.MDMID) Style_Id,   " 
				 +" aic.MDMID ORIN_NUM,  " 
				 +" i2.ProductName Product_Name,  " 
				 +" i.descr DESCRIPTION,  " 
				 +" aic.Entry_Type   " 
				 +" from VENDORPORTAL.ADSE_ITEM_CATALOG aic,  " 
				 +" XMLTABLE('for $i in $XML_DATA/pim_entry/entry  let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),  $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),  $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"  return  <out>  <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>  <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>  <desc>{$i/Item_Ctg_Spec/Description/Long}</desc>  <flag>{$uda80 and $non_sellable_pack and $removal}</flag>  </out>'   " 
				 +" passing aic.XML_DATA as \"XML_DATA\"   " 
				 +" columns   " 
				 +" flag varchar(10) path '/out/flag',   " 
				 +" supplier_id VARCHAR2(20) path '/out/supplier_id',   " 
				 +" deptid VARCHAR2(20) path '/out/dept_id',   " 
				 +" descr VARCHAR2(64) path '/out/desc') i,  " 
				 +" Input inp,  " 
				 +" VENDORPORTAL.ADSE_ITEM_CATALOG aic2,   " 
				 +" XMLTABLE('for $i in $XML_DATA/pim_entry/entry  return  <out>  <prod_name>{$i//Product_Name}</prod_name>  </out>'  " 
				 +" passing aic2.XML_DATA as \"XML_DATA\"   " 
				 +" columns   " 
				 +" ProductName varchar2(40) path '/out/prod_name') i2   " 
				 +" where flag = 'false'    " 
				 +" and aic.MDMID=inp.ORIN   " 
				 +" and  aic.Entry_type in ('SKU', 'StyleColor', 'Style', 'Complex Pack', 'PackColor')  " 
				 +" and  aic2.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM'  " 
				 +" and  aic2.Entry_type IN ('Style', 'Complex Pack')  " 
				 +" and nvl(aic.PARENT_MDMID, aic.MDMID)=aic2.mdmid   " ;
System.out.println(query);
	}
	
	
	
	public static void imageHistoryDetailsQuery(String input){
		 String query =" with    " 
				 +" Input(ORIN) as  " 
				 +" (Select '"+input+"' from dual)   " 
				 +" select pet.mdmid,  " 
				 +" i.State,  " 
				 +" i.lastUpdate  " 
				 +" from VENDORPORTAL.ADSE_PET_CATALOG pet,   " 
				 +" XMLTable('for $img in  (for $i in $pet/pim_entry/pet_entry_header/change_details/changedAttributes  let $index := xs:int(tokenize(tokenize($i, \"/\")[3], \"#\")[2]),  $image := $pet/pim_entry/entry/Image_Sec_Spec/Images[$index]  where contains($i/text(), \"/Image_Sec_Spec/Images#\")  return $image)[last()]  return $img'   " 
				 +" passing pet.XML_DATA as \"pet\"   " 
				 +" columns  state varchar2(10) path 'Status',   " 
				 +" lastUpdate varchar2(40) path 'Audit[last()]/Last_Modified_On'  ) i ,  " 
				 +" Input inp   " 
				 +" where pet.mdmid = inp.ORIN   " ;
System.out.println(query);
	}
	
	
	public static void imageManagementInfo(String input){
		 String query = " with    " 
				 +" Input(ORIN) as (Select    '"+input+"'  from dual),     " 
				 +" TypeIndex(indx, typ) as  " 
				 +" ((Select 1 indx, 'Style' typ  from  dual)  " 
				 +" union (Select 2 indx, 'StyleColor' typ  from  dual) " 
				 +" union (Select 3 indx, 'Complex Pack' typ  from  dual) " 
				 +" union (Select 4 indx, 'PackColor' typ  from  dual)),      " 
				 +" Items as  " 
				 +" (select nvl(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID,     " 
				 +" aic.MDMID, aic.ENTRY_TYPE,  " 
				 +" x.vendor_st Style_ID,     " 
				 +" case  " 
				 +" when aic.Entry_Type IN ('StyleColor','PackColor')  " 
				 +" then substr(aic.MDMID,10)  " 
				 +" else VENDOR_COLOR_CODE  " 
				 +" end VENDOR_COLOR_CODE,      " 
				 +" case  " 
				 +" when aic.Entry_Type IN ('StyleColor','PackColor')   " 
				 +" then   " 
				 +" (select si.color  " 
				 +" from VENDORPORTAL.ADSE_ITEM_CATALOG styleItem,  " 
				 +" xmltable('/pim_entry/entry/Item_Style_Spec/Differentiators[Type eq \"COLOR\"]/Codes'  " 
				 +" passing styleItem.XML_DATA     " 
				 +" columns  " 
				 +" code varchar2(10) path 'Code',  " 
				 +" color varchar2(60) path 'Vendor_Description') si     " 
				 +" where si.code = substr(aic.MDMID,10)  " 
				 +" and styleItem.Entry_Type='Style'      " 
				 +" and styleItem.MDMID = aic.Parent_MDMID)      " 
				 +" else VENDOR_COLOR_DESC     " 
				 +" end VENDOR_COLOR_DESC,       " 
				 +" (select thevalue  " 
				 +" from VENDORPORTAL.ADSE_REFERENCE_DATA  " 
				 +" where mdmid=p.imagestate  " 
				 +" and container=p.imagestate_container  " 
				 +" and rownum=1)      " 
				 +" ImageStatus, p.CompletionDate, y.supp_code Supp_ID     " 
				 +" from VENDORPORTAL.ADSE_ITEM_CATALOG aic,      " 
				 +" XMLTABLE ('/pim_entry' PASSING aic.xml_data COLUMNS vendor_st VARCHAR2(30) PATH '//entry/Item_UDA_Spec/Vendor_Style/text()')x,      " 
				 +" XMLTABLE ('/pim_entry' PASSING aic.xml_data COLUMNS supp_code VARCHAR2(30) PATH '//entry/Item_Ctg_Spec/Supplier/Id')y,       " 
				 +" XMLTABLE('for $i in $XML_DATA/pim_entry/entry     let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),     $non_sellable := (fn:count($i/Item_Simple_Pack_Spec/Sellable_Flag/text()) gt 0 and     ($i/Item_Simple_Pack_Spec/Sellable_Flag eq \"false\")),     $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and     ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),     $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"    return  <out>    <flag>{$uda80 and $non_sellable_pack and $removal}</flag>      <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode>     <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc>    </out>'     " 
				 +" passing aic.XML_DATA as \"XML_DATA\"     " 
				 +" columns     " 
				 +" flag varchar(10) path '/out/flag',     " 
				 +" VENDOR_COLOR_CODE   varchar2(10) path '/out/colorCode',      " 
				 +" VENDOR_COLOR_DESC   varchar2(40) path '/out/colorDesc') i,     " 
				 +" VENDORPORTAL.ADSE_PET_CATALOG pet,  " 
				 +" XMLTABLE('for $i in $XML_DATA/pim_entry/entry/Pet_Ctg_Spec return $i'     " 
				 +" passing pet.XML_DATA as \"XML_DATA\"  " 
				 +" columns     " 
				 +" ImageState varchar(50) path 'ImageState',     " 
				 +" ImageState_Container varchar(50) path 'ImageState/@container',      " 
				 +" completionDate varchar2(10) path 'Completion_Date') p,     " 
				 +" Input inp      " 
				 +" where flag = 'false'  " 
				 +" and pet.mdmid = aic.mdmid     " 
				 +" and (aic.MDMID=inp.ORIN or aic.parent_mdmid=ORIN)  " 
				 +" and aic.Entry_type in ('Style', 'StyleColor', 'Complex Pack', 'PackColor'))      " 
				 +" select * from Items " ;

		System.out.println(query);
	}
	
	public static void imageCnotentInfo(String input){
		String query = " with    " 
				 +" Input(ORIN) as (Select '"+input+"' from dual),   " 
				 +" TypeIndex(indx, typ) as  " 
				 +" ((Select 1 indx, 'Style' typ  from  dual)  " 
				 +" union  " 
				 +" (Select 2 indx, 'StyleColor' typ  from  dual)  " 
				 +" union  " 
				 +" (select 3 indx, 'SKU' typ from dual) " 
				 +" union  " 
				 +" (select 4 indx, 'Complex Pack' typ from dual) " 
				 +" union  " 
				 +" (select 5 indx, 'PackColor' typ from dual) " 
				 +" ),   " 
				 +" Items as  " 
				 +" (select nvl(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID,  aic.MDMID, aic.ENTRY_TYPE, i.supplier_id PRIMARY_SUPPLIER_ID   " 
				 +" from VENDORPORTAL.ADSE_ITEM_CATALOG aic,  " 
				 +" XMLTABLE('for $i in $XML_DATA/pim_entry/entry  let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"), $non_sellable := (fn:count($i/Item_Simple_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Simple_Pack_Spec/Sellable_Flag eq \"false\")),  $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),  $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"  return  <out>  <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>  <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path,  \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>  <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>  <flag>{$uda80 and $non_sellable_pack and $removal}</flag>  <colorCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Code}</colorCode>  <colorDesc>{$i/Item_SKU_Spec/Differentiators[Type eq \"COLOR\"]/Vendor_Description}</colorDesc>  <sizeCode>{$i/Item_SKU_Spec/Differentiators[Type eq \"SIZE\"]/Code}</sizeCode>  </out>'   " 
				 +" passing aic.XML_DATA as \"XML_DATA\"   " 
				 +" columns   " 
				 +" flag varchar(10) path '/out/flag',   " 
				 +" supplier_id VARCHAR2(20) path '/out/supplier_id') i,   " 
				 +" Input inp  where flag = 'false'    " 
				 +" and aic.MDMID=inp.ORIN  " 
				 +" and  aic.Entry_type in ('SKU', 'Style', 'StyleColor','Complex Pack','PackColor') " 
				 +" ),  " 
				 +" ItemSupplier as  " 
				 +" (select i.PARENT_MDMID, i.MDMID,  Contact_Name, Phone, Fax, Email1, Email2, Email3   " 
				 +" from Items i, VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup,   " 
				 +" XMLTABLE('for $i in $XML_DATA/pim_entry/entry/Supplier_Ctg_Spec/Address/Contact  return $i'  " 
				 +" passing sup.xml_data as \"XML_DATA\"   " 
				 +" COLUMNS  Contact_Name  varchar2(20) path 'Name',   " 
				 +" Phone varchar2(20) path 'Phone',   " 
				 +" Fax varchar2(20) path 'Fax',   " 
				 +" Email1 varchar2(50) path 'Email1',   " 
				 +" Email2 varchar2(50) path 'Email2',   " 
				 +" Email3 varchar2(50) path 'Email3'  ) s    " 
				 +" where   i.PRIMARY_SUPPLIER_ID = sup.MDMID  )   " 
				 +" select 'Contact ' || rownum Title, i.*  " 
				 +" from ItemSupplier i  " ;
System.out.println(query);
	}
	
	
	public static void getCarsBrandQueryNew(String supplierId, String orinNumber){
		String query = " With " 
				 +" Input(SUPPLIER_ID, ORIN)  " 
				 +" AS  " 
				 +" ( SELECT  '"+supplierId+"' SUPPLIER_ID, '"+orinNumber+"' ORIN FROM dual ), " 
				 +"  " 
				 +" referencefirst AS( " 
				 +" SELECT " 
				 +" LISTAGG(CODE,'|') WITHIN GROUP (ORDER BY CODE) CODE, S.SUPPLIERID, ARD.CONTAINER, IP.ORIN " 
				 +" FROM  " 
				 +" VENDORPORTAL.ADSE_REFERENCE_DATA ARD, INPUT IP, " 
				 +" XMLTABLE(' " 
				 +" <category> " 
				 +"   <code>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"     if (not( ($j) is ($XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec[last()])[1] ) and not(empty($j//Code)) and not($j//Code = \"\")) then  " 
				 +" 					   concat(concat($j//Code,\"-\"),$j//Description) " 
				 +" 					else " 
				 +" 					   string(concat(concat($j//Code,\"-\"),$j//Description)) " 
				 +"    }  " 
				 +" </code>  " 
				 +"   <id>{ " 
				 +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +"   return $i//Supplier_Site_ID " 
				 +"   } " 
				 +"   </id>  " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       ARD.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     CODE VARCHAR(100) path '/category/code', " 
				 +"     SUPPLIERID VARCHAR(100) path '/category/id') S " 
				 +" WHERE  " 
				 +" IP.SUPPLIER_ID=S.SUPPLIERID " 
				 +" AND " 
				 +" ARD.CONTAINER = 'Cars_Brand_Names' " 
				 +" GROUP BY " 
				 +" S.SUPPLIERID, ARD.CONTAINER, IP.ORIN), " 
				 +"  " 
				 +" pettable AS( " 
				 +" select RF.CODE, RF.SUPPLIERID, RF.CONTAINER, T.OMNICODE, APC.MDMID " 
				 +" FROM " 
				 +" referencefirst RF, VENDORPORTAL.ADSE_PET_CATALOG APC, " 
				 +" XMLTABLE(' " 
				 +" for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec " 
				 +" let " 
				 +"     $code := $j//Cars_Brand " 
				 +" return " 
				 +"  " 
				 +"   <category> " 
				 +"   <code>{$code}</code>  " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       APC.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     OMNICODE VARCHAR(100) path '/category/code') T " 
				 +" WHERE " 
				 +" APC.MDMID = RF.ORIN), " 
				 +"  " 
				 +"  " 
				 +" referencetable AS( " 
				 +" SELECT  " 
				 +" V.CODEDESCRIPTION CAR_BRAND, " 
				 +" V.SUPPLIERIDS, " 
				 +" V.IDCHECK " 
				 +" FROM " 
				 +" INPUT I,VENDORPORTAL.ADSE_REFERENCE_DATA ARDT,  " 
				 +" XMLTABLE(' " 
				 +" <category> " 
				 +"   <code>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"        string(concat(concat($j//Code,\"-\"),$j//Description)) " 
				 +"    }  " 
				 +" </code>  " 
				 +"   <id>{ " 
				 +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +"   return $i//Supplier_Site_ID " 
				 +"   } " 
				 +"   </id>  " 
				 +"   <check>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"        string($j//Code) " 
				 +"    }  " 
				 +" </check> " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       ARDT.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     CODEDESCRIPTION VARCHAR(100) path '/category/code', " 
				 +"     SUPPLIERIDS VARCHAR(100) path '/category/id', " 
				 +"     IDCHECK VARCHAR(100) path '/category/check') V " 
				 +" 	WHERE " 
				 +" 	ARDT.CONTAINER = 'Cars_Brand_Names' " 
				 +"   AND I.SUPPLIER_ID=V.SUPPLIERIDS " 
				 +" ) " 
				 +" 	 " 
				 +" SELECT PT.CODE CAR_BRANDS, " 
				 +" RT.CAR_BRAND, " 
				 +" PT.SUPPLIERID SUPPLIER,  " 
				 +" PT.CONTAINER CONTAINER_TYPE, " 
				 +" PT.MDMID ORIN " 
				 +" FROM " 
				 +" PETTABLE PT LEFT OUTER JOIN referencetable rt  " 
				 +" ON  " 
				 +" PT.OMNICODE = RT.IDCHECK " ;
		System.out.println(query);
	}
	
	public static void getOmniBrandsQueryNew(String supplierId, String orinNumber){
		 String query = " With " 
				 +" Input(SUPPLIER_ID, ORIN)  " 
				 +" AS  " 
				 +" ( SELECT  '"+supplierId+"' SUPPLIER_ID, '"+orinNumber+"' ORIN FROM dual ), " 
				 +"  " 
				 +" referencefirst AS( " 
				 +" SELECT " 
				 +" LISTAGG(CODE,'|') WITHIN GROUP (ORDER BY CODE) CODE, S.SUPPLIERID, ARD.CONTAINER, IP.ORIN " 
				 +" FROM  " 
				 +" VENDORPORTAL.ADSE_REFERENCE_DATA ARD, INPUT IP, " 
				 +" XMLTABLE(' " 
				 +" <category> " 
				 +"   <code>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"     if (not( ($j) is ($XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec[last()])[1] ) and not(empty($j//Code)) and not($j//Code = \"\")) then  " 
				 +" 					   concat(concat($j//Code,\"-\"),$j//Description) " 
				 +" 					else " 
				 +" 					   string(concat(concat($j//Code,\"-\"),$j//Description)) " 
				 +"    }  " 
				 +" </code>  " 
				 +"   <id>{ " 
				 +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +"   return $i//Supplier_Site_ID " 
				 +"   } " 
				 +"   </id>  " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       ARD.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     CODE VARCHAR(100) path '/category/code', " 
				 +"     SUPPLIERID VARCHAR(100) path '/category/id') S " 
				 +" WHERE  " 
				 +" IP.SUPPLIER_ID=S.SUPPLIERID " 
				 +" AND " 
				 +" ARD.CONTAINER IN ('OmniChannelBrand','Omni_Channel_Brand_Lookup') " 
				 +" GROUP BY " 
				 +" S.SUPPLIERID, ARD.CONTAINER, IP.ORIN), " 
				 +"  " 
				 +" pettable AS( " 
				 +" select RF.CODE, RF.SUPPLIERID, RF.CONTAINER, T.OMNICODE, APC.MDMID " 
				 +" FROM " 
				 +" referencefirst RF, VENDORPORTAL.ADSE_PET_CATALOG APC, " 
				 +" XMLTABLE(' " 
				 +" for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec " 
				 +" let " 
				 +"     $code := $j//OmniChannelBrand " 
				 +" return " 
				 +"  " 
				 +"   <category> " 
				 +"   <code>{$code}</code>  " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       APC.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     OMNICODE VARCHAR(100) path '/category/code') T " 
				 +" WHERE " 
				 +" APC.MDMID = RF.ORIN), " 
				 +"  " 
				 +"  " 
				 +" referencetable AS( " 
				 +"   SELECT  " 
				 +"     V.CODEDESCRIPTION OMNI_BRAND, " 
				 +"     V.SUPPLIERIDS, " 
				 +"     V.IDCHECK " 
				 +"   FROM " 
				 +"   INPUT I,VENDORPORTAL.ADSE_REFERENCE_DATA ARDT,  " 
				 +"   XMLTABLE(' " 
				 +" <category> " 
				 +"   <code>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"        string(concat(concat($j//Code,\"-\"),$j//Description)) " 
				 +"    }  " 
				 +" </code>  " 
				 +"   <id>{ " 
				 +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +"   return $i//Supplier_Site_ID " 
				 +"   } " 
				 +"   </id>  " 
				 +"   <check>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"        string($j//Code) " 
				 +"    }  " 
				 +" </check> " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       ARDT.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     CODEDESCRIPTION VARCHAR(100) path '/category/code', " 
				 +"     SUPPLIERIDS VARCHAR(100) path '/category/id', " 
				 +"     IDCHECK VARCHAR(100) path '/category/check') V " 
				 +" WHERE  " 
				 +" 	ARDT.CONTAINER IN ('OmniChannelBrand','Omni_Channel_Brand_Lookup') " 
				 +"   AND I.SUPPLIER_ID=V.SUPPLIERIDS " 
				 +"    " 
				 +" ) " 
				 +"  " 
				 +"  " 
				 +" SELECT PT.CODE OMNI_BRANDS, " 
				 +" RT.OMNI_BRAND, " 
				 +" PT.SUPPLIERID SUPPLIER,  " 
				 +" PT.CONTAINER CONTAINER_TYPE, " 
				 +" PT.MDMID ORIN " 
				 +" FROM " 
				 +" PETTABLE PT LEFT OUTER JOIN referencetable rt  " 
				 +" ON  " 
				 +" PT.OMNICODE = RT.IDCHECK " ;
System.out.println(query);
	}
	
	public static void IPHStructureFirst (String categoryId){
		 String query = " WITH Input(MDMID) AS " 
				 +"   (SELECT '"+categoryId+"' MDMID FROM dual " 
				 +"   ) , " 
				 +"   attribfieldvalue AS " 
				 +"   (SELECT iph.MDMID, " 
				 +"     s.SEC_SPEC_VALUE, " 
				 +"     s.SEC_SPEC_VALUE1 " 
				 +"   FROM Input inp, " 
				 +"     VENDORPORTAL.ADSE_ITEM_PRIMARY_HIERARCHY IPH , " 
				 +"     XMLTABLE('    " 
				 +" for $j in $XML_DATA/pim_category/iph_category_header   " 
				 +" let     " 
				 +" $fullPath := $j//full_path   , " 
				 +"  " 
				 +" $categoryname := tokenize($j//full_path, \"///\") " 
				 +"  " 
				 +" return " 
				 +" <category>   " 
				 +"  " 
				 +" <data>{$fullPath}</data>   " 
				 +" <categoryname>{$categoryname}</categoryname>   " 
				 +"  " 
				 +" </category>' passing IPH.xml_data AS \"XML_DATA\" COLUMNS SEC_SPEC_VALUE VARCHAR(100) path '/category/data', SEC_SPEC_VALUE1 VARCHAR(100) path '/category/categoryname' ) s " 
				 +"   WHERE iph.MDMID =inp.mdmid " 
				 +"   ) , " 
				 +"   codeDescVal AS " 
				 +"   (SELECT regexp_substr(atv.SEC_SPEC_VALUE,'[^///]+',1,LEVEL) AS codeDesc " 
				 +"   FROM dual, " 
				 +"     attribfieldvalue atv " 
				 +"     CONNECT BY regexp_substr(atv.SEC_SPEC_VALUE,'[^///]+',1,LEVEL) IS NOT NULL " 
				 +"   ) , " 
				 +"   allCategory AS " 
				 +"   (SELECT SUBSTR(cdv.codeDesc, 1, Instr(cdv.codeDesc, '-') - 1) CategoryId, " 
				 +"     SUBSTR(cdv.codeDesc, Instr(cdv.codeDesc, '-')          + 1) CategoryName " 
				 +"   FROM dual, " 
				 +"     codeDescVal cdv " 
				 +"   ) " 
				 +" SELECT CategoryId, " 
				 +"   CategoryName " 
				 +" FROM allCategory " 
				 +" WHERE CategoryId IS NOT NULL  " ;
		 System.out.println(query);

	}
	public static void IPHStructureSecond (String categoryId, String styleId){
		
		 String query = " WITH Input(CategoryID, StyleID) AS " 
				 +"   ( SELECT '"+categoryId+"' CategoryID, '"+styleId+"' StyleID FROM dual " 
				 +"   ) , " 
				 +"   attribfieldvalue AS " 
				 +"   (SELECT A.ATTRIBUTE_ID, " 
				 +"     A.CATEGORY_ID, " 
				 +"     A.ATTRIBUTE_NAME, " 
				 +"     A.ATTRIBUTE_FIELD_TYPE, " 
				 +"     A.MAPPING_KEY, " 
				 +"     A.ATTRIBUTE_PATH, " 
				 +"     SUBSTR(A.ATTRIBUTE_PATH,0,INSTR(A.ATTRIBUTE_PATH,'/')-1) PARENT_NODE, " 
				 +"     SUBSTR(A.ATTRIBUTE_PATH,INSTR(A.ATTRIBUTE_PATH,'/')  +1 ,LENGTH(A.ATTRIBUTE_PATH)) CHILD_NODE, " 
				 +"     A.ATTRIBUTE_STATUS, " 
				 +"     A.DISPLAY_NAME, " 
				 +"     A.IS_DISPLAYABLE, " 
				 +"     A.IS_EDITABLE, " 
				 +"     A.IS_MANDATORY, " 
				 +"     A.HTML_DISPLAY_DESC, " 
				 +"     A.MAX_OCCURANCE, " 
				 +"     A.ATTRIBUTE_TYPE, " 
				 +"     A.ATTRIBUTE_FIELD_VALUE, " 
				 +"     IP.StyleID " 
				 +"   FROM VENDORPORTAL.PET_ATTRIBUTE A, " 
				 +"     INPUT IP " 
				 +"   WHERE  " 
				 +"     Category_Id in (SELECT regexp_substr(CategoryID,'[^,]+',1,LEVEL) FROM dual CONNECT BY regexp_substr(CategoryID,'[^,]+',1,LEVEL)  IS NOT NULL) " 
				 +"   ) " 
				 +" SELECT APC.MDMID, " 
				 +"   s.SEC_SPEC_VALUE, " 
				 +"   afv.ATTRIBUTE_ID, " 
				 +"   afv.CATEGORY_ID, " 
				 +"   afv.ATTRIBUTE_NAME, " 
				 +"   afv.ATTRIBUTE_FIELD_TYPE, " 
				 +"   afv.MAPPING_KEY, " 
				 +"   afv.ATTRIBUTE_PATH, " 
				 +"   afv.ATTRIBUTE_STATUS, " 
				 +"   afv.DISPLAY_NAME, " 
				 +"   afv.IS_DISPLAYABLE, " 
				 +"   afv.IS_EDITABLE, " 
				 +"   afv.IS_MANDATORY, " 
				 +"   afv.HTML_DISPLAY_DESC, " 
				 +"   afv.MAX_OCCURANCE, " 
				 +"   afv.ATTRIBUTE_TYPE, " 
				 +"   afv.ATTRIBUTE_FIELD_VALUE " 
				 +" FROM attribfieldvalue afv, " 
				 +"   VENDORPORTAL.ADSE_PET_CATALOG APC, " 
				 +"   XMLTABLE('  " 
				 +" <category> " 
				 +" <data>{ " 
				 +" 	for $j in $XML_DATA/pim_entry/entry/*[ends-with(name(),$PARENT_NODE)]/*[ends-with(name(),$CHILD_NODE)] " 
				 +" 	return   " 
				 +" 	if (not( ($j) is ($XML_DATA/pim_entry/entry/*[ends-with(name(),$PARENT_NODE)]/*[ends-with(name(),$CHILD_NODE)][last()])[1] ) and not(empty($j)) and not($j = \"\")) then                                   " 
				 +" 	concat($j, \"|\")                               " 
				 +" 	else                                  " 
				 +" 	string($j)    " 
				 +" }    " 
				 +" </data>     " 
				 +" </category>       " 
				 +" ' passing APC.xml_data AS \"XML_DATA\",afv.PARENT_NODE AS \"PARENT_NODE\", afv.CHILD_NODE AS \"CHILD_NODE\" COLUMNS SEC_SPEC_VALUE VARCHAR(100) path '/category/data') s " 
				 +" WHERE APC.MDMID=afv.STYLEID " ;

System.out.println(query);
	}
	
	public static void createManualQuery(String orinNumber){
				String query =  " WITH INPUT(ORIN) AS " 
				 +"   (SELECT '"+orinNumber+"' FROM DUAL " 
				 +"   ), " 
				 +"   item AS " 
				 +"   (SELECT XML_DATA " 
				 +"   FROM " 
				 +"     (SELECT MDMID, XML_DATA, MOD_DTM FROM VENDORPORTAL.ADSE_ITEM_CATALOG " 
				 +"     UNION " 
				 +"     SELECT MDMID, XML_DATA, MOD_DTM FROM VENDORPORTAL.ADSE_GROUP_CATALOG " 
				 +"     ), " 
				 +"     Input i " 
				 +"   WHERE i.orin = mdmid " 
				 +"   AND MOD_DTM  = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"   ), " 
				 +"   pet AS " 
				 +"   (SELECT * " 
				 +"   FROM VENDORPORTAL.ADSE_PET_CATALOG, " 
				 +"     Input i " 
				 +"   WHERE i.orin = mdmid " 
				 +"   AND MOD_DTM  = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"   ), " 
				 +"   validORIN(MESSAGE) AS " 
				 +"   (SELECT 'ORIN_NOT_FOUND' FROM dual WHERE NOT EXISTS " 
				 +"     (SELECT * FROM item " 
				 +"     ) " 
				 +"   ), " 
				 +"   petCreated(MESSAGE) AS " 
				 +"   (SELECT 'PET_EXIST' FROM dual WHERE EXISTS " 
				 +"     (SELECT * FROM pet " 
				 +"     ) " 
				 +"   ), " 
				 +"   otherCriteria(MESSAGE) AS " 
				 +"   (SELECT 'ORIN_NOT_ELIGIBLE' " 
				 +"   FROM dual " 
				 +"   WHERE EXISTS " 
				 +"     (SELECT * " 
				 +"     FROM item, " 
				 +"       XMLTABLE('for $i in $XML_DATA/pim_entry/entry let $uda80 := ($i/Item_UDA_Spec/Adjustment-Unidentified eq \"Z VENDOR/DEPARTMENT ADJUSTMENT\") or ($i/Item_UDA_Spec/Adjustment-Unidentified eq \"Z ADJUSTMENT\") or ($i/Item_UDA_Spec/Adjustment-Unidentified eq \"UNIDENTIFIED\"), $non_sellable := (fn:count($i/Item_Simple_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Simple_Pack_Spec/Sellable_Flag eq \"false\")), $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and  ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")), $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"  or $i/Group_Ctg_Spec/System/Removal_Flag eq \"true\"  return <flag>{$uda80 or $non_sellable or $non_sellable_pack or $removal}</flag>' passing XML_DATA AS \"XML_DATA\" columns flag VARCHAR(10) path '/flag' ) " 
				 +"     WHERE flag = 'true' " 
				 +"     ) " 
				 +"   ), " 
				 +"   supplierCheck(MESSAGE) AS " 
				 +"   (SELECT 'Pet cannot be created for an Inactive supplier site' " 
				 +"   FROM dual " 
				 +"   WHERE EXISTS " 
				 +"     (SELECT 1 " 
				 +"     FROM item, " 
				 +"       xmltable('/pim_entry/entry//Supplier[Primary_Flag eq \"true\"]/Id' passing item.XML_DATA columns supplierid VARCHAR(20) path '.'), " 
				 +"       VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup, " 
				 +"       xmltable('/pim_entry/entry/Supplier_Ctg_Spec/Status/Code' passing sup.XML_DATA columns supplier_state VARCHAR2(5) path '.') " 
				 +"     WHERE supplierid  = mdmid " 
				 +"     AND supplier_state='I' " 
				 +"     ) " 
				 +"   ) " 
				 +" SELECT MESSAGE " 
				 +" FROM " 
				 +"   ( SELECT MESSAGE FROM validORIN " 
				 +"   UNION ALL " 
				 +"   SELECT MESSAGE FROM petCreated " 
				 +"   UNION ALL " 
				 +"   SELECT MESSAGE FROM otherCriteria " 
				 +"   UNION ALL " 
				 +"   SELECT 'Success' MESSAGE FROM dual " 
				 +"   ) " 
				 +" WHERE rownum=1 " ;

		System.out.println(query);
	}
	
	public static void getComplexPackMappedIPHMerchandiseHierarchy(String orinNumber){	
			String query = " WITH "
				 +"  " 
				 +" Input(ORIN) as  " 
				 +" (Select '"+orinNumber+"' ORIN from dual),  " 
				 +"  " 
				 +" petcatalog AS " 
				 +"   ( " 
				 +" select pet.mdmid ORIN, ias.CATEGORY_ID,ias.CATEGORY_DESC, ias.CATEGORY_NAME from Input inp,VENDORPORTAL.ADSE_PET_CATALOG pet, " 
				 +" XMLTABLE( " 
				 +" 'for $j in $XML_DATA/pim_entry/pet_entry_header/category_paths/category[last()] " 
				 +" let  " 
				 +" 	    $categoryid := $j//pk, " 
				 +"       $categorydesc := $j//path, " 
				 +"       $categoryname := tokenize(tokenize($j//path, \"///\")[last()],\"-\")[last()] " 
				 +"       return   " 
				 +" 	 <category> " 
				 +"     <pk>{$categoryid}</pk> " 
				 +"     <path>{$categorydesc}</path> " 
				 +"     <name>{$categoryname}</name> " 
				 +"    </category>' " 
				 +"       PASSING pet.XML_DATA AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     CATEGORY_ID VARCHAR(100) path '/category/pk', " 
				 +" 	  CATEGORY_DESC VARCHAR(100) path '/category/path', " 
				 +"     CATEGORY_NAME VARCHAR(100) path '/category/name') ias " 
				 +"     where " 
				 +"     pet.mdmid = inp.ORIN) " 
				 +"      " 
				 +"     , " 
				 +" petitemcatalog AS " 
				 +" ( " 
				 +"   select  " 
				 +"   pc.ORIN, " 
				 +"   pc.CATEGORY_ID, " 
				 +"   pc.CATEGORY_NAME, " 
				 +"   ibs.ITEM_CATEGORY_ID " 
				 +"   from  " 
				 +"   petcatalog pc, VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
				 +"   XMLTABLE( " 
				 +" 'for $j in $XML_DATA/pim_entry/item_header/category_paths/category " 
				 +" let  " 
				 +" 	    $itemcategoryid := $j//pk, " 
				 +"       $itemcategorydesc := $j//path, " 
				 +"       $itemcategoryname := tokenize($j//path, \"///\")[1] " 
				 +"       return   " 
				 +"      <category> " 
				 +"       <pk>{$itemcategoryid}</pk> " 
				 +"       <path>{$itemcategorydesc}</path> " 
				 +"       <name>{$itemcategoryname}</name> " 
				 +"      </category>' " 
				 +"       PASSING aic.XML_DATA AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     ITEM_CATEGORY_ID VARCHAR(100) path '/category/pk', " 
				 +" 	  ITEM_CATEGORY_DESC VARCHAR(100) path '/category/path', " 
				 +"     ITEM_CATEGORY_NAME VARCHAR(100) path '/category/name') ibs " 
				 +"   where " 
				 +"   pc.ORIN = aic.MDMID " 
				 +"   AND " 
				 +"   (CATEGORY_ID IS NULL OR CATEGORY_ID IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '' )) " 
				 +"   AND " 
				 +"   (CATEGORY_NAME IS NULL OR CATEGORY_NAME IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '')) " 
				 +"   AND " 
				 +"   UPPER(ibs.ITEM_CATEGORY_NAME) = UPPER('Merchandise_Hierarchy')) " 
				 +"    " 
				 +"  " 
				 +" ,petitemmerch AS " 
				 +" (  " 
				 +"   select " 
				 +"   pic.ORIN, " 
				 +"   pic.CATEGORY_ID, " 
				 +"   pic.CATEGORY_NAME, " 
				 +"   pic.ITEM_CATEGORY_ID, " 
				 +"   ics.SUB_CLASS " 
				 +"   FROM " 
				 +"   petitemcatalog pic, VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY amh, " 
				 +"   XMLTABLE( " 
				 +"     'for $j in $XML_DATA/pim_category/merchandise_category_header " 
				 +"     let  " 
				 +" 	    $subclass := tokenize($j//full_path, \"///\")[last()]       " 
				 +"       return   " 
				 +"        <merchandise_category_header> " 
				 +"         <full_path>{$subclass}</full_path> " 
				 +"        </merchandise_category_header>' " 
				 +"       PASSING amh.XML_DATA AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     SUB_CLASS VARCHAR(100) path '/merchandise_category_header/full_path') ics " 
				 +"  " 
				 +"   where " 
				 +"   pic.ITEM_CATEGORY_ID = amh.MDMID " 
				 +"   AND " 
				 +"   (CATEGORY_ID IS NULL OR CATEGORY_ID IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '' )) " 
				 +"   AND " 
				 +"   (CATEGORY_NAME IS NULL OR CATEGORY_NAME IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '')) " 
				 +"   ) " 
				 +"    " 
				 +"   select  " 
				 +"   pim.ORIN ORIN, " 
				 +"   pim.CATEGORY_ID PET_CATEGORY_ID, " 
				 +"   pim.CATEGORY_NAME PET_CATEGORY_NAME, " 
				 +"   pim.SUB_CLASS SUB_CLASS, " 
				 +"   ids.MERCH_CATEGORY_ID MERCH_CATEGORY_ID, " 
				 +"   ids.MERCH_CATEGORY_NAME MERCH_CATEGORY_NAME " 
				 +"   FROM " 
				 +"   petitemmerch pim, VENDORPORTAL.ADSE_MERCHANDISE_HIERARCHY amh1, " 
				 +"   XMLTABLE( " 
				 +" 'for $j in $XML_DATA/pim_category/entry/Merchandise_Hier_Spec/IPH_Category_Mappings " 
				 +" let  " 
				 +"       $leafnode7 := $j//Level_7, " 
				 +"       $leafnode6 := if(string-length($leafnode7) = 0) then $j//Level_6 else $leafnode7, " 
				 +"       $leafnode5 := if(string-length($leafnode6) = 0) then $j//Level_5 else $leafnode6, " 
				 +"       $leafnode4 := if(string-length($leafnode5) = 0) then $j//Level_4 else $leafnode5, " 
				 +"       $leafnode3 := if(string-length($leafnode4) = 0) then $j//Level_3 else $leafnode4, " 
				 +"       $leafnode2 := if(string-length($leafnode3) = 0) then $j//Level_2 else $leafnode3, " 
				 +"       $leafnode1 := if(string-length($leafnode2) = 0) then $j//Level_1 else $leafnode2, " 
				 +"       $merchcategoryid := tokenize($leafnode1,\"-\")[1], " 
				 +"       $merchcategoryname := tokenize($leafnode1,\"-\")[last()] " 
				 +"       return   " 
				 +" 	 <IPH_Category_Mappings> " 
				 +"     <category_id>{$merchcategoryid}</category_id> " 
				 +"     <category_name>{$merchcategoryname}</category_name> " 
				 +"    </IPH_Category_Mappings>' " 
				 +"       PASSING amh1.XML_DATA AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     MERCH_CATEGORY_ID VARCHAR(100) path '/IPH_Category_Mappings/category_id', " 
				 +"     MERCH_CATEGORY_NAME VARCHAR(100) path '/IPH_Category_Mappings/category_name') ids " 
				 +"  " 
				 +"   where " 
				 +"   pim.ITEM_CATEGORY_ID = amh1.MDMID " 
				 +"   AND " 
				 +"   (CATEGORY_ID IS NULL OR CATEGORY_ID IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '' )) " 
				 +"   AND " 
				 +"   (CATEGORY_NAME IS NULL OR CATEGORY_NAME IN ('Style','StyleColor','SKU', 'ComplexPack', 'PackColor', '')) " ;

				 System.out.println(query);
	}
	
	public static void getComplexPackMappedIPHPetCatalog(String orinNumber){
		
		String query = " WITH " 
				 +"   Input(ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       '"+orinNumber+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" SELECT " 
				 +"   pet.mdmid ORIN, " 
				 +"   ias.CATEGORY_ID PET_CATEGORY_ID, " 
				 +"   ias.CATEGORY_NAME PET_CATEGORY_NAME, " 
				 +"   NULL SUB_CLASS, " 
				 +"   NULL MERCH_CATEGORY_ID, " 
				 +"   NULL MERCH_CATEGORY_NAME " 
				 +" FROM " 
				 +"   Input inp, " 
				 +"   VENDORPORTAL.ADSE_PET_CATALOG pet, " 
				 +"   XMLTABLE( " 
				 +"   'for $j in $XML_DATA/pim_entry/pet_entry_header/category_paths/category    let          $categoryid := $j//pk,    $categorydesc := $j//path,    $categoryname := tokenize(tokenize($j//path, \"///\")[last()],\"-\")[last()]        return      <category>    <pk>{$categoryid}</pk>     <path>{$categorydesc}</path>      <name>{$categoryname}</name>     </category>' " 
				 +"   PASSING pet.XML_DATA AS \"XML_DATA\" COLUMNS CATEGORY_ID VARCHAR(100) path " 
				 +"   '/category/pk', CATEGORY_DESC                          VARCHAR(100) path " 
				 +"   '/category/path', CATEGORY_NAME                        VARCHAR(100) path " 
				 +"   '/category/name') ias " 
				 +" WHERE " 
				 +"   pet.mdmid = inp.ORIN " 
				 +"   AND ias.CATEGORY_NAME NOT LIKE '%Style%' " 
				 +"   AND ias.CATEGORY_NAME NOT LIKE '%ComplexPack%' " ;
		
		System.out.println(query);

				 
	}
	public static void getComplexPackBlueMartiniAttributes(String categoryId, String styleId){	
		
		String query = " WITH " 
				 +" Input(CategoryID, StyleID)  " 
				 +" AS  " 
				 +" ( SELECT  '"+categoryId+"' CategoryID, '"+styleId+"' StyleID FROM dual ) " 
				 +"  " 
				 +" ,attribfieldvalue AS( " 
				 +" select   " 
				 +" A.ATTRIBUTE_ID, A.CATEGORY_ID, A.ATTRIBUTE_NAME, A.ATTRIBUTE_FIELD_TYPE, A.MAPPING_KEY, A.ATTRIBUTE_PATH,  " 
				 +" SUBSTR(A.ATTRIBUTE_PATH,0,INSTR(A.ATTRIBUTE_PATH,'/')-1) PARENT_NODE, " 
				 +" SUBSTR(A.ATTRIBUTE_PATH,INSTR(A.ATTRIBUTE_PATH,'/')+1 ,LENGTH(A.ATTRIBUTE_PATH)) CHILD_NODE, " 
				 +" A.ATTRIBUTE_STATUS, " 
				 +" A.DISPLAY_NAME, A.IS_DISPLAYABLE, A.IS_EDITABLE, A.IS_MANDATORY, A.HTML_DISPLAY_DESC, A.MAX_OCCURANCE, A.ATTRIBUTE_TYPE,  " 
				 +" A.ATTRIBUTE_FIELD_VALUE,IP.StyleID  " 
				 +" from  " 
				 +" VENDORPORTAL.PET_ATTRIBUTE A, INPUT IP " 
				 +" WHERE Category_Id=IP.CategoryID " 
				 +" AND  " 
				 +" ATTRIBUTE_PATH LIKE 'zbm_sec_spec_%' " 
				 +" ) " 
				 +"  " 
				 +" SELECT  " 
				 +" APC.MDMID,s.ZBM_SEC_SPEC_VALUE, afv.ATTRIBUTE_ID, afv.CATEGORY_ID, afv.ATTRIBUTE_NAME, afv.ATTRIBUTE_FIELD_TYPE, afv.MAPPING_KEY, afv.ATTRIBUTE_PATH,  " 
				 +" afv.ATTRIBUTE_STATUS, " 
				 +" afv.DISPLAY_NAME, afv.IS_DISPLAYABLE, afv.IS_EDITABLE, afv.IS_MANDATORY, afv.HTML_DISPLAY_DESC, afv.MAX_OCCURANCE, afv.ATTRIBUTE_TYPE,  " 
				 +" afv.ATTRIBUTE_FIELD_VALUE " 
				 +" FROM  " 
				 +" attribfieldvalue afv, VENDORPORTAL.ADSE_PET_CATALOG APC, " 
				 +" XMLTABLE(' " 
				 +" <category> " 
				 +" <data>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/*[ends-with(name(),$PARENT_NODE)]/*[ends-with(name(),$CHILD_NODE)] " 
				 +" return " 
				 +"   if (not( ($j) is ($XML_DATA/pim_entry/entry/*[ends-with(name(),$PARENT_NODE)]/*[ends-with(name(),$CHILD_NODE)][last()])[1] ) and not(empty($j)) and not($j = \"\")) then  " 
				 +" 					   concat($j, \"|\") " 
				 +" 					else " 
				 +" 					   string($j) " 
				 +"    } " 
				 +"    </data>  " 
				 +"    </category> " 
				 +" 	 ' " 
				 +"    passing " 
				 +"       APC.xml_data AS \"XML_DATA\",afv.PARENT_NODE as \"PARENT_NODE\", afv.CHILD_NODE AS \"CHILD_NODE\" " 
				 +"       COLUMNS  " 
				 +"     ZBM_SEC_SPEC_VALUE VARCHAR(100) path '/category/data') s " 
				 +" WHERE  " 
				 +" APC.MDMID=afv.STYLEID " ;
		
		System.out.println(query);

	}
	
	
	public static void getComplexPackColorAttribute(String orinNumber){	
		
		String query = " WITH " 
				 +" INPUT(ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       '"+orinNumber+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ), " 
				 +"   pettable AS " 
				 +"   ( " 
				 +"   (select NRF_Color_Code, " 
				 +"   NRF_Color_Description, " 
				 +"   Secondary_Color_1, " 
				 +"   Secondary_Color_2, " 
				 +"   Secondary_Color_3, " 
				 +"   Secondary_Color_4, " 
				 +"   Omni_Channel_Color, " 
				 +"   Color_Family_Code   " 
				 +"   FROM " 
				 +"   vendorportal.ADSE_PET_CATALOG, " 
				 +"   xmltable('for $i in $pet/pim_entry/entry/Ecomm_StyleColor_Spec return $i' " 
				 +"   passing XML_DATA AS \"pet\" columns  " 
				 +"   NRF_Color_Code          VARCHAR2(40) path  'NRF_Color_Code',  " 
				 +"   NRF_Color_Description   VARCHAR2(40) path  'NRF_Color_Description',  " 
				 +"   Secondary_Color_1       VARCHAR2(40) path  'Secondary_Color_1',  " 
				 +"   Secondary_Color_2       VARCHAR2(40) path  'Secondary_Color_2',  " 
				 +"   Secondary_Color_3       VARCHAR2(40) path  'Secondary_Color_3',  " 
				 +"   Secondary_Color_4       VARCHAR2(40) path  'Secondary_Color_4',  " 
				 +"   Omni_Channel_Color      VARCHAR2(40) path  'Omni_Channel_Color_Description',  " 
				 +"   Color_Family_Code       VARCHAR2(40) path  'Omnichannel_Color_Family' " 
				 +"    ) i, " 
				 +"   Input inp " 
				 +" WHERE " 
				 +"   Entry_Type = 'StyleColor' " 
				 +" AND mdmid    =inp.ORIN) " 
				 +" UNION ALL " 
				 +"   (select NRF_Color_Code, " 
				 +"   NRF_Color_Description, " 
				 +"   Secondary_Color_1, " 
				 +"   Secondary_Color_2, " 
				 +"   Secondary_Color_3, " 
				 +"   Secondary_Color_4, " 
				 +"   Omni_Channel_Color, " 
				 +"   Color_Family_Code   " 
				 +"   FROM " 
				 +"   vendorportal.ADSE_PET_CATALOG, " 
				 +"   xmltable('for $i in $pet/pim_entry/entry/Ecomm_PackColor_Spec return $i' " 
				 +"   passing XML_DATA AS \"pet\" columns  " 
				 +"   NRF_Color_Code          VARCHAR2(40) path  'NRF_Color_Code',  " 
				 +"   NRF_Color_Description   VARCHAR2(40) path  'NRF_Color_Description',  " 
				 +"   Secondary_Color_1       VARCHAR2(40) path  'Secondary_Color_1',  " 
				 +"   Secondary_Color_2       VARCHAR2(40) path  'Secondary_Color_2',  " 
				 +"   Secondary_Color_3       VARCHAR2(40) path  'Secondary_Color_3',  " 
				 +"   Secondary_Color_4       VARCHAR2(40) path  'Secondary_Color_4',  " 
				 +"   Omni_Channel_Color      VARCHAR2(40) path  'Omni_Channel_Color_Description',  " 
				 +"   Color_Family_Code       VARCHAR2(40) path  'Omnichannel_Color_Family' " 
				 +"    ) i, " 
				 +"   Input inp " 
				 +" WHERE " 
				 +"   Entry_Type = 'PackColor' " 
				 +" AND mdmid    =inp.ORIN) " 
				 +" ) " 
				 +" select pt.*, s.code,s.super_Color_name from pettable pt, VENDORPORTAL.ADSE_REFERENCE_DATA ard, " 
				 +" xmltable('for $i in $ref/pim_entry/entry/Omni_Channel_Color_Family_Spec return $i' " 
				 +"   passing ard.XML_DATA AS \"ref\" columns " 
				 +"   Code   VARCHAR2(40) path  'Code', " 
				 +"   SUPER_COLOR_NAME  VARCHAR2(40) path  'SUPER_COLOR_NAME') s " 
				 +"   where  " 
				 +"   ard.Container = 'Omnichannel_Color_Family' " 
				 +"   and  " 
				 +"   pt.Color_Family_Code = s.code " ;
		
System.out.println(query);
				 
	}
	
	public static void getComplexPackGlobalAttribute(String orinNumber){	
		
		String query = " WITH " 
				 +"   Input(ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       '"+orinNumber+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   , " 
				 +"   petCatalogDet AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       p.OmniChannelBrand OmniChannelBrand, " 
				 +"       p.Product_Description Product_Description, " 
				 +"       p.Launch_Date Launch_Date, " 
				 +"       p.Belk_Exclusive Belk_Exclusive, " 
				 +"       p.Channel_Exclusive Channel_Exclusive, " 
				 +"       p.SDF SDF, " 
				 +"       p.Product_Dimensions_UOM Product_Dimensions_UOM, " 
				 +"       p.Product_Length Product_Length, " 
				 +"       p.Product_Height Product_Height, " 
				 +"       p.Product_Width Product_Width, " 
				 +"       p.BOPIS BOPIS, " 
				 +"       p.Gift_Box Gift_Box, " 
				 +"       p.ImportedOrDomestic ImportedOrDomestic, " 
				 +"       p.Product_Weight_UOM Product_Weight_UOM, " 
				 +"       p.Product_Weight Product_Weight, " 
				 +"       p.GXS_Long_Description Long_Description, " 
				 +"       p.Product_Name Product_Name, " 
				 +"       p.PO_Box_Shippable, " 
				 +"       p.COPY_BULLET, " 
				 +"       P.Fraud_Quantity, " 
				 +"       inp.ORIN inpOrin, " 
				 +"       pet.XML_DATA, " 
				 +"       pet.entry_type " 
				 +"     FROM " 
				 +"       vendorportal.ADSE_PET_CATALOG pet, " 
				 +"       XMLTable( " 
				 +"       'for $i in $item/pim_entry/entry/*       let $item_type := $i/../../pet_entry_header/category_paths/category[1]/pk     where name($i) eq concat(\"Ecomm_\",$item_type,\"_Spec\")     return $i' " 
				 +"       passing pet.XML_DATA AS \"item\" columns OmniChannelBrand     VARCHAR2(50) path " 
				 +"       'OmniChannelBrand', Product_Description                     VARCHAR2(60) path " 
				 +"       'Product_Description', Launch_Date                          VARCHAR2(50) path " 
				 +"       'Launch_Date', Belk_Exclusive                               VARCHAR2(10) path " 
				 +"       'Belk_Exclusive', Channel_Exclusive                         VARCHAR2(10) path " 
				 +"       'Channel_Exclusive', SDF                                    VARCHAR2(50) path " 
				 +"       'Supplier_Direct_Fulfillment', Product_Dimensions_UOM       VARCHAR2(50) path " 
				 +"       'Product_Dimensions/Product_Dimensions_UOM', Product_Length VARCHAR2(50) " 
				 +"       path 'Product_Dimensions/Length', Product_Height            VARCHAR2(50) " 
				 +"       path 'Product_Dimensions/Height', Product_Width             VARCHAR2(50) " 
				 +"       path 'Product_Dimensions/Width', Product_Weight             VARCHAR2(40) " 
				 +"       path 'Product_Weight/Weight', Product_Weight_UOM            VARCHAR2(40) " 
				 +"       path 'Product_Weight/UOM', BOPIS                            VARCHAR2(60) " 
				 +"       path 'BOPIS', Gift_Box                                      VARCHAR2(10) " 
				 +"       path 'Gift_Box', ImportedOrDomestic                         VARCHAR2(10) " 
				 +"       path 'if(SourcedDomestically eq \"false\") then \"Imported\" else \"Domestic\"' " 
				 +"       , GXS_Long_Description VARCHAR2(40) path 'GXS_Long_Description', " 
				 +"       Product_Name           VARCHAR2(40) path 'Product_Name', PO_Box_Shippable " 
				 +"                              VARCHAR2(40) path 'PO_Box_Shippable', cOPY_BULLET " 
				 +"                              VARCHAR2(40) path 'cOPY_BULLET', Fraud_Quantity " 
				 +"                              VARCHAR2(40) path 'Fraud_Quantity' ) p, " 
				 +"       Input inp " 
				 +"     WHERE " 
				 +"       inp.ORIN = pet.mdmid " 
				 +"   ) " 
				 +" SELECT " 
				 +"   petCatDet.OmniChannelBrand, " 
				 +"   petCatDet.Product_Description, " 
				 +"   petCatDet.Launch_Date, " 
				 +"   petCatDet.Belk_Exclusive, " 
				 +"   petCatDet.Channel_Exclusive, " 
				 +"   petCatDet.SDF, " 
				 +"   petCatDet.Product_Dimensions_UOM, " 
				 +"   petCatDet.Product_Length, " 
				 +"   petCatDet.Product_Height, " 
				 +"   petCatDet.Product_Width, " 
				 +"   petCatDet.BOPIS, " 
				 +"   petCatDet.Gift_Box, " 
				 +"   petCatDet.ImportedOrDomestic, " 
				 +"   petCatDet.Product_Weight_UOM, " 
				 +"   petCatDet.Product_Weight, " 
				 +"   petCatDet.Long_Description, " 
				 +"   petCatDet.Product_Name, " 
				 +"   petCatDet.PO_Box_Shippable, " 
				 +"   pp.COPY_BULLET, " 
				 +"   petCatDet.Fraud_Quantity " 
				 +" FROM " 
				 +"   petCatalogDet petCatDet , " 
				 +"   XMLTable( " 
				 +"   '    <out>     <COPY_BULLET>     {      for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec/Copy_Bullet      return      if (not( ($j) is ($XML_DATA/pim_entry/entry/Ecomm_Style_Spec/Copy_Bullet[1])[1]) and not(empty($j)) and not($j =\"\")) then        concat(\",\", $j)   else      string($j)  }  </COPY_BULLET>  </out>  ' " 
				 +"   passing petCatDet.XML_DATA AS \"XML_DATA\" columns COPY_BULLET VARCHAR2(400) " 
				 +"   path '/out/COPY_BULLET' ) pp " 
				 +"   WHERE entry_type = 'Style' " 
				 +"   UNION ALL " 
				 +"   SELECT " 
				 +"   petCatDet.OmniChannelBrand, " 
				 +"   petCatDet.Product_Description, " 
				 +"   petCatDet.Launch_Date, " 
				 +"   petCatDet.Belk_Exclusive, " 
				 +"   petCatDet.Channel_Exclusive, " 
				 +"   petCatDet.SDF, " 
				 +"   petCatDet.Product_Dimensions_UOM, " 
				 +"   petCatDet.Product_Length, " 
				 +"   petCatDet.Product_Height, " 
				 +"   petCatDet.Product_Width, " 
				 +"   petCatDet.BOPIS, " 
				 +"   petCatDet.Gift_Box, " 
				 +"   petCatDet.ImportedOrDomestic, " 
				 +"   petCatDet.Product_Weight_UOM, " 
				 +"   petCatDet.Product_Weight, " 
				 +"   petCatDet.Long_Description, " 
				 +"   petCatDet.Product_Name, " 
				 +"   petCatDet.PO_Box_Shippable, " 
				 +"   pp.COPY_BULLET, " 
				 +"   petCatDet.Fraud_Quantity " 
				 +" FROM " 
				 +"   petCatalogDet petCatDet , " 
				 +"   XMLTable( " 
				 +"   '    <out>     <COPY_BULLET>     {      for $j in $XML_DATA/pim_entry/entry/Ecomm_ComplexPack_Spec/Copy_Bullet      return      if (not( ($j) is ($XML_DATA/pim_entry/entry/Ecomm_ComplexPack_Spec/Copy_Bullet[1])[1]) and not(empty($j)) and not($j =\"\")) then        concat(\",\", $j)   else      string($j)  }  </COPY_BULLET>  </out>  ' " 
				 +"   passing petCatDet.XML_DATA AS \"XML_DATA\" columns COPY_BULLET VARCHAR2(400) " 
				 +"   path '/out/COPY_BULLET' ) pp " 
				 +"   WHERE entry_type = 'ComplexPack' " ;
		
		System.out.println(query);

	}
	
	
	public static void getComplexPackInfoSection(String orinNumber){	
		String query = " WITH " 
				 +"   INPUT( ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       '"+orinNumber+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   , " 
				 +"   TypeIndex(indx, typ) AS ( " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       1 indx, " 
				 +"       'Style' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       2 indx, " 
				 +"       'StyleColor' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       3 indx, " 
				 +"       'SKU' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       4 indx, " 
				 +"       'Complex Pack' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       5 indx, " 
				 +"       'PackColor' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   ) , " 
				 +"   Items AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       NVL(aic.PARENT_MDMID, aic.MDMID) PARENT_MDMID, " 
				 +"       aic.MDMID, " 
				 +"       aic.ENTRY_TYPE, " 
				 +"       descr DESCRIPTION, " 
				 +"       i.supplier_id PRIMARY_SUPPLIER_ID, " 
				 +"       deptid dept_id, " 
				 +"       classid Class_Id, " 
				 +"       Vendor_Image, " 
				 +"       Vendor_Sample, " 
				 +"       i.Vendor_Sytle, " 
				 +"       completion_date " 
				 +"     FROM " 
				 +"       VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
				 +"       XMLTABLE( " 
				 +"       'for $i in $XML_DATA/pim_entry/entry           let             $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),   $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),  $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\" ,  $ven_style := $i//Vendor_Style/text()return   <out>                  <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path, \"\\||///\")[5]}</dept_id>   <class_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[6]}</class_id>    <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>                 <desc>{$i/Item_Ctg_Spec/Description/Long}</desc>   <flag>{$uda80 and $non_sellable_pack and $removal}</flag>     <venStyle>{$ven_style}</venStyle></out>' " 
				 +"       passing aic.XML_DATA AS \"XML_DATA\" columns flag VARCHAR(10) path " 
				 +"       '/out/flag', supplier_id                        VARCHAR2(20) path " 
				 +"       '/out/supplier_id', deptid                      VARCHAR2(20) path " 
				 +"       '/out/dept_id', classid                         VARCHAR2(20) path " 
				 +"       '/out/class_id', descr                          VARCHAR2(64) path " 
				 +"       '/out/desc', Vendor_Sytle                       VARCHAR2(30) path " 
				 +"       '/out/venStyle') i, " 
				 +"       Input inp, " 
				 +"       VENDORPORTAL.ADSE_PET_CATALOG pet, " 
				 +"       XMLTABLE( " 
				 +"       'for $i in $pet/pim_entry/entry    let $completionDate := $i//Completion_Date  return   <out>   <img>{if(count($i/Image_Sec_Spec/Images//*) gt 0) then \"Y\" else \"N\"}</img>   <sample>{if(count($i/Image_Sec_Spec/Sample//*) gt 0) then \"Y\" else \"N\"}</sample>   <completion_date>{$completionDate}</completion_date>  </out>' " 
				 +"       passing pet.xml_data AS \"pet\" columns Vendor_Image VARCHAR2(1) path " 
				 +"       '/out/img', Vendor_Sample                          VARCHAR2(1) path " 
				 +"       '/out/sample', completion_date                     VARCHAR2(10) path " 
				 +"       '/out/completion_date') s " 
				 +"     WHERE " 
				 +"       flag              = 'false' " 
				 +"     AND pet.mdmid       = aic.mdmid " 
				 +"     AND pet.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"     AND aic.MOD_DTM     = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"     AND aic.MDMID       =inp.ORIN " 
				 +"     AND aic.Entry_type IN ('SKU', 'Style', 'StyleColor','Complex Pack','PackColor') " 
				 +"   ) " 
				 +"   , " 
				 +"   ItemSupplier AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       i.PARENT_MDMID, " 
				 +"       i.MDMID, " 
				 +"       i.DESCRIPTION, " 
				 +"       i.PRIMARY_SUPPLIER_ID, " 
				 +"       i.dept_id, " 
				 +"       s.SITE_NAME, " 
				 +"       i.ENTRY_TYPE, " 
				 +"       s.VenId, " 
				 +"       i.Class_Id, " 
				 +"       s.OmnichannelIndicator, " 
				 +"       s.VenName, " 
				 +"       sup.XML_DATA, " 
				 +"       Vendor_Image, " 
				 +"       Vendor_Sample, " 
				 +"       i.Vendor_Sytle, " 
				 +"       completion_date " 
				 +"     FROM " 
				 +"       Items i, " 
				 +"       VENDORPORTAL.ADSE_SUPPLIER_CATALOG sup, " 
				 +"       XMLTABLE('for $i in $XML_DATA/pim_entry/entry       return $i' passing " 
				 +"       sup.xml_data AS \"XML_DATA\" COLUMNS Id          VARCHAR2(20) path " 
				 +"       'Supplier_Ctg_Spec/Id', VenName                VARCHAR2(20) path " 
				 +"       'Supplier_Ctg_Spec/Name', VenId                VARCHAR2(20) path " 
				 +"       'Supplier_Ctg_Spec/VEN_Id', SITE_NAME          VARCHAR2(50) path " 
				 +"       'Supplier_Ctg_Spec/Name', OmnichannelIndicator VARCHAR(2) path " 
				 +"       'if (Supplier_Site_Spec/Omni_Channel/Omni_Channel_Indicator eq \"true\") then \"Y\" else \"N\"' " 
				 +"       ) s " 
				 +"     WHERE " 
				 +"       sup.MOD_DTM             = '01-JAN-00 12.00.00.000000000 PM' " 
				 +"     AND i.PRIMARY_SUPPLIER_ID = sup.MDMID " 
				 +"   ) " 
				 +" SELECT " 
				 +"   i.MDMID ORIN, " 
				 +"   i.dept_id, " 
				 +"   VenName Vendor_Name, " 
				 +"   i.Vendor_Sytle Style_Id, " 
				 +"   i.Class_Id, " 
				 +"   i.VenId Vendor_Id, " 
				 +"   i.DESCRIPTION, " 
				 +"   i.OmnichannelIndicator OMNIChannel_Vendor, " 
				 +"   Vendor_Image, " 
				 +"   Vendor_Sample, " 
				 +"   i.ENTRY_TYPE, " 
				 +"   completion_date " 
				 +" FROM " 
				 +"   ItemSupplier i, " 
				 +"   TypeIndex t " 
				 +" WHERE " 
				 +"   i.ENTRY_TYPE = t.typ " 
				 +" ORDER BY " 
				 +"   i.Parent_MDMID, " 
				 +"   t.indx " ;
		
		System.out.println(query);
	}

	
	


	public static void getComplexPackPetHistory(String orinNumber){	
		
		String query = " WITH " 
				 +" INPUT( ORIN) as (    Select '"+100132090+"'   ORIN FROM dual),     " 
				 +" TypeIndex(indx, typ) as  " 
				 +" ( " 
				 +" (Select 1 indx, 'Style' typ  from  dual)  " 
				 +" union (Select 2 indx, 'StyleColor' typ  from  dual)  " 
				 +" union (select 3 indx, 'SKU' typ from dual) " 
				 +" union (select 4 indx, 'Complex Pack' typ from dual) " 
				 +" union (select 5 indx, 'PackColor' typ from dual) " 
				 +" )      " 
				 +" select               " 
				 +" aic.MDMID ORIN,  " 
				 +" nvl(aic.PARENT_MDMID, aic.MDMID) Style,              " 
				 +" Name Style_Name,  " 
				 +" Brand,  " 
				 +" priority,  " 
				 +" aic.ENTRY_TYPE      " 
				 +" from  " 
				 +" VENDORPORTAL.ADSE_ITEM_CATALOG aic,  " 
				 +" XMLTABLE('for $i in $XML_DATA/pim_entry/entry return <out> <brand>{$i/Item_UDA_Spec/Brand}</brand> </out>'  " 
				 +" passing aic.XML_DATA as \"XML_DATA\"          " 
				 +" columns          " 
				 +" Brand varchar(10) path '/out/brand') i,  " 
				 +" VENDORPORTAL.ADSE_PET_CATALOG pet,   " 
				 +" XMLTABLE('for $pet in $pets/pim_entry/entry return <out> <name>{$pet/Pet_Ctg_Spec/Name}</name> <priority>{$pet/Pet_Ctg_Spec/PO_Number}</priority> </out>'     passing pet.xml_data AS \"pets\"       " 
				 +" Columns      " 
				 +" Name VARCHAR2(20) path '/out/name',     " 
				 +" priority varchar2(10) path '/out/priority') p,  " 
				 +" Input inp      " 
				 +" where       " 
				 +" aic.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM'  " 
				 +" and aic.mdmid = pet.mdmid      " 
				 +" and pet.MOD_DTM = '01-JAN-00 12.00.00.000000000 PM'          " 
				 +" and aic.mdmid = inp.ORIN  " 
				 +" and aic.Entry_Type IN ('Style','Complex Pack') " ;
		
		System.out.println(query);
	}
	
	
	public static void getComplexPackProductAttributes(String categoryId , String styleID){
		
		String query = " WITH " 
				 +" Input(CategoryID, StyleID)  " 
				 +" AS  " 
				 +" ( SELECT  '"+categoryId+"' CategoryID, '"+styleID+"' StyleID FROM dual ) " 
				 +"  " 
				 +" ,attribfieldvalue AS( " 
				 +" select   " 
				 +" A.ATTRIBUTE_ID, A.CATEGORY_ID, A.ATTRIBUTE_NAME, A.ATTRIBUTE_FIELD_TYPE, A.MAPPING_KEY, A.ATTRIBUTE_PATH,  " 
				 +" SUBSTR(A.ATTRIBUTE_PATH,0,INSTR(A.ATTRIBUTE_PATH,'/')-1) PARENT_NODE, " 
				 +" SUBSTR(A.ATTRIBUTE_PATH,INSTR(A.ATTRIBUTE_PATH,'/')+1 ,LENGTH(A.ATTRIBUTE_PATH)) CHILD_NODE, " 
				 +" A.ATTRIBUTE_STATUS, " 
				 +" A.DISPLAY_NAME, A.IS_DISPLAYABLE, A.IS_EDITABLE, A.IS_MANDATORY, A.HTML_DISPLAY_DESC, A.MAX_OCCURANCE, A.ATTRIBUTE_TYPE,  " 
				 +" A.ATTRIBUTE_FIELD_VALUE,IP.StyleID  " 
				 +" from  " 
				 +" VENDORPORTAL.PET_ATTRIBUTE A, INPUT IP " 
				 +" WHERE Category_Id=IP.CategoryID " 
				 +" AND " 
				 +" ATTRIBUTE_PATH LIKE 'sec_spec_%')	 " 
				 +"  " 
				 +" SELECT " 
				 +" APC.MDMID,s.SEC_SPEC_VALUE, afv.ATTRIBUTE_ID, afv.CATEGORY_ID, afv.ATTRIBUTE_NAME, afv.ATTRIBUTE_FIELD_TYPE, afv.MAPPING_KEY, afv.ATTRIBUTE_PATH,  " 
				 +" afv.ATTRIBUTE_STATUS, " 
				 +" afv.DISPLAY_NAME, afv.IS_DISPLAYABLE, afv.IS_EDITABLE, afv.IS_MANDATORY, afv.HTML_DISPLAY_DESC, afv.MAX_OCCURANCE, afv.ATTRIBUTE_TYPE,  " 
				 +" afv.ATTRIBUTE_FIELD_VALUE " 
				 +" FROM  " 
				 +" attribfieldvalue afv, VENDORPORTAL.ADSE_PET_CATALOG APC, " 
				 +" XMLTABLE(' " 
				 +" <category> " 
				 +" <data>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/*[ends-with(name(),$PARENT_NODE)]/*[ends-with(name(),$CHILD_NODE)] " 
				 +" return " 
				 +"   if (not( ($j) is ($XML_DATA/pim_entry/entry/*[ends-with(name(),$PARENT_NODE)]/*[ends-with(name(),$CHILD_NODE)][last()])[1] ) and not(empty($j)) and not($j = \"\")) then  " 
				 +" 					   concat($j, \"|\") " 
				 +" 					else " 
				 +" 					   string($j) " 
				 +"    } " 
				 +"    </data>  " 
				 +"    </category> " 
				 +" 	 ' " 
				 +"    passing " 
				 +"       APC.xml_data AS \"XML_DATA\",afv.PARENT_NODE as \"PARENT_NODE\", afv.CHILD_NODE AS \"CHILD_NODE\" " 
				 +"       COLUMNS  " 
				 +"     SEC_SPEC_VALUE VARCHAR(100) path '/category/data') s " 
				 +" WHERE  " 
				 +" APC.MDMID=afv.STYLEID " ;
System.out.println(query);
	}
	
	/**
	 * Gets the complex pack product info.
	 *
	 * @param orinNumber the orin number
	 * @return the complex pack product info
	 */
	public static void getComplexPackProductInfo(String orinNumber){
		 String query = " WITH " 
				 +"   INPUT(ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       '"+orinNumber+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   , " 
				 +"   TypeIndex(indx, typ) AS ( " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       1 indx, " 
				 +"       'Style' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       2 indx, " 
				 +"       'StyleColor' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +" UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       3 indx, " 
				 +"       'SKU' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       4 indx, " 
				 +"       'Complex Pack' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   UNION " 
				 +"   ( " 
				 +"     SELECT " 
				 +"       5 indx, " 
				 +"       'PackColor' typ " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ) " 
				 +"   ) " 
				 +" SELECT " 
				 +"   NVL(aic.PARENT_MDMID, aic.MDMID) Style_Id, " 
				 +"   aic.MDMID ORIN_NUM, " 
				 +"   i2.ProductName Product_Name, " 
				 +"   i2.ProductDescription DESCRIPTION, " 
				 +"   aic.Entry_Type " 
				 +" FROM " 
				 +"   VENDORPORTAL.ADSE_ITEM_CATALOG aic, " 
				 +"   XMLTABLE( " 
				 +"   'for $i in $XML_DATA/pim_entry/entry            let $uda80 := (fn:count($i/Item_UDA_Spec/UDA/Id) gt 0 and $i/Item_UDA_Spec/UDA/Id eq \"80\"),  $non_sellable_pack := (fn:count($i/Item_Complex_Pack_Spec/Sellable_Flag/text()) gt 0 and        ($i/Item_Complex_Pack_Spec/Sellable_Flag eq \"false\")),               $removal := $i/Item_Ctg_Spec/System/Removal_Flag eq \"true\"     return  <out>                <dept_id>{fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path,\"\\||///\")[5]}</dept_id>    <supplier_id>{$i/Item_Ctg_Spec/Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>   <desc>{$i/Item_Ctg_Spec/Description/Long}</desc>   <flag>{$uda80 and $non_sellable_pack and $removal}</flag>   </out>' " 
				 +"   passing aic.XML_DATA AS \"XML_DATA\" columns flag VARCHAR(10) path '/out/flag', " 
				 +"   supplier_id                                     VARCHAR2(20) path " 
				 +"   '/out/supplier_id', deptid                      VARCHAR2(20) path " 
				 +"   '/out/dept_id', descr                           VARCHAR2(64) path '/out/desc' " 
				 +"   ) i, " 
				 +"   Input inp, " 
				 +"   VENDORPORTAL.ADSE_PET_CATALOG aic2, " 
				 +"   XMLTABLE( " 
				 +"   'for $i in $XML_DATA/pim_entry/entry        return  <out>   <prod_name>{$i//Product_Name}</prod_name>  <prod_desc>{$i//Product_Description}</prod_desc>    </out>' " 
				 +"   passing aic2.XML_DATA AS \"XML_DATA\" columns ProductName VARCHAR2(40) path " 
				 +"   '/out/prod_name', ProductDescription                    VARCHAR2(40) path " 
				 +"   '/out/prod_desc') i2 " 
				 +" WHERE " 
				 +"   flag                              = 'false' " 
				 +" AND aic.MOD_DTM                     = '01-JAN-00 12.00.00.000000000 PM' " 
				 +" AND aic.MDMID                       =inp.ORIN " 
				 +" AND aic.Entry_type                 IN ('SKU', 'StyleColor', 'Style','Complex Pack','PackColor') " 
				 +" AND aic2.MOD_DTM                    = '01-JAN-00 12.00.00.000000000 PM' " 
				 +" AND aic2.Entry_type                 IN ('Style','ComplexPack') " 
				 +" AND NVL(aic.PARENT_MDMID, aic.MDMID)=aic2.mdmid " ;
System.out.println(query);
	}
	
	public static void converQuery(){
		String fileName = "Query.txt";
		   String line = null;
		try {
			
         // FileReader reads text files in the default encoding.
         FileReader fileReader = 
             new FileReader(fileName);

         // Always wrap FileReader in BufferedReader.
         BufferedReader bufferedReader = 
             new BufferedReader(fileReader);

         while((line = bufferedReader.readLine()) != null) {
           //  System.out.println(line);
        	 int val =  line.indexOf("--");
        	 String strFinal=line;
        	// System.out.println(val);
        	 if(val > 0){
        		 strFinal =  strFinal.substring(0, val);
        	 } else if (val == 0){
        		 strFinal = "";
        	 }
        	
              strFinal = " +\" "+strFinal+" \" ";
             System.out.println(strFinal);
         }   

         // Always close files.
         bufferedReader.close();         
     }
     catch(FileNotFoundException ex) {
         System.out.println(
             "Unable to open file '" + 
             fileName + "'");                
     }
     catch(IOException ex) {
         System.out.println(
             "Error reading file '" 
             + fileName + "'");                  
         // Or we could just do this: 
         // ex.printStackTrace();
     }
	}
	
	
	public static void getAdvSearchQuery(String depts, String completionFrom, String completionTo, String imageStatus,
			String contentStatus, String petStatus, String requestType, String orin, String vendorStyle, String classes, String createdToday, String vendor){
		
		 final String GET_STYLE_INFORMATION_XQUERY= " WITH " 
		            +"  Input(Depts, CompletionFrom, CompletionTo, ImageStatus, ContentStatus, PETStatus, RequestType, ORIN, VENDOR_STYLE, classes, createdToday, vendor) AS "
		            +"  (SELECT "
		            + (depts)
		            +"  Depts, "
		            + (completionFrom)
		            +"   CompletionFrom, "
		            + (completionTo)
		            +"   CompletionTo, "
		            + (imageStatus)
		            +"   ImageStatus, "
		            + (contentStatus)
		            +"   ContentStatus, "
		            + (petStatus)
		            +"   PETStatus, "
		            + (requestType)
		            +"   RequestType, "
		            + (orin)
		            +"   ORIN, "
		            + (vendorStyle)
		            +"   VENDOR_STYLE, "
		            + (classes)
		            +"    classes, "
		            + (createdToday)
		              +"    createdToday, "
		            + (vendor)
		            +" vendor "
		            +"     FROM "
		            +"       dual "
		            +"   ) "
		            +"    , "
		            +"   TypeIndex(indx, typ) AS ( " 
		            +"     (    SELECT 1 indx, 'Style' typ From dual) UNION " 
		            +"     (    SELECT 2 indx, 'StyleColor' typ From dual) UNION " 
		            +"      " 
		            +"     (    SELECT 4 indx, 'Complex Pack' typ From dual) " 
		            +"   ), " 
		            +"   entryTypeStyleList AS " 
		            +"   ( " 
		            +"     SELECT " 
		            +"       PARENT_MDMID, " 
		            +"       MDMID, " 
		            +"       XML_DATA, " 
		            +"       ENTRY_TYPE, " 
		            +"       MOD_DTM, " 
		            +"       PRIMARY_UPC " 
		            +"     FROM " 
		            +"       VENDORPORTAL.ADSE_Item_CATALOG " 
		            +"     WHERE " 
		            +"       ENTRY_TYPE = 'Style' " 
		            +"      " 
		            +"   ) " 
		            +"  , " 
		            +"  entryTypeComplexList AS " 
		            +"   ( " 
		            +"     SELECT " 
		            +"       PARENT_MDMID, " 
		            +"       MDMID, " 
		            +"       XML_DATA, " 
		            +"       ENTRY_TYPE, " 
		            +"       MOD_DTM, " 
		            +"       PRIMARY_UPC " 
		            +"     FROM " 
		            +"       VENDORPORTAL.ADSE_Item_CATALOG " 
		            +"     WHERE " 
		            +"       ENTRY_TYPE = 'Complex Pack' " 
		            +"      " 
		            +"   ) " 
		            +"  , " 
		            +"   itemGroupA as( " 
		            +"     SELECT " 
		            +"       PARENT_MDMID, " 
		            +"       MDMID, " 
		            +"       XML_DATA, " 
		            +"       ENTRY_TYPE, " 
		            +"       MOD_DTM, " 
		            +"       PRIMARY_UPC " 
		            +"     FROM " 
		            +"       ( " 
		            +"       ( " 
		            +"         SELECT " 
		            +"           PARENT_MDMID, " 
		            +"           MDMID, " 
		            +"           XML_DATA, " 
		            +"           ENTRY_TYPE, " 
		            +"           MOD_DTM, " 
		            +"           PRIMARY_UPC " 
		            +"         FROM " 
		            +"           entryTypeStyleList " 
		            +"       ) " 
		            +"     UNION ALL " 
		            +"       ( " 
		            +"         SELECT " 
		            +"           PARENT_MDMID, " 
		            +"           MDMID, " 
		            +"           XML_DATA, " 
		            +"           ENTRY_TYPE, " 
		            +"           MOD_DTM, " 
		            +"           PRIMARY_UPC " 
		            +"         FROM " 
		            +"           VENDORPORTAL.ADSE_ITEM_CATALOG " 
		            +"         WHERE " 
		            +"               PARENT_MDMID IN " 
		            +"               ( " 
		            +"                 SELECT " 
		            +"                   MDMID " 
		            +"                 FROM " 
		            +"                   entryTypeStyleList " 
		            +"               ) " 
		            +"            AND ENTRY_TYPE IN ('StyleColor') " 
		            +"          " 
		            +"       ) " 
		            +"      " 
		            +"       ) " 
		            +"       ) " 
		            +"       , " 
		            +"        " 
		            +"   itemGroup as( " 
		            +"     SELECT " 
		            +"        " 
		            +"       PARENT_MDMID, " 
		            +"       MDMID, " 
		            +"       XML_DATA, " 
		            +"       ENTRY_TYPE, " 
		            +"       MOD_DTM, " 
		            +"       PRIMARY_UPC " 
		            +"     FROM " 
		            +"       ( " 
		            +"       ( " 
		            +"         SELECT " 
		            +"           PARENT_MDMID, " 
		            +"           MDMID, " 
		            +"           XML_DATA, " 
		            +"           ENTRY_TYPE, " 
		            +"           MOD_DTM, " 
		            +"           PRIMARY_UPC " 
		            +"         FROM " 
		            +"           itemGroupA " 
		            +"       ) " 
		            +"     UNION ALL " 
		            +"       ( " 
		            +"         SELECT " 
		            +"           PARENT_MDMID, " 
		            +"           MDMID, " 
		            +"           XML_DATA, " 
		            +"           ENTRY_TYPE, " 
		            +"           MOD_DTM, " 
		            +"           PRIMARY_UPC " 
		            +"         FROM " 
		            +"           entryTypeComplexList " 
		            +"            " 
		            +"       ) " 
		            +"      ) " 
		            +"     ) " 
		            +"    " 
		            +"      " 
		            +"      " 
		            +"      " 
		            +"  ,styleID_DescA AS( " 
		            +"    " 
		            +"     SELECT " 
		            +"       sl.PARENT_MDMID, " 
		            +"       sl.MDMID, " 
		            +"       sl.XML_DATA, " 
		            +"       sl.ENTRY_TYPE, " 
		            +"       sl.PRIMARY_UPC, " 
		            +"       ia.COLO_DESC, " 
		            +"       ia.COLO_CODE, " 
		            +"       ia.COLO_CODE_SC, " 
		            +"       ia.STYLE_ID_SC, " 
		            +"       ia.Supplier_Id, " 
		            +"       ia.DEPT_ID, " 
		            +"       ia.PRODUCT_NAME, " 
		            +"       ia.ven_style, " 
		            +"       ia.clsId, " 
		            +"       inp.PETStatus INPUTPETSTATUS, " 
		            +"       inp.VENDOR_STYLE VSTYLE, " 
		            +"       inp.classes, " 
		            +"       inp.CompletionFrom,inp.CompletionTo,inp.ImageStatus,inp.ContentStatus inpContentStatus,inp.RequestType,inp.createdToday " 
		            +"        " 
		            +"        " 
		            +"        " 
		            +"        " 
		            +"            " 
		            +"     FROM " 
		            +"       itemGroup sl, " 
		            +"       XMLTABLE( " 
		            +"       'for $i in $XML_DATA/pim_entry/entry   " 
		            +"       let  " 
		            +"       $colorcodeStyleColor := $i//Item_StyleColor_Spec/Color_Code/text(), " 
		            +"       $styleIdStyleColor := $i//Item_StyleColor_Spec/Style_Id/text(), " 
		            +"       $colorcode := $i//Item_Style_Spec/Differentiators[Type eq \"COLOR\"]/Codes/Code, " 
		            +"       $colordesc := $i//Item_Style_Spec/Differentiators[Type eq \"COLOR\"]/Codes/Vendor_Description, " 
		            +"      " 
		            +"      " 
		            +"      " 
		            +"       $removalFlag := $i//System/Removal_Flag eq \"true\", " 
		            +"       $PRODUCT_NAME := $i//Product_Name/text(),  " 
		            +"       $ven_style := $i//Vendor_Style/text(),  " 
		            +"       $marchant_id := fn:tokenize($i/../item_header/category_paths/category[fn:starts-with(path, \"Merchandise_Hierarchy\")]/path, \"\\||///\") " 
		            +"        " 
		            +"       return   " 
		            +"       <out> " 
		            +"         <COLO_CODE_SC>{$colorcodeStyleColor}</COLO_CODE_SC> " 
		            +"         <STYLE_ID_SC>{$styleIdStyleColor}</STYLE_ID_SC> " 
		            +"     " 
		            +"         <COLO_CODE>{$colorcode}</COLO_CODE> " 
		            +"         <COLO_DESC>{$colordesc}</COLO_DESC>  " 
		            +"          " 
		            +"       <supplier_id>{$i//Supplier[Primary_Flag eq \"true\"]/Id}</supplier_id>  " 
		            +"       <DEPT_ID>{$marchant_id[5]}</DEPT_ID>  " 
		            +"       <cls_id>{$marchant_id[6]}</cls_id>   " 
		            +"       <PRODUCT_NAME>{$PRODUCT_NAME}</PRODUCT_NAME>  " 
		            +"       <ven_style>{$ven_style}</ven_style>  " 
		            +"       <flag>{$removalFlag}</flag> " 
		            +"       </out>' " 
		            +"       passing sl.XML_DATA AS \"XML_DATA\" columns  " 
		            +"       COLO_DESC VARCHAR(100) path '/out/COLO_DESC', " 
		            +"       COLO_CODE VARCHAR(100) path '/out/COLO_CODE', " 
		            +"       COLO_CODE_SC VARCHAR(10) path '/out/COLO_CODE_SC', " 
		            +"       STYLE_ID_SC VARCHAR(10) path '/out/STYLE_ID_SC', " 
		            +"       supplier_id  VARCHAR2(20) path '/out/supplier_id', " 
		            +"       DEPT_ID  VARCHAR2(60) path '/out/DEPT_ID', " 
		            +"       clsId VARCHAR(10) path  '/out/cls_id', " 
		            +"       PRODUCT_NAME VARCHAR(100) path '/out/PRODUCT_NAME', " 
		            +"       ven_style VARCHAR2(100) path '/out/ven_style', " 
		            +"       flag VARCHAR(10) path '/out/flag') ia, " 
		            +"       Input inp " 
		            +"        " 
		            +"        " 
		            +"     WHERE " 
		            +"       flag = 'false' " 
		            +"     AND " 
		            +"       ( " 
		            +"         depts   IS NULL " 
		            +"       OR DEPT_ID IN " 
		            +"         ( " 
		            +"           SELECT " 
		            +"             regexp_substr(depts,'[^,]+',1,LEVEL) " 
		            +"           FROM " 
		            +"             dual " 
		            +"             CONNECT BY regexp_substr(depts,'[^,]+',1,LEVEL) IS NOT NULL " 
		            +"         ) " 
		            +"       ) " 
		            +"     AND " 
		            +"       ( " 
		            +"         ORIN         IS NULL " 
		            +"       OR MDMID        = ORIN " 
		            +"       OR Parent_MDMID = ORIN " 
		            +"       ) " 
		            +"     AND " 
		            +"       ( " 
		            +"         vendor is NULL " 
		            +"         OR Supplier_Id = vendor " 
		            +"       ) " 
		            +"    ) " 
		            +"     " 
		            +"     " 
		            +"     " 
		            +"     " 
		            +"     " 
		            +" ,finalList AS( " 
		            +"     SELECT " 
		            +"  " 
		            +"       sda.PARENT_MDMID, " 
		            +"       sda.MDMID, " 
		            +"       sda.XML_DATA, " 
		            +"       sda.ENTRY_TYPE, " 
		            +"       sda.PRIMARY_UPC, " 
		            +"       sda.COLO_DESC, " 
		            +"       sda.COLO_CODE, " 
		            +"       sda.COLO_CODE_SC, " 
		            +"       sda.STYLE_ID_SC, " 
		            +"       sda.Supplier_Id, " 
		            +"       sda.DEPT_ID, " 
		            +"       sda.PRODUCT_NAME, " 
		            +"       sda.ven_style, " 
		            +"       sda.clsId, " 
		            +"       sda.INPUTPETSTATUS, " 
		            +"       sda.VSTYLE, " 
		            +"       sda.classes, " 
		            +"       sda.CompletionFrom,sda.CompletionTo,sda.ImageStatus,sda.inpContentStatus,sda.RequestType,sda.createdToday, " 
		            +"        " 
		            +"   p.completion_date, " 
		            +"   p.req_type, " 
		            +"   img.thevalue ImageState, " 
		            +"   cont.thevalue CONTENTSTATUS, " 
		            +"   petStatus.thevalue PETSTATUS, " 
		            +"   petStatus.mdmid petMdmid " 
		            +"        " 
		            +" FROM " 
		            +"   styleID_DescA sda, " 
		            +"   VENDORPORTAL.ADSE_PET_CATALOG pet, " 
		            +"   XMLTABLE( " 
		            +"   'for $pet in $pets/pim_entry/entry      let $completionDate := $pet//Completion_Date,  $imageState := $pet//ImageState,  $contentState := $pet//ContentState     return <out>        <id>{$pet/Pet_Ctg_Spec/Id}</id>       <completion_date>{$completionDate}</completion_date>     <imageState>{$imageState}</imageState>   <imageContainer>{fn:data($imageState/@container)}</imageContainer>    <contentState>{$contentState}</contentState>   <contentContainer>{fn:data($contentState/@container)}</contentContainer>     <state>{$pet//State}</state>     <stateContainer>{data($pet//State/@container)}</stateContainer>     <req_type>{$pet//SourceSystem}</req_type>      </out>' " 
		            +"   passing pet.xml_data AS \"pets\" Columns Id VARCHAR2(20) path '/out/id', " 
		            +"   completion_date                           VARCHAR2(10) path " 
		            +"   '/out/completion_date', imageState        VARCHAR2(20) path '/out/imageState' " 
		            +"   , imageContainer                          VARCHAR2(100) path " 
		            +"   '/out/imageContainer', contentState       VARCHAR2(20) path " 
		            +"   '/out/contentState', contentContainer     VARCHAR2(40) PATH " 
		            +"   '/out/contentContainer', state            VARCHAR2(40) path '/out/state', " 
		            +"   stateContainer                            VARCHAR2(50) path " 
		            +"   '/out/stateContainer', req_type           VARCHAR2(20) path '/out/req_type') " 
		            +"   p, " 
		            +"   TypeIndex typInd, " 
		            +"   VENDORPORTAL.adse_reference_data img, " 
		            +"   VENDORPORTAL.adse_reference_data cont, " 
		            +"   VENDORPORTAL.adse_reference_data petStatus " 
		            +" WHERE " 
		            +"   sda.MDMID     =pet.mdmid " 
		            +" AND sda.ENTRY_TYPE = typInd.typ " 
		            +"  " 
		            +"  " 
		            +" AND " 
		            +"   ( " 
		            +"     CompletionFrom IS NULL " 
		            +"   OR completion_date   >=CompletionFrom " 
		            +"   ) " 
		            +" AND " 
		            +"   ( " 
		            +"     CompletionTo IS NULL " 
		            +"   OR completion_date <=CompletionTo " 
		            +"   ) " 
		            +" AND " 
		            +"   ( " 
		            +"     ImageStatus IS NULL " 
		            +"   OR img.thevalue   IN " 
		            +"     ( " 
		            +"       SELECT " 
		            +"         regexp_substr(ImageStatus,'[^,]+',1,LEVEL) " 
		            +"       FROM " 
		            +"         dual " 
		            +"         CONNECT BY regexp_substr(ImageStatus,'[^,]+',1,LEVEL) IS NOT NULL " 
		            +"     ) " 
		            +"   ) " 
		            +" AND " 
		            +"   ( " 
		            +"     inpContentStatus IS NULL " 
		            +"   OR cont.thevalue    IN " 
		            +"     ( " 
		            +"       SELECT " 
		            +"         regexp_substr(inpContentStatus,'[^,]+',1,LEVEL) " 
		            +"       FROM " 
		            +"         dual " 
		            +"         CONNECT BY regexp_substr(inpContentStatus,'[^,]+',1,LEVEL) IS NOT NULL " 
		            +"     ) " 
		            +"   ) " 
		            +"  " 
		            +" AND " 
		            +"   ( " 
		            +"     RequestType IS NULL " 
		            +"   OR Req_Type       IN " 
		            +"     ( " 
		            +"       SELECT " 
		            +"         regexp_substr(RequestType,'[^,]+',1,LEVEL) " 
		            +"       FROM " 
		            +"         dual " 
		            +"         CONNECT BY regexp_substr(RequestType,'[^,]+',1,LEVEL) IS NOT NULL " 
		            +"     ) " 
		            +"   ) " 
		            +" AND " 
		            +"   ( " 
		            +"     createdToday                           IS NULL   " 
		            +"   OR createdToday                          <>'yes' " 
		            +"   OR to_date(SUBSTR(pet.CREATED_DTM, 1, 9), 'YYYY-MM-DD') = to_date(SUBSTR(CURRENT_TIMESTAMP, 1, 9), 'YYYY-MM-DD') " 
		            +"   ) " 
		            +" AND img.mdmid           =p.imageState " 
		            +" AND img.entry_type      =p.imageContainer " 
		            +" AND cont.mdmid          =p.ContentState " 
		            +" AND cont.entry_type     =p.contentContainer " 
		            +" AND petStatus.mdmid     =p.state " 
		            +" AND petStatus.entry_type=p.stateContainer " 
		            +"  " 
		            +"  " 
		            +" ) " 
		            +"   " 
		            +"  " 
		            +"     " 
		            +"    , styleID_Desc AS( " 
		            +"     " 
		            +"     SELECT DISTINCT  " 
		            +"       sia.PARENT_MDMID, " 
		            +"       sia.MDMID, " 
		            +"        " 
		            +"       sia.ENTRY_TYPE, " 
		            +"       ias.COLO_DESC, " 
		            +"       ias.COLO_CODE, " 
		            +"       sia.COLO_CODE_SC, " 
		            +"       sia.STYLE_ID_SC, " 
		            +"       sia.Supplier_Id, " 
		            +"       sia.DEPT_ID, " 
		            +"       sia.PRODUCT_NAME, " 
		            +"       sia.ven_style, " 
		            +"       sia.PRIMARY_UPC, " 
		            +"       sia.clsId, " 
		            +"       sia.INPUTPETSTATUS, " 
		            +"       sia.VSTYLE, " 
		            +"       sia.classes, " 
		            +"        " 
		            +"        " 
		            +"       sia.completion_date, " 
		            +"       sia.req_type, " 
		            +"       sia.ImageState, " 
		            +"       sia.CONTENTSTATUS, " 
		            +"       sia.PETSTATUS, " 
		            +"     sia.petMdmid " 
		            +"     from finalList sia, " 
		            +"     XMLTABLE( " 
		            +"       'for $j in $XML_DATA/pim_entry/entry/Item_Style_Spec/Differentiators[Type eq \"COLOR\"]/Codes " 
		            +"        " 
		            +"       let  " 
		            +"         $colorcode := $j//Code, " 
		            +"       $colordesc := $j//Vendor_Description " 
		            +"      " 
		            +"       return   " 
		            +"       <out> " 
		            +"         <COLO_CODE>{$colorcode}</COLO_CODE> " 
		            +"         <COLO_DESC>{$colordesc}</COLO_DESC>  " 
		            +"       </out>' " 
		            +"       passing sia.XML_DATA AS \"XML_DATA\" columns  " 
		            +"       COLO_DESC VARCHAR(100) path '/out/COLO_DESC', " 
		            +"       COLO_CODE VARCHAR(100) path '/out/COLO_CODE') ias " 
		            +"     where  " 
		            +"     sia.Entry_Type='Style'  " 
		            +"      " 
		            +"     AND  " 
		            +"         (((sia.INPUTPETSTATUS = '05') AND sia.petMdmid in ('05' )) " 
		            +"     OR " 
		            +"       ((sia.INPUTPETSTATUS = '01')  AND sia.petMdmid in ('01' )) " 
		            +"     OR  " 
		            +"         ((sia.INPUTPETSTATUS = '06')    AND sia.petMdmid in ('06' )) " 
		            +"     OR  " 
		            +"         ((sia.INPUTPETSTATUS   IS NULL)     AND sia.petMdmid in ('01','05','06')) " 
		            +"     ) " 
		            +"      " 
		            +"  " 
		            +"    UNION ALL  " 
		            +"       select finalAll.PARENT_MDMID, " 
		            +"       finalAll.MDMID, " 
		            +"        " 
		            +"       finalAll.ENTRY_TYPE, " 
		            +"       finalAll.COLO_DESC, " 
		            +"       finalAll.COLO_CODE, " 
		            +"       finalAll.COLO_CODE_SC, " 
		            +"       finalAll.STYLE_ID_SC, " 
		            +"       finalAll.Supplier_Id, " 
		            +"       finalAll.DEPT_ID, " 
		            +"       finalAll.PRODUCT_NAME, " 
		            +"       finalAll.ven_style,finalAll.PRIMARY_UPC,finalAll.clsId,finalAll.INPUTPETSTATUS, " 
		            +"       finalAll.VSTYLE, " 
		            +"       finalAll.classes, " 
		            +"        " 
		            +"       finalAll.completion_date, " 
		            +"       finalAll.req_type, " 
		            +"       finalAll.ImageState, " 
		            +"       finalAll.CONTENTSTATUS, " 
		            +"       finalAll.PETSTATUS, " 
		            +"     finalAll.petMdmid " 
		            +"        " 
		            +"       from finalList finalAll where finalAll.entry_type in ('StyleColor'/*,'Complex Pack'*/) " 
		            +"        " 
		            +"      " 
		            +"        AND " 
		            +"       finalAll.PARENT_MDMID IN  " 
		            +"        " 
		            +"       (SELECT   " 
		            +"             flst.MDMID           " 
		            +"         FROM finalList flst  WHERE " 
		            +"              " 
		            +"              " 
		            +"              " 
		            +"             flst.ENTRY_TYPE='Style' " 
		            +"         AND  " 
		            +"             (((flst.INPUTPETSTATUS = '05') AND flst.petMdmid in ('05' )) " 
		            +"         OR " 
		            +"             ((flst.INPUTPETSTATUS = '01')   AND flst.petMdmid in ('01' )) " 
		            +"         OR  " 
		            +"             ((flst.INPUTPETSTATUS = '06')   AND flst.petMdmid in ('06' )) " 
		            +"         OR   " 
		            +"             ((flst.INPUTPETSTATUS   IS NULL)    AND flst.petMdmid in ('01','05','06')) " 
		            +"       )) " 
		            +"              " 
		            +"         AND " 
		            +"             (((finalAll.INPUTPETSTATUS = '05') AND finalAll.petMdmid in ('05' )) " 
		            +"       OR " 
		            +"         ((finalAll.INPUTPETSTATUS = '01')   AND finalAll.petMdmid in ('01' )) " 
		            +"       OR  " 
		            +"             ((finalAll.INPUTPETSTATUS = '06')   AND finalAll.petMdmid in ('06' )) " 
		            +"       OR  " 
		            +"       ((finalAll.INPUTPETSTATUS   IS NULL)  AND finalAll.petMdmid in ('01','05','06')) " 
		            +"       ) " 
		            +"      " 
		            +"       ) " 
		            +"      " 
		            +"    " 
		            +"    " 
		            +"  , " 
		            +"  MDMID_ColorList As " 
		            +"  ( " 
		            +"      select /*(a.parent_mdmid || ' ' || a.colo_code_sc) MDMID_COLID,*/ a.parent_mdmid, a.colo_code_sc, b.Colo_desc COL_Desc  " 
		            +"      from styleID_Desc a, styleID_Desc b  " 
		            +"        where  " 
		            +"        a.parent_mdmid = b.mdmid  and  " 
		            +"         a.colo_code_sc = b.colo_code and a.entry_type = 'StyleColor' " 
		            +"          " 
		            +"          " 
		            +"     ) " 
		            +"      " 
		            +"          " 
		            +"   ,orinList AS( " 
		            +"   Select " 
		            +"         a.PARENT_MDMID, " 
		            +"         a.MDMID ORIN_NUM, " 
		            +"        " 
		            +"         a.ENTRY_TYPE, " 
		            +"         x.COL_Desc COLO_DESC, " 
		            +"         a.Supplier_Id, " 
		            +"         a.DEPT_ID, " 
		            +"         a.PRODUCT_NAME, " 
		            +"         a.ven_style, " 
		            +"         a.PRIMARY_UPC, " 
		            +"         a.clsId, " 
		            +"         a.INPUTPETSTATUS, " 
		            +"         a.VSTYLE, " 
		            +"         a.classes, " 
		            +"         a.completion_date, " 
		            +"         a.req_type, " 
		            +"         a.ImageState, " 
		            +"         a.CONTENTSTATUS, " 
		            +"         a.PETSTATUS " 
		            +"          " 
		            +"   From styleID_Desc a, MDMID_ColorList x " 
		            +"   where a.ENTRY_TYPE = 'StyleColor' AND a.parent_mdmid = x.parent_mdmid and a.colo_code_sc = x.colo_code_sc " 
		            +"        " 
		            +"   UNION ALL " 
		            +"        " 
		            +"       Select " 
		            +"       a.PARENT_MDMID, " 
		            +"       a.MDMID ORIN_NUM, " 
		            +"        " 
		            +"       a.ENTRY_TYPE, " 
		            +"       NULL COLO_DESC, " 
		            +"       a.Supplier_Id, " 
		            +"       a.DEPT_ID, " 
		            +"       a.PRODUCT_NAME, " 
		            +"       a.ven_style, " 
		            +"       a.PRIMARY_UPC, " 
		            +"       a.clsId, " 
		            +"       a.INPUTPETSTATUS, " 
		            +"       a.VSTYLE, " 
		            +"       a.classes, " 
		            +"       a.completion_date, " 
		            +"       a.req_type, " 
		            +"       a.ImageState, " 
		            +"       a.CONTENTSTATUS, " 
		            +"       a.PETSTATUS " 
		            +"   From styleID_Desc a where a.ENTRY_TYPE = 'Style' " 
		            +"    " 
		            +"   ) " 
		            +"      " 
		            +"      " 
		            +"      " 
		            +"  ,supplierDetails AS " 
		            +"   ( " 
		            +"     SELECT " 
		            +"       orin.PARENT_MDMID, " 
		            +"       orin.ORIN_NUM, " 
		            +"       orin.ENTRY_TYPE, " 
		            +"       orin.COLO_DESC,  " 
		            +"       orin.DEPT_Id, " 
		            +"       orin.PRODUCT_NAME, " 
		            +"       orin.ven_style, " 
		            +"       orin.Supplier_Id, " 
		            +"       orin.PRIMARY_UPC, " 
		            +"       orin.clsId, " 
		            +"       orin.INPUTPETSTATUS, " 
		            +"       orin.VSTYLE, " 
		            +"       orin.classes, " 
		            +"        " 
		            +"       orin.completion_date, " 
		            +"       orin.req_type, " 
		            +"       orin.ImageState, " 
		            +"       orin.CONTENTSTATUS, " 
		            +"       orin.PETSTATUS, " 
		            +"        " 
		            +"       s.ven_name, " 
		            +"       s.omniChannelIndicator " 
		            +"     FROM " 
		            +"       orinList orin, " 
		            +"       VENDORPORTAL.ADSE_SUPPLIER_CATALOG supplier, " 
		            +"       XMLTABLE( " 
		            +"       'for $supplier in $supplierCatalog/pim_entry/entry/Supplier_Ctg_Spec  let $ven_name := $supplier/Name,  $isOmniChannel := $supplier/../Supplier_Site_Spec/Omni_Channel  return  <out> <ven_name>{$ven_name}</ven_name> <sup>{$supplier/Id}</sup>  <omni_channel>{if($isOmniChannel eq \"true\") then \"Y\" else \"N\"}</omni_channel>  </out>' " 
		            +"       PASSING XMLELEMENT(\"Id\", orin.Supplier_Id) AS \"Suppliers\", " 
		            +"       supplier.XML_DATA                          AS \"supplierCatalog\" columns " 
		            +"       ven_name                          VARCHAR2(80) path '/out/ven_name', omniChannelIndicator VARCHAR2 " 
		            +"       (2) path '/out/omni_channel', sup VARCHAR2(100) path '/out/sup') s " 
		            +"     WHERE " 
		            +"        " 
		            +"     orin.Supplier_Id = supplier.mdmid " 
		            +"   ) " 
		            +"   " 
		            +"    " 
		            +"   SELECT  distinct  " 
		            +"      " 
		            +"       CASE " 
		            +"       WHEN LENGTH(ORIN_NUM) > 9 " 
		            +"         THEN SUBSTR(ORIN_NUM,1,9) " 
		            +"         ELSE ORIN_NUM " 
		            +"       END Parent_Style_Orin, " 
		            +"       CASE " 
		            +"         WHEN LENGTH(ORIN_NUM) > 9 " 
		            +"         THEN SUBSTR(ORIN_NUM,1,9) " 
		            +"           || ' ' " 
		            +"           || SUBSTR(ORIN_NUM,10) " 
		            +"           || ' ' " 
		            +"           || COLO_DESC " 
		            +"         ELSE ORIN_NUM " 
		            +"       END ORIN_NUM, " 
		            +"       DEPT_ID, " 
		            +"       Supplier_Id, " 
		            +"       PRODUCT_NAME, " 
		            +"       ENTRY_TYPE, " 
		            +"       PRIMARY_UPC, " 
		            +"       VEN_NAME, " 
		            +"       VEN_STYLE, " 
		            +"       clsId, " 
		            +"       PETSTATUS, " 
		            +"       ImageState, " 
		            +"       CONTENTSTATUS, " 
		            +"       completion_date, " 
		            +"       omniChannelIndicator, " 
		            +"       req_type " 
		            +"   FROM supplierDetails  " 
		            +"   WHERE  " 
		            +"         (VSTYLE IS NULL) OR " 
		            +"         VEN_STYLE    = VSTYLE " 
		            +"          " 
		            +"         AND " 
		            +"       ( " 
		            +"         classes IS NULL " 
		            +"        OR clsId  IN " 
		            +"         ( " 
		            +"           SELECT " 
		            +"             regexp_substr(classes,'[^,]+',1,LEVEL) " 
		            +"           FROM " 
		            +"             dual " 
		            +"             CONNECT BY regexp_substr(classes,'[^,]+',1,LEVEL) IS NOT NULL " 
		            +"         ) " 
		            +"       ) " 
		            +"   ORDER BY ORIN_NUM  ;";

		 
		 System.out.println(GET_STYLE_INFORMATION_XQUERY);
	}
	
	
	public static void getWorkListQuery(String categoyId, String styleId){
		String str = " WITH Input(CategoryID, StyleID) AS " 
				 +"   ( SELECT '"+categoyId+"' CategoryID, '"+styleId+"' StyleID FROM dual " 
				 +"   ) , " 
				 +"   attribfieldvalue AS " 
				 +"   (SELECT A.ATTRIBUTE_ID, " 
				 +"     A.CATEGORY_ID, " 
				 +"     A.ATTRIBUTE_NAME, " 
				 +"     A.ATTRIBUTE_FIELD_TYPE, " 
				 +"     A.MAPPING_KEY, " 
				 +"     A.ATTRIBUTE_PATH, " 
				 +"     SUBSTR(A.ATTRIBUTE_PATH,0,INSTR(A.ATTRIBUTE_PATH,'/')-1) PARENT_NODE, " 
				 +"     SUBSTR(A.ATTRIBUTE_PATH,INSTR(A.ATTRIBUTE_PATH,'/')  +1 ,LENGTH(A.ATTRIBUTE_PATH)) CHILD_NODE, " 
				 +"     A.ATTRIBUTE_STATUS, " 
				 +"     A.DISPLAY_NAME, " 
				 +"     A.IS_DISPLAYABLE, " 
				 +"     A.IS_EDITABLE, " 
				 +"     A.IS_MANDATORY, " 
				 +"     A.HTML_DISPLAY_DESC, " 
				 +"     A.MAX_OCCURANCE, " 
				 +"     A.ATTRIBUTE_TYPE, " 
				 +"     A.ATTRIBUTE_FIELD_VALUE, " 
				 +"     IP.StyleID " 
				 +"   FROM VENDORPORTAL.PET_ATTRIBUTE A, " 
				 +"     INPUT IP " 
				 +"   WHERE Category_Id=IP.CategoryID " 
				 +"   ) " 
				 +" SELECT APC.MDMID, " 
				 +"   s.SEC_SPEC_VALUE, " 
				 +"   afv.ATTRIBUTE_ID, " 
				 +"   afv.CATEGORY_ID, " 
				 +"   afv.ATTRIBUTE_NAME, " 
				 +"   afv.ATTRIBUTE_FIELD_TYPE, " 
				 +"   afv.MAPPING_KEY, " 
				 +"   afv.ATTRIBUTE_PATH, " 
				 +"   afv.ATTRIBUTE_STATUS, " 
				 +"   afv.DISPLAY_NAME, " 
				 +"   afv.IS_DISPLAYABLE, " 
				 +"   afv.IS_EDITABLE, " 
				 +"   afv.IS_MANDATORY, " 
				 +"   afv.HTML_DISPLAY_DESC, " 
				 +"   afv.MAX_OCCURANCE, " 
				 +"   afv.ATTRIBUTE_TYPE, " 
				 +"   afv.ATTRIBUTE_FIELD_VALUE " 
				 +" FROM attribfieldvalue afv, " 
				 +"   VENDORPORTAL.ADSE_PET_CATALOG APC, " 
				 +"   XMLTABLE('  " 
				 +" <category> " 
				 +" <data>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/*[ends-with(name(),$PARENT_NODE)]/*[ends-with(name(),$CHILD_NODE)] " 
				 +" return   " 
				 +" if (not( ($j) is ($XML_DATA/pim_entry/entry/*[ends-with(name(),$PARENT_NODE)]/*[ends-with(name(),$CHILD_NODE)][last()])[1] ) and not(empty($j)) and not($j = \"\")) then          " 
				 +" concat($j, \"|\")      " 
				 +" else         " 
				 +" string($j)    " 
				 +" }    " 
				 +" </data>     " 
				 +" </category>   " 
				 +" ' passing APC.xml_data AS \"XML_DATA\",afv.PARENT_NODE AS \"PARENT_NODE\", afv.CHILD_NODE AS \"CHILD_NODE\" COLUMNS SEC_SPEC_VALUE VARCHAR(100) path '/category/data') s " 
				 +" WHERE APC.MDMID=afv.STYLEID ; " ;

		 System.out.println(str);

	}
	 
	/**
	 * Gets the IPH query.
	 *
	 * @param orinNumber the orin number
	 * @return the IPH query
	 */
	public static void getIPHQuery(String orinNumber){
		String iphQuery =  " With " 
				 +"  " 
				 +" Input(ORIN) as (Select '"+orinNumber+"' ORIN from dual) " 
				 +"  " 
				 +" select  " 
				 +" pet.mdmid ORIN,  " 
				 +" ias.CATEGORY_ID PET_CATEGORY_ID, " 
				 +" ias.CATEGORY_NAME PET_CATEGORY_NAME, " 
				 +" NULL SUB_CLASS, " 
				 +" NULL MERCH_CATEGORY_ID, " 
				 +" NULL MERCH_CATEGORY_NAME " 
				 +" from Input inp,VENDORPORTAL.ADSE_PET_CATALOG pet, " 
				 +" XMLTABLE( " 
				 +" 'for $j in $XML_DATA/pim_entry/pet_entry_header/category_paths/category " 
				 +" let  " 
				 +" 	    $categoryid := $j//pk, " 
				 +"       $categorydesc := $j//path, " 
				 +"       $categoryname := tokenize(tokenize($j//path, \"///\")[last()],\"-\")[last()], " 
				 +"       $categorytype := tokenize($j//path, \"///\")[1] " 
				 +"       return   " 
				 +" 	 <category> " 
				 +"     <pk>{$categoryid}</pk> " 
				 +"     <path>{$categorydesc}</path> " 
				 +"     <name>{$categoryname}</name> " 
				 +"     <type>{$categorytype}</type> " 
				 +"    </category>' " 
				 +"       PASSING pet.XML_DATA AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     CATEGORY_ID VARCHAR(100) path '/category/pk', " 
				 +" 	  CATEGORY_DESC VARCHAR(100) path '/category/path', " 
				 +"     CATEGORY_NAME VARCHAR(100) path '/category/name', " 
				 +"     CATEGORY_TYPE VARCHAR(100) path '/category/type') ias " 
				 +"     where " 
				 +"     pet.mdmid = inp.ORIN " 
				 +"     AND " 
				 +"     ias.CATEGORY_TYPE = 'Item_Primary_Hierarchy' " 
				 +"     ORDER BY ROWNUM DESC " 
				 +"     FETCH FIRST ROW ONLY " 
				 +"   ;  " ;
				 System.out.println(iphQuery);
	}
	
	public static void getDefectQuery(String orinNumber){
		 String defectQuery = " With " 
				 +"  " 
				 +" Input(ORIN) as (Select '"+orinNumber+"' ORIN from dual), " 
				 +"  " 
				 +" petCatalogDet AS ( " 
				 +" 	select  " 
				 +" 		p.OmniChannelBrand        OmniChannelBrand, " 
				 +" 		p.Product_Description     Product_Description, " 
				 +" 		p.Launch_Date              Launch_Date, " 
				 +" 		p.Belk_Exclusive           Belk_Exclusive,  " 
				 +" 		p.Channel_Exclusive        Channel_Exclusive,  " 
				 +" 		p.SDF                      SDF,  " 
				 +" 		p.Product_Dimensions_UOM   Product_Dimensions_UOM, " 
				 +" 		p.Product_Length           Product_Length, " 
				 +" 		p.Product_Height           Product_Height,  " 
				 +" 		p.Product_Width            Product_Width, " 
				 +" 		p.BOPIS                    BOPIS, " 
				 +" 		p.Gift_Box                 Gift_Box,  " 
				 +" 		p.ImportedOrDomestic       ImportedOrDomestic,  " 
				 +" 		/* Added by VK*/ " 
				 +" 		p.Product_Weight_UOM       Product_Weight_UOM, " 
				 +" 		p.Product_Weight           Product_Weight, " 
				 +"  " 
				 +" 		p.GXS_Long_Description     Long_Description, " 
				 +" 		p.Product_Name        Product_Name, " 
				 +" 		p.PO_Box_Shippable, " 
				 +" 		p.COPY_BULLET, " 
				 +" 		P.Fraud_Quantity, " 
				 +" 		inp.ORIN inpOrin, " 
				 +" 		pet.XML_DATA " 
				 +" 		 " 
				 +" 		/* Added by VK*/  " 
				 +"  " 
				 +" 	from vendorportal.ADSE_PET_CATALOG pet, " 
				 +" 		XMLTable('for $i in $item/pim_entry/entry/* " 
				 +" 				  let $item_type := $i/../../pet_entry_header/category_paths/category[1]/pk " 
				 +" 				  where name($i) eq concat(\"Ecomm_\",$item_type,\"_Spec\") " 
				 +" 				  return $i' " 
				 +" 				  passing pet.XML_DATA as \"item\" " 
				 +" 		columns  " 
				 +" 		OmniChannelBrand varchar2(50) path 'OmniChannelBrand', " 
				 +" 		Product_Description varchar2(60) path 'Product_Description', " 
				 +" 		Launch_Date varchar2(50) path 'Launch_Date', " 
				 +" 		Belk_Exclusive varchar2(10) path 'Belk_Exclusive', " 
				 +" 		Channel_Exclusive varchar2(10) path 'Channel_Exclusive', " 
				 +" 		SDF varchar2(50) path 'Supplier_Direct_Fulfillment', " 
				 +" 		Product_Dimensions_UOM varchar2(50) path 'Product_Dimensions/Product_Dimensions_UOM', " 
				 +" 		Product_Length varchar2(50) path 'Product_Dimensions/Length', " 
				 +" 		Product_Height varchar2(50) path 'Product_Dimensions/Height', " 
				 +" 		Product_Width varchar2(50) path 'Product_Dimensions/Width', " 
				 +" 			/* Added by VK*/  " 
				 +" 		Product_Weight varchar2(40) path 'Product_Weight/Weight', " 
				 +" 		Product_Weight_UOM varchar2(40) path 'Product_Weight/UOM', " 
				 +" 		BOPIS varchar2(60) path 'BOPIS', " 
				 +" 		Gift_Box varchar2(10) path 'Gift_Box', " 
				 +" 		ImportedOrDomestic varchar2(10) path 'if(SourcedDomestically eq \"false\") then \"Imported\" else \"Domestic\"', " 
				 +" 		GXS_Long_Description varchar2(40) path 'GXS_Long_Description', " 
				 +" 		Product_Name varchar2(40) path 'Product_Name', " 
				 +" 		PO_Box_Shippable varchar2(40) path 'PO_Box_Shippable', " 
				 +" 		cOPY_BULLET varchar2(40) path 'cOPY_BULLET',  " 
				 +" 		Fraud_Quantity varchar2(40) path 'Fraud_Quantity'  " 
				 +" 	) p, " 
				 +" 	Input inp " 
				 +"  " 
				 +" 	where    " 
				 +" 	inp.ORIN  = pet.mdmid " 
				 +" ) " 
				 +"  " 
				 +" select  " 
				 +" 	 " 
				 +" 	petCatDet.OmniChannelBrand, " 
				 +" 	petCatDet.Product_Description, " 
				 +" 	petCatDet.Launch_Date, " 
				 +" 	petCatDet.Belk_Exclusive,  " 
				 +" 	petCatDet.Channel_Exclusive,  " 
				 +" 	petCatDet.SDF,  " 
				 +" 	petCatDet.Product_Dimensions_UOM, " 
				 +" 	petCatDet.Product_Length, " 
				 +" 	petCatDet.Product_Height,  " 
				 +" 	petCatDet.Product_Width, " 
				 +" 	petCatDet.BOPIS, " 
				 +" 	petCatDet.Gift_Box,  " 
				 +" 	petCatDet.ImportedOrDomestic,  " 
				 +" 	petCatDet.Product_Weight_UOM, " 
				 +" 	petCatDet.Product_Weight, " 
				 +" 	petCatDet.Long_Description, " 
				 +" 	petCatDet.Product_Name, " 
				 +" 	petCatDet.PO_Box_Shippable, " 
				 +" 	pp.COPY_BULLET, " 
				 +" 	 " 
				 +" 	petCatDet.Fraud_Quantity " 
				 +"  " 
				 +" from " 
				 +" 	petCatalogDet petCatDet , " 
				 +"  " 
				 +" 	XMLTable(' " 
				 +" 		  <out> " 
				 +" 			<COPY_BULLET>  " 
				 +" 			  { " 
				 +" 				for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec/Copy_Bullet " 
				 +" 				  return " 
				 +" 					if (not( ($j) is ($XML_DATA/pim_entry/entry/Ecomm_Style_Spec/Copy_Bullet[1])[1]) and not(empty($j)) and not($j = \"\")) then  " 
				 +" 					   concat(\",\", $j) " 
				 +" 					else " 
				 +" 					   string($j) " 
				 +" 			  } " 
				 +" 			</COPY_BULLET> " 
				 +" 		  </out> " 
				 +" 		  ' " 
				 +" 		  passing petCatDet.XML_DATA as \"XML_DATA\" columns  " 
				 +" 	 " 
				 +" 	COPY_BULLET varchar2(400) path '/out/COPY_BULLET'  " 
				 +" 	) pp " 
				 +" ; " ;
		 System.out.println(defectQuery);
	}
	
	public static void getCarsBrandQuery(String orinNumber, String supplierId){
		 String defectQuery =  " With " 
				 +" Input(SUPPLIER_ID, ORIN)  " 
				 +" AS  " 
				 +" ( SELECT  '"+supplierId+"' SUPPLIER_ID, '"+orinNumber+"' ORIN FROM dual ), " 
				 +"  " 
				 +" referencefirst AS( " 
				 +" SELECT " 
				 +" LISTAGG(CODE,'|') WITHIN GROUP (ORDER BY CODE) CODE, S.SUPPLIERID, ARD.CONTAINER, IP.ORIN " 
				 +" FROM  " 
				 +" VENDORPORTAL.ADSE_REFERENCE_DATA ARD, INPUT IP, " 
				 +" XMLTABLE(' " 
				 +" <category> " 
				 +"   <code>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"     if (not( ($j) is ($XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec[last()])[1] ) and not(empty($j//Code)) and not($j//Code = \"\")) then  " 
				 +" 					   concat(concat($j//Code,\"-\"),$j//Description) " 
				 +" 					else " 
				 +" 					   string(concat(concat($j//Code,\"-\"),$j//Description)) " 
				 +"    }  " 
				 +" </code>  " 
				 +"   <id>{ " 
				 +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +"   return $i//Supplier_Site_ID " 
				 +"   } " 
				 +"   </id>  " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       ARD.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     CODE VARCHAR(100) path '/category/code', " 
				 +"     SUPPLIERID VARCHAR(100) path '/category/id') S " 
				 +" WHERE  " 
				 +" IP.SUPPLIER_ID=S.SUPPLIERID " 
				 +" AND " 
				 +" ARD.CONTAINER = 'Cars_Brand_Names' " 
				 +" GROUP BY " 
				 +" S.SUPPLIERID, ARD.CONTAINER, IP.ORIN), " 
				 +"  " 
				 +" pettable AS( " 
				 +" select RF.CODE, RF.SUPPLIERID, RF.CONTAINER, T.OMNICODE, APC.MDMID " 
				 +" FROM " 
				 +" referencefirst RF, VENDORPORTAL.ADSE_PET_CATALOG APC, " 
				 +" XMLTABLE(' " 
				 +" for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec " 
				 +" let " 
				 +"     $code := $j//Cars_Brand " 
				 +" return " 
				 +"  " 
				 +"   <category> " 
				 +"   <code>{$code}</code>  " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       APC.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     OMNICODE VARCHAR(100) path '/category/code') T " 
				 +" WHERE " 
				 +" APC.MDMID = RF.ORIN) " 
				 +"  " 
				 +" SELECT PT.CODE CAR_BRANDS, " 
				 +" V.CODEDESCRIPTION CAR_BRAND, " 
				 +" PT.SUPPLIERID SUPPLIER,  " 
				 +" PT.CONTAINER CONTAINER_TYPE, " 
				 +" PT.MDMID ORIN " 
				 +" FROM " 
				 +" PETTABLE PT, VENDORPORTAL.ADSE_REFERENCE_DATA ARDT,  " 
				 +" XMLTABLE(' " 
				 +" <category> " 
				 +"   <code>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"        string(concat(concat($j//Code,\"-\"),$j//Description)) " 
				 +"    }  " 
				 +" </code>  " 
				 +"   <id>{ " 
				 +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +"   return $i//Supplier_Site_ID " 
				 +"   } " 
				 +"   </id>  " 
				 +"   <check>{ " 
				 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
				 +" return " 
				 +"        string($j//Code) " 
				 +"    }  " 
				 +" </check> " 
				 +"   </category>' " 
				 +"    passing " 
				 +"       ARDT.xml_data AS \"XML_DATA\" " 
				 +"       COLUMNS  " 
				 +"     CODEDESCRIPTION VARCHAR(100) path '/category/code', " 
				 +"     SUPPLIERIDS VARCHAR(100) path '/category/id', " 
				 +"     IDCHECK VARCHAR(100) path '/category/check') V " 
				 +" WHERE  " 
				 +" PT.SUPPLIERID=V.SUPPLIERIDS " 
				 +" AND " 
				 +" PT.OMNICODE = V.IDCHECK " 
				 +" AND " 
				 +" ARDT.CONTAINER = 'Cars_Brand_Names' ; " ;

				 
				 System.out.println(defectQuery);
	}
	
	public static void getOmniChannelBrandsQuery(String orinNumber, String supplierId){
		
		 String defectQuery  = " With " 
		 +" Input(SUPPLIER_ID, ORIN)  " 
		 +" AS  " 
		 +" ( SELECT  '"+supplierId+"' SUPPLIER_ID, '"+orinNumber+"' ORIN FROM dual ), " 
		 +"  " 
		 +" referencefirst AS( " 
		 +" SELECT " 
		 +" LISTAGG(CODE,'|') WITHIN GROUP (ORDER BY CODE) CODE, S.SUPPLIERID, ARD.CONTAINER, IP.ORIN " 
		 +" FROM  " 
		 +" VENDORPORTAL.ADSE_REFERENCE_DATA ARD, INPUT IP, " 
		 +" XMLTABLE(' " 
		 +" <category> " 
		 +"   <code>{ " 
		 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
		 +" return " 
		 +"     if (not( ($j) is ($XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec[last()])[1] ) and not(empty($j//Code)) and not($j//Code = \"\")) then  " 
		 +" 					   concat(concat($j//Code,\"-\"),$j//Description) " 
		 +" 					else " 
		 +" 					   string(concat(concat($j//Code,\"-\"),$j//Description)) " 
		 +"    }  " 
		 +" </code>  " 
		 +"   <id>{ " 
		 +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
		 +"   return $i//Supplier_Site_ID " 
		 +"   } " 
		 +"   </id>  " 
		 +"   </category>' " 
		 +"    passing " 
		 +"       ARD.xml_data AS \"XML_DATA\" " 
		 +"       COLUMNS  " 
		 +"     CODE VARCHAR(100) path '/category/code', " 
		 +"     SUPPLIERID VARCHAR(100) path '/category/id') S " 
		 +" WHERE  " 
		 +" IP.SUPPLIER_ID=S.SUPPLIERID " 
		 +" AND " 
		 +" ARD.CONTAINER IN ('OmniChannelBrand','Omni_Channel_Brand_Lookup') " 
		 +" GROUP BY " 
		 +" S.SUPPLIERID, ARD.CONTAINER, IP.ORIN), " 
		 +"  " 
		 +" pettable AS( " 
		 +" select RF.CODE, RF.SUPPLIERID, RF.CONTAINER, T.OMNICODE, APC.MDMID " 
		 +" FROM " 
		 +" referencefirst RF, VENDORPORTAL.ADSE_PET_CATALOG APC, " 
		 +" XMLTABLE(' " 
		 +" for $j in $XML_DATA/pim_entry/entry/Ecomm_Style_Spec " 
		 +" let " 
		 +"     $code := $j//OmniChannelBrand " 
		 +" return " 
		 +"  " 
		 +"   <category> " 
		 +"   <code>{$code}</code>  " 
		 +"   </category>' " 
		 +"    passing " 
		 +"       APC.xml_data AS \"XML_DATA\" " 
		 +"       COLUMNS  " 
		 +"     OMNICODE VARCHAR(100) path '/category/code') T " 
		 +" WHERE " 
		 +" APC.MDMID = RF.ORIN) " 
		 +"  " 
		 +" SELECT PT.CODE OMNI_BRANDS, " 
		 +" V.CODEDESCRIPTION OMNI_BRAND, " 
		 +" PT.SUPPLIERID SUPPLIER,  " 
		 +" PT.CONTAINER CONTAINER_TYPE, " 
		 +" PT.MDMID ORIN " 
		 +" FROM " 
		 +" PETTABLE PT, VENDORPORTAL.ADSE_REFERENCE_DATA ARDT,  " 
		 +" XMLTABLE(' " 
		 +" <category> " 
		 +"   <code>{ " 
		 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
		 +" return " 
		 +"        string(concat(concat($j//Code,\"-\"),$j//Description)) " 
		 +"    }  " 
		 +" </code>  " 
		 +"   <id>{ " 
		 +"   for $i in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
		 +"   return $i//Supplier_Site_ID " 
		 +"   } " 
		 +"   </id>  " 
		 +"   <check>{ " 
		 +" for $j in $XML_DATA/pim_entry/entry/Omni_Channel_Brand_LookupSpec " 
		 +" return " 
		 +"        string($j//Code) " 
		 +"    }  " 
		 +" </check> " 
		 +"   </category>' " 
		 +"    passing " 
		 +"       ARDT.xml_data AS \"XML_DATA\" " 
		 +"       COLUMNS  " 
		 +"     CODEDESCRIPTION VARCHAR(100) path '/category/code', " 
		 +"     SUPPLIERIDS VARCHAR(100) path '/category/id', " 
		 +"     IDCHECK VARCHAR(100) path '/category/check') V " 
		 +" WHERE  " 
		 +" PT.SUPPLIERID=V.SUPPLIERIDS " 
		 +" AND " 
		 +" PT.OMNICODE = V.IDCHECK " 
		 +" AND " 
		 +" ARDT.CONTAINER IN ('OmniChannelBrand','Omni_Channel_Brand_Lookup'); " ;
				 System.out.println(defectQuery);

	}
	
	public static void getStyleColorQuery(String orinNumber){
		 String defectQuery  = " With " 
				 +" INPUT(ORIN) AS " 
				 +"   ( " 
				 +"     SELECT " 
				 +"      '"+orinNumber+"' ORIN " 
				 +"     FROM " 
				 +"       dual " 
				 +"   ), " 
				 +"   pettable AS " 
				 +"   ( " 
				 +"   select NRF_Color_Code, " 
				 +"   NRF_Color_Description, " 
				 +"   Secondary_Color_1, " 
				 +"   Secondary_Color_2, " 
				 +"   Secondary_Color_3, " 
				 +"   Secondary_Color_4, " 
				 +"   Omni_Channel_Color, " 
				 +"   Color_Family_Code   " 
				 +"   FROM " 
				 +"   vendorportal.ADSE_PET_CATALOG, " 
				 +"   xmltable('for $i in $pet/pim_entry/entry/Ecomm_StyleColor_Spec return $i' " 
				 +"   passing XML_DATA AS \"pet\" columns  " 
				 +"   NRF_Color_Code          VARCHAR2(40) path  'NRF_Color_Code',  " 
				 +"   NRF_Color_Description   VARCHAR2(40) path  'NRF_Color_Description',  " 
				 +"   Secondary_Color_1       VARCHAR2(40) path  'Secondary_Color_1',  " 
				 +"   Secondary_Color_2       VARCHAR2(40) path  'Secondary_Color_2',  " 
				 +"   Secondary_Color_3       VARCHAR2(40) path  'Secondary_Color_3',  " 
				 +"   Secondary_Color_4       VARCHAR2(40) path  'Secondary_Color_4',  " 
				 +"   Omni_Channel_Color      VARCHAR2(40) path  'Omni_Channel_Color_Description',  " 
				 +"   Color_Family_Code       VARCHAR2(40) path  'Omnichannel_Color_Family' " 
				 +"    ) i, " 
				 +"   Input inp " 
				 +" WHERE " 
				 +"   Entry_Type = 'StyleColor' " 
				 +" AND mdmid    =inp.ORIN " 
				 +" ) " 
				 +" select pt.*, s.code,s.super_Color_name from pettable pt, VENDORPORTAL.ADSE_REFERENCE_DATA ard, " 
				 +" xmltable('for $i in $ref/pim_entry/entry/Omni_Channel_Color_Family_Spec return $i' " 
				 +"   passing ard.XML_DATA AS \"ref\" columns " 
				 +"   Code   VARCHAR2(40) path  'Code', " 
				 +"   SUPER_COLOR_NAME  VARCHAR2(40) path  'SUPER_COLOR_NAME') s " 
				 +"   where  " 
				 +"   ard.Container = 'Omnichannel_Color_Family' " 
				 +"   and  " 
				 +"   pt.Color_Family_Code = s.code " ;
				 System.out.println(defectQuery);
	}
}
